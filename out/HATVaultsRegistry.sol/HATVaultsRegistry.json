{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hatVaultImplementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_hatGovernance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_HAT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bountyGovernanceHAT",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bountyHackerHATVested",
          "type": "uint256"
        },
        {
          "internalType": "contract ITokenLockFactory",
          "name": "_tokenLockFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AmountSwappedLessThanMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AmountToSwapIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChallengePeriodTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChallengePeriodTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChallengeTimeOutPeriodTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChallengeTimeOutPeriodTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DelayTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HatVestingDurationSmallerThanPeriods",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HatVestingDurationTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HatVestingPeriodsCannotBeZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughFeePaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafetyPeriodTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TotalHatsSplitPercentageShouldBeUpToMaxHATSplit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawPeriodTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawRequestEnabledPeriodTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawRequestEnabledPeriodTooShort",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawRequestPendingPeriodTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_descriptionHash",
          "type": "string"
        }
      ],
      "name": "LogClaim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "SetClaimFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_defaultArbitrator",
          "type": "address"
        }
      ],
      "name": "SetDefaultArbitrator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_defaultArbitratorCanChangeBounty",
          "type": "bool"
        }
      ],
      "name": "SetDefaultArbitratorCanChangeBounty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_defaultChallengePeriod",
          "type": "uint256"
        }
      ],
      "name": "SetDefaultChallengePeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_defaultChallengeTimeOutPeriod",
          "type": "uint256"
        }
      ],
      "name": "SetDefaultChallengeTimeOutPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_defaultBountyGovernanceHAT",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_defaultBountyHackerHATVested",
          "type": "uint256"
        }
      ],
      "name": "SetDefaultHATBountySplit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_isEmergencyPaused",
          "type": "bool"
        }
      ],
      "name": "SetEmergencyPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_feeSetter",
          "type": "address"
        }
      ],
      "name": "SetFeeSetter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periods",
          "type": "uint256"
        }
      ],
      "name": "SetHatVestingParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_delay",
          "type": "uint256"
        }
      ],
      "name": "SetMaxBountyDelay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "_visible",
          "type": "bool"
        }
      ],
      "name": "SetVaultVisibility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawRequestPendingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawRequestEnablePeriod",
          "type": "uint256"
        }
      ],
      "name": "SetWithdrawRequestParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_safetyPeriod",
          "type": "uint256"
        }
      ],
      "name": "SetWithdrawSafetyPeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountSwapped",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountSent",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenLock",
          "type": "address"
        }
      ],
      "name": "SwapAndSend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_committee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IRewardController",
          "name": "_rewardController",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_maxBounty",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "hackerVested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hacker",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "committee",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IHATVault.BountySplit",
          "name": "_bountySplit",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_descriptionHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_bountyVestingDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_bountyVestingPeriods",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_isPaused",
          "type": "bool"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "HAT",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HUNDRED_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_HAT_SPLIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_hacker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hackersHatReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_governanceHatReward",
          "type": "uint256"
        }
      ],
      "name": "addTokensToSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_committee",
          "type": "address"
        },
        {
          "internalType": "contract IRewardController",
          "name": "_rewardController",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxBounty",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "hackerVested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hacker",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "committee",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHATVault.BountySplit",
          "name": "_bountySplit",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "_descriptionHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_bountyVestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bountyVestingPeriods",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isPaused",
          "type": "bool"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultArbitrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultArbitratorCanChangeBounty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultBountyGovernanceHAT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultBountyHackerHATVested",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultChallengePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultChallengeTimeOutPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "generalParameters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hatVestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hatVestingPeriods",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "safetyPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawRequestEnablePeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawRequestPendingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "setMaxBountyDelay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGeneralParameters",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "hatVestingDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hatVestingPeriods",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "safetyPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawRequestEnablePeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawRequestPendingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "setMaxBountyDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct IHATVaultsRegistry.GeneralParameters",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfVaults",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "governanceHatReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hackersHatReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hatVaultImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hatVaults",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isEmergencyPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVaultVisible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_descriptionHash",
          "type": "string"
        }
      ],
      "name": "logClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setClaimFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultArbitrator",
          "type": "address"
        }
      ],
      "name": "setDefaultArbitrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_defaultArbitratorCanChangeBounty",
          "type": "bool"
        }
      ],
      "name": "setDefaultArbitratorCanChangeBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultChallengePeriod",
          "type": "uint256"
        }
      ],
      "name": "setDefaultChallengePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultChallengeTimeOutPeriod",
          "type": "uint256"
        }
      ],
      "name": "setDefaultChallengeTimeOutPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultBountyGovernanceHAT",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defaultBountyHackerHATVested",
          "type": "uint256"
        }
      ],
      "name": "setDefaultHATBountySplit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isEmergencyPaused",
          "type": "bool"
        }
      ],
      "name": "setEmergencyPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSetter",
          "type": "address"
        }
      ],
      "name": "setFeeSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_periods",
          "type": "uint256"
        }
      ],
      "name": "setHatVestingParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_delay",
          "type": "uint256"
        }
      ],
      "name": "setMaxBountyDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_visible",
          "type": "bool"
        }
      ],
      "name": "setVaultVisibility",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawRequestPendingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawRequestEnablePeriod",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawRequestParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_safetyPeriod",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawSafetyPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_beneficiaries",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_routingContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_routingPayload",
          "type": "bytes"
        }
      ],
      "name": "swapAndSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenLockFactory",
      "outputs": [
        {
          "internalType": "contract ITokenLockFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_challengePeriod",
          "type": "uint256"
        }
      ],
      "name": "validateChallengePeriod",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_challengeTimeOutPeriod",
          "type": "uint256"
        }
      ],
      "name": "validateChallengeTimeOutPeriod",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bountyGovernanceHAT",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bountyHackerHATVested",
          "type": "uint256"
        }
      ],
      "name": "validateHATSplit",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162002bd838038062002bd88339810160408190526200003491620001d7565b6200003f336200013b565b6200004a856200013b565b6001600160a01b03808716608052841660c0526200006983836200018b565b6001600160a01b0390811660a090815260408051610100810182526276a700808252605a60208301819052619ab0938301849052610e106060840181905262093a80608085018190529584018690526202a30060c08501819052600060e09095018590526005939093556006919091556007939093556008929092556009839055600a92909255600b55600c55600e92909255600f55601080546001600160a01b031916939091169290921790915550506203f480601155622e24806012556013805460ff191660011790556200027c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107d06200019a828462000254565b1115620001ba576040516307af556960e21b815260040160405180910390fd5b5050565b6001600160a01b0381168114620001d457600080fd5b50565b60008060008060008060c08789031215620001f157600080fd5b8651620001fe81620001be565b60208801519096506200021181620001be565b60408801519095506200022481620001be565b80945050606087015192506080870151915060a08701516200024681620001be565b809150509295509295509295565b808201808211156200027657634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c051612910620002c8600039600081816104d3015281816111fe0152611a7f0152600081816102fe01526114d801526000818161038a0152610eb801526129106000f3fe60806040526004361061025c5760003560e01c806370cb13b511610144578063db0f267b116100b6578063e367497d1161007a578063e367497d1461080c578063ea55f18e1461081f578063ebf7830c14610835578063f2fde38b14610855578063f51a90e414610875578063f836c4491461088b57600080fd5b8063db0f267b1461070e578063db3990531461072e578063dd072f031461075e578063df1b1ebe1461077e578063e2b001bf146107ec57600080fd5b8063a8acd94611610108578063a8acd9461461064c578063aec1d1081461066c578063b19805af1461068c578063bcfdfc58146106ac578063c99a02b0146106d9578063d3e0bc56146106f957600080fd5b806370cb13b5146105b9578063715018a6146105d957806387cf3ef4146105ee5780638da5cb5b1461060e5780639d0ab89f1461062c57600080fd5b8063290d10c4116101dd578063354d75b9116101a1578063354d75b9146104f5578063398488eb1461052d578063520a924d1461054d578063544920781461056d5780635dd11415146105835780636ed93dd0146105a357600080fd5b8063290d10c4146103ec5780632ac60b7d1461040b5780632cc85f971461042b5780632e75ab50146104a15780633449a865146104c157600080fd5b8063132b1cc611610224578063132b1cc6146103365780631b2cae6c1461035857806321c0437a1461037857806322f84ada146103ac57806324cda22d146103cc57600080fd5b806306c6e3b81461026157806311566d741461029e578063116dbc93146102c257806311c2aae3146102ec578063120c1a7e14610320575b600080fd5b34801561026d57600080fd5b5061028161027c366004612107565b6108ab565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102aa57600080fd5b506102b460115481565b604051908152602001610295565b3480156102ce57600080fd5b506013546102dc9060ff1681565b6040519015158152602001610295565b3480156102f857600080fd5b506102817f000000000000000000000000000000000000000000000000000000000000000081565b34801561032c57600080fd5b506102b4600f5481565b34801561034257600080fd5b50610356610351366004612120565b6108d5565b005b34801561036457600080fd5b5061035661037336600461215b565b61092f565b34801561038457600080fd5b506102817f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b857600080fd5b506103566103c7366004612107565b61097f565b3480156103d857600080fd5b506103566103e7366004612107565b6109c5565b3480156103f857600080fd5b506013546102dc90610100900460ff1681565b34801561041757600080fd5b50610356610426366004612107565b610a26565b34801561043757600080fd5b50610440610a71565b6040516102959190600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b3480156104ad57600080fd5b506103566104bc366004612107565b610b07565b3480156104cd57600080fd5b506102817f000000000000000000000000000000000000000000000000000000000000000081565b34801561050157600080fd5b506102b4610510366004612198565b600360209081526000928352604080842090915290825290205481565b34801561053957600080fd5b50610356610548366004612120565b610b44565b34801561055957600080fd5b50610356610568366004612120565b610bf7565b34801561057957600080fd5b506102b4600e5481565b34801561058f57600080fd5b5061035661059e3660046121d1565b610c85565b3480156105af57600080fd5b506102b461271081565b3480156105c557600080fd5b506103566105d4366004612120565b610d1c565b3480156105e557600080fd5b50610356610d4c565b3480156105fa57600080fd5b50600d54610281906001600160a01b031681565b34801561061a57600080fd5b506000546001600160a01b0316610281565b34801561063857600080fd5b5061035661064736600461215b565b610d60565b34801561065857600080fd5b50610356610667366004612217565b610db1565b34801561067857600080fd5b50610356610687366004612234565b610e03565b34801561069857600080fd5b506103566106a7366004612217565b610e5f565b3480156106b857600080fd5b506102b46106c7366004612217565b60046020526000908152604090205481565b3480156106e557600080fd5b506102816106f4366004612305565b610eb1565b34801561070557600080fd5b506001546102b4565b34801561071a57600080fd5b50601054610281906001600160a01b031681565b34801561073a57600080fd5b506102dc610749366004612217565b60026020526000908152604090205460ff1681565b34801561076a57600080fd5b50610356610779366004612120565b61104e565b34801561078a57600080fd5b50600554600654600754600854600954600a54600b54600c546107b1979695949392919088565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e082015261010001610295565b3480156107f857600080fd5b50610356610807366004612460565b6110fb565b61035661081a36600461252c565b61170e565b34801561082b57600080fd5b506102b46107d081565b34801561084157600080fd5b50610356610850366004612107565b6117b9565b34801561086157600080fd5b50610356610870366004612217565b611801565b34801561088157600080fd5b506102b460125481565b34801561089757600080fd5b506103566108a6366004612107565b61187c565b600181815481106108bb57600080fd5b6000918252602090912001546001600160a01b0316905081565b6108dd6118c2565b6108e78282610d1c565b600e829055600f81905560408051838152602081018390527f9b9cfb21b737a43af5e89fc41ea51449648ce863399879a0625210588b164e5a91015b60405180910390a15050565b6109376118c2565b6013805460ff19168215159081179091556040519081527f8dd94cb9d51a52430f03387ae2b623450f5bbb1201ce3d08f9dc3561f258cf41906020015b60405180910390a150565b6109876118c2565b610990816117b9565b60118190556040518181527fc14f60dbf7139b2e92ad845e95c05208c6070962e410202d3b8ae7a1378cde3590602001610974565b6109cd6118c2565b6202a3008110156109f15760405163514e00f160e01b815260040160405180910390fd5b600b8190556040518181527fc2f118f047950efbfb94865ef4fc99eedc6b5e992e4fb970552deba4fda0d8e490602001610974565b6202a300811015610a4a57604051630fe180cd60e01b815260040160405180910390fd5b62700f80811115610a6e5760405163599dfd5d60e11b815260040160405180910390fd5b50565b610ab960405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506040805161010081018252600554815260065460208201526007549181019190915260085460608201526009546080820152600a5460a0820152600b5460c0820152600c5460e082015290565b610b0f6118c2565b600c8190556040518181527f13fa675fefcae94b0250d92c1fec53cd08f7031592b28bf9429f840b7d25509790602001610974565b610b4c6118c2565b6276a700821115610b705760405163766cee2b60e01b815260040160405180910390fd5b615460811015610b9357604051638750566960e01b815260040160405180910390fd5b6283d600811115610bb7576040516319979c0960e11b815260040160405180910390fd5b600a829055600981905560408051838152602081018390527f7b8aa35646b8fddc3ccaae8e1069d8c6c365e2ba2e11bb1f0018f8d01992f25b9101610923565b610bff6118c2565b610e10821015610c2257604051639a4e9a8d60e01b815260040160405180910390fd5b615460811115610c45576040516310c4878160e11b815260040160405180910390fd5b6007829055600881905560408051838152602081018390527f47c8a5b15f6172a5053bfac488642484dd38e9c0f3073c23c5d822c4cbab53099101610923565b6000610c91828461257f565b6001600160a01b038087166000908152600360209081526040808320938916835292905290812080549293508592909190610ccd90849061257f565b90915550506001600160a01b03851660009081526004602052604081208054849290610cfa90849061257f565b90915550610d1590506001600160a01b03861633308461191c565b5050505050565b6107d0610d29828461257f565b1115610d48576040516307af556960e21b815260040160405180910390fd5b5050565b610d546118c2565b610d5e600061198d565b565b610d686118c2565b601380548215156101000261ff00199091161790556040517fa18d588b4da0466ca9a3ade6753c1cf94f4ccc599b9134045aeb55aef53293c89061097490831515815260200190565b610db96118c2565b601080546001600160a01b0319166001600160a01b0383169081179091556040517f4664bc54da0879a6626395d3154ebb4adef21b4ced228635ce9583e86148a9a790600090a250565b610e0b6118c2565b6001600160a01b038216600081815260026020526040808220805460ff191685151590811790915590519092917f0f8de79a0a8e021d06491203f918550c01da39c26f2e03c5f5571c75edb7d93791a35050565b610e676118c2565b600d80546001600160a01b0319166001600160a01b0383169081179091556040517f9993507f53024702e2de1be66f6c48c8957ac708927b86b3bdf4e335f586947090600090a250565b6000610edc7f00000000000000000000000000000000000000000000000000000000000000006119dd565b9050806001600160a01b0316637278410d6040518061014001604052808b6001600160a01b031681526020018781526020018681526020018a81526020018981526020018e6001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b031681526020018515158152602001888152506040518263ffffffff1660e01b8152600401610f7591906125e8565b600060405180830381600087803b158015610f8f57600080fd5b505af1158015610fa3573d6000803e3d6000fd5b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03858116918217909255604051918f16935091507f6b9670698cdb09faa8051d300c46f33e8407a000d9fac8273c30335c5418f33690611038908d908d908d908d908d908d908d908d906126bd565b60405180910390a39a9950505050505050505050565b6110566118c2565b62ed4e0082106110795760405163181b6a8d60e01b815260040160405180910390fd5b8060000361109a5760405163497a0fc360e01b815260040160405180910390fd5b808210156110bb576040516301a127dd60e51b815260040160405180910390fd5b6005829055600681905560408051838152602081018390527fa3d5527033c65a7e5eda0ffec2fe75b8bfc358a419914452e5e29993f531136d9101610923565b6111036118c2565b6111356040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03881660009081526004602052604081205482525b868110156111d7576001600160a01b03891660009081526003602052604081209089898481811061118457611184612735565b90506020020160208101906111999190612217565b6001600160a01b03168152602081019190915260400160002054825183906111c290839061257f565b905250806111cf8161274b565b915050611151565b5080516000036111fa5760405163dbe66a0f60e01b815260040160405180910390fd5b80517f00000000000000000000000000000000000000000000000000000000000000009061122d908a9088888888611a7a565b602080850191825260408086019390935284516001600160a01b038d166000908152600490925292902054905184516112669190612764565b6112709190612777565b61127a9190612796565b608083015281516001600160a01b038a16600090815260046020908152604090912054908401516112ab9190612777565b6112b59190612796565b6001600160a01b038a166000908152600460205260408120919091555b878110156116605782516001600160a01b038b166000908152600360205260408120909190828c8c8681811061130a5761130a612735565b905060200201602081019061131f9190612217565b6001600160a01b03166001600160a01b0316815260200190815260200160002054856040015161134f9190612777565b6113599190612796565b84516001600160a01b038d16600090815260036020526040812092935091828d8d8781811061138a5761138a612735565b905060200201602081019061139f9190612217565b6001600160a01b03168152602080820192909252604001600020549087015187516113ca9190612764565b6113d49190612777565b6113de9190612796565b905081856060018181516113f2919061257f565b90525084516001600160a01b038d166000908152600360205260408120908d8d8781811061142257611422612735565b90506020020160208101906114379190612217565b6001600160a01b03166001600160a01b031681526020019081526020016000205486602001516114679190612777565b6114719190612796565b6001600160a01b038d166000908152600360205260408120908d8d8781811061149c5761149c612735565b90506020020160208101906114b19190612217565b6001600160a01b03168152602081019190915260400160009081209190915582156115ce577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e95cd0518660008f8f8981811061151a5761151a612735565b905060200201602081019061152f9190612217565b60055488904290611540908261257f565b6006546040516001600160e01b031960e08a901b168152611575979695949392919060009081906002906001906004016127b8565b6020604051808303816000875af1158015611594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b89190612848565b90506115ce6001600160a01b0386168285611d68565b806001600160a01b03168c8c868181106115ea576115ea612735565b90506020020160208101906115ff9190612217565b6001600160a01b03167f4f8abed31d725d1e727a30b06defad85513b99ee0d373925f63d71e099edaa308486604051611642929190918252602082015260400190565b60405180910390a350505080806116589061274b565b9150506112d2565b5061169b6116766000546001600160a01b031690565b8360600151846040015161168a9190612764565b6001600160a01b0384169190611d68565b600080546001600160a01b03166001600160a01b03167f4f8abed31d725d1e727a30b06defad85513b99ee0d373925f63d71e099edaa308460800151856060015186604001516116eb9190612764565b6040805192835260208301919091520160405180910390a3505050505050505050565b600c541561177557600c5434101561173957604051633244470d60e01b815260040160405180910390fd5b600080546040516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015611773573d6000803e3d6000fd5b505b336001600160a01b03167f9fcc410c642f895d8e83453cc710a30c7f00e42070fb7fd399c29b24781615e8826040516117ae9190612865565b60405180910390a250565b620151808110156117dd57604051633a50e6a160e01b815260040160405180910390fd5b62069780811115610a6e576040516317b7efeb60e11b815260040160405180910390fd5b6118096118c2565b6001600160a01b0381166118735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610a6e8161198d565b6118846118c2565b61188d81610a26565b60128190556040518181527fe6f3ddadc73ca32beb7d9755d5a7d82ab53101c097e743fd05412e6a1ce9deb990602001610974565b6000546001600160a01b03163314610d5e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161186a565b6040516001600160a01b03808516602483015283166044820152606481018290526119879085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d9d565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116611a755760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161186a565b919050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03808216908a1603611abe578760009250925050611d5d565b611ad26001600160a01b038a16878a611e6f565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3d9190612878565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038c16906370a0823190602401602060405180830381865afa158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab9190612878565b90506000886001600160a01b03168888604051611bc9929190612891565b6000604051808303816000865af19150503d8060008114611c06576040519150601f19603f3d011682016040523d82523d6000602084013e611c0b565b606091505b5050905080611c2d5760405163081ceff360e41b815260040160405180910390fd5b6040516370a0823160e01b815230600482015283906001600160a01b038616906370a0823190602401602060405180830381865afa158015611c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c979190612878565b611ca19190612764565b6040516370a0823160e01b81523060048201529096506001600160a01b038d16906370a0823190602401602060405180830381865afa158015611ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0c9190612878565b611d169083612764565b611d20908c612764565b945089861015611d4357604051638a866e2560e01b815260040160405180910390fd5b611d586001600160a01b038d168a6000611e6f565b505050505b965096945050505050565b6040516001600160a01b038316602482015260448101829052611d9890849063a9059cbb60e01b90606401611950565b505050565b6000611df2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f849092919063ffffffff16565b805190915015611d985780806020019051810190611e1091906128a1565b611d985760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161186a565b801580611ee95750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee79190612878565b155b611f545760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161186a565b6040516001600160a01b038316602482015260448101829052611d9890849063095ea7b360e01b90606401611950565b6060611f938484600085611f9d565b90505b9392505050565b606082471015611ffe5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161186a565b6001600160a01b0385163b6120555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161186a565b600080866001600160a01b0316858760405161207191906128be565b60006040518083038185875af1925050503d80600081146120ae576040519150601f19603f3d011682016040523d82523d6000602084013e6120b3565b606091505b50915091506120c38282866120ce565b979650505050505050565b606083156120dd575081611f96565b8251156120ed5782518084602001fd5b8160405162461bcd60e51b815260040161186a9190612865565b60006020828403121561211957600080fd5b5035919050565b6000806040838503121561213357600080fd5b50508035926020909101359150565b8015158114610a6e57600080fd5b8035611a7581612142565b60006020828403121561216d57600080fd5b8135611f9681612142565b6001600160a01b0381168114610a6e57600080fd5b8035611a7581612178565b600080604083850312156121ab57600080fd5b82356121b681612178565b915060208301356121c681612178565b809150509250929050565b600080600080608085870312156121e757600080fd5b84356121f281612178565b9350602085013561220281612178565b93969395505050506040820135916060013590565b60006020828403121561222957600080fd5b8135611f9681612178565b6000806040838503121561224757600080fd5b823561225281612178565b915060208301356121c681612142565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261228957600080fd5b813567ffffffffffffffff808211156122a4576122a4612262565b604051601f8301601f19908116603f011681019082821181831017156122cc576122cc612262565b816040528381528660208588010111156122e557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806000808a8c0361018081121561232657600080fd5b8b3561233181612178565b9a5060208c013561234181612178565b995060408c013561235181612178565b985060608c013561236181612178565b975060808c013596506060609f198201121561237c57600080fd5b506040516060810167ffffffffffffffff82821081831117156123a1576123a1612262565b8160405260a08e0135835260c08e0135602084015260e08e013560408401528297506101008e01359250808311156123d857600080fd5b50506123e68d828e01612278565b9450506101208b013592506101408b013591506124066101608c01612150565b90509295989b9194979a5092959850565b60008083601f84011261242957600080fd5b50813567ffffffffffffffff81111561244157600080fd5b60208301915083602082850101111561245957600080fd5b9250929050565b600080600080600080600060a0888a03121561247b57600080fd5b873561248681612178565b9650602088013567ffffffffffffffff808211156124a357600080fd5b818a0191508a601f8301126124b757600080fd5b8135818111156124c657600080fd5b8b60208260051b85010111156124db57600080fd5b602083019850965060408a013595506124f660608b0161218d565b945060808a013591508082111561250c57600080fd5b506125198a828b01612417565b989b979a50959850939692959293505050565b60006020828403121561253e57600080fd5b813567ffffffffffffffff81111561255557600080fd5b61256184828501612278565b949350505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561259257612592612569565b92915050565b60005b838110156125b357818101518382015260200161259b565b50506000910152565b600081518084526125d4816020860160208601612598565b601f01601f19169290920160200192915050565b602081526126026020820183516001600160a01b03169052565b6020820151604082015260408201516060820152606082015160808201526000608083015161264860a08401828051825260208082015190830152604090810151910152565b5060a0830151610100612665818501836001600160a01b03169052565b60c08501519150610120612683818601846001600160a01b03169052565b60e08601516001600160a01b03166101408601529085015115156101608501528401516101808085015290506125616101a08401826125bc565b6001600160a01b038981168252881660208201526040810187905260006101406126fe60608401898051825260208082015190830152604090810151910152565b8060c0840152612710818401886125bc565b60e0840196909652505061010081019290925215156101209091015295945050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161275d5761275d612569565b5060010190565b8181038181111561259257612592612569565b600081600019048311821515161561279157612791612569565b500290565b6000826127b357634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b038c811682528b811660208301528a166040820152606081018990526080810188905260a0810187905260c0810186905260e08101859052610100810184905261016081016003841061282257634e487b7160e01b600052602160045260246000fd5b8361012083015261283861014083018415159052565b9c9b505050505050505050505050565b60006020828403121561285a57600080fd5b8151611f9681612178565b602081526000611f9660208301846125bc565b60006020828403121561288a57600080fd5b5051919050565b8183823760009101908152919050565b6000602082840312156128b357600080fd5b8151611f9681612142565b600082516128d0818460208701612598565b919091019291505056fea26469706673582212208b07f71776f98e64dda93b1339d329e0b4c350c41c4551b074e9b9049bfaccb764736f6c63430008100033",
    "sourceMap": "1582:17074:3:-:0;;;4320:1188;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:38;719:10:53;936:18:38;:32::i;:::-;4566:34:3;4585:14;4566:18;:34::i;:::-;-1:-1:-1;;;;;4610:48:3;;;;;4668:18;;;;4697:62;4714:20;4736:22;4697:16;:62::i;:::-;-1:-1:-1;;;;;4769:36:3;;;;;;;4835:360;;;;;;;;4906:7;4835:360;;;4946:2;4835:360;;;;;;4978:8;4835:360;;;;;;5014:7;-1:-1:-1;4835:360:3;;;;;5103:6;4835:360;;;;;;;;;;;;5054:6;4835:360;;;;;;-1:-1:-1;4835:360:3;;;;;;;4815:17;:380;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5206:26;:49;;;;5265:28;:53;5328:17;:34;;-1:-1:-1;;;;;;5328:34:3;;;;;;;;;;;;-1:-1:-1;;5397:6:3;5372:22;:31;5445:7;5413:29;:39;5462:32;:39;;-1:-1:-1;;5462:39:3;-1:-1:-1;5462:39:3;;;1582:17074;;2433:187:38;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:38;;;-1:-1:-1;;;;;;2541:17:38;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;16278:252:3:-;2099:4;16392:45;16415:22;16392:20;:45;:::i;:::-;:61;16388:135;;;16474:49;;-1:-1:-1;;;16474:49:3;;;;;;;;;;;16388:135;16278:252;;:::o;14:131:62:-;-1:-1:-1;;;;;89:31:62;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:804::-;291:6;299;307;315;323;331;384:3;372:9;363:7;359:23;355:33;352:53;;;401:1;398;391:12;352:53;433:9;427:16;452:31;477:5;452:31;:::i;:::-;552:2;537:18;;531:25;502:5;;-1:-1:-1;565:33:62;531:25;565:33;:::i;:::-;669:2;654:18;;648:25;617:7;;-1:-1:-1;682:33:62;648:25;682:33;:::i;:::-;734:7;724:17;;;781:2;770:9;766:18;760:25;750:35;;825:3;814:9;810:19;804:26;794:36;;875:3;864:9;860:19;854:26;889:33;914:7;889:33;:::i;:::-;941:7;931:17;;;150:804;;;;;;;;:::o;959:222::-;1024:9;;;1045:10;;;1042:133;;;1097:10;1092:3;1088:20;1085:1;1078:31;1132:4;1129:1;1122:15;1160:4;1157:1;1150:15;1042:133;959:222;;;;:::o;:::-;1582:17074:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061025c5760003560e01c806370cb13b511610144578063db0f267b116100b6578063e367497d1161007a578063e367497d1461080c578063ea55f18e1461081f578063ebf7830c14610835578063f2fde38b14610855578063f51a90e414610875578063f836c4491461088b57600080fd5b8063db0f267b1461070e578063db3990531461072e578063dd072f031461075e578063df1b1ebe1461077e578063e2b001bf146107ec57600080fd5b8063a8acd94611610108578063a8acd9461461064c578063aec1d1081461066c578063b19805af1461068c578063bcfdfc58146106ac578063c99a02b0146106d9578063d3e0bc56146106f957600080fd5b806370cb13b5146105b9578063715018a6146105d957806387cf3ef4146105ee5780638da5cb5b1461060e5780639d0ab89f1461062c57600080fd5b8063290d10c4116101dd578063354d75b9116101a1578063354d75b9146104f5578063398488eb1461052d578063520a924d1461054d578063544920781461056d5780635dd11415146105835780636ed93dd0146105a357600080fd5b8063290d10c4146103ec5780632ac60b7d1461040b5780632cc85f971461042b5780632e75ab50146104a15780633449a865146104c157600080fd5b8063132b1cc611610224578063132b1cc6146103365780631b2cae6c1461035857806321c0437a1461037857806322f84ada146103ac57806324cda22d146103cc57600080fd5b806306c6e3b81461026157806311566d741461029e578063116dbc93146102c257806311c2aae3146102ec578063120c1a7e14610320575b600080fd5b34801561026d57600080fd5b5061028161027c366004612107565b6108ab565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102aa57600080fd5b506102b460115481565b604051908152602001610295565b3480156102ce57600080fd5b506013546102dc9060ff1681565b6040519015158152602001610295565b3480156102f857600080fd5b506102817f000000000000000000000000000000000000000000000000000000000000000081565b34801561032c57600080fd5b506102b4600f5481565b34801561034257600080fd5b50610356610351366004612120565b6108d5565b005b34801561036457600080fd5b5061035661037336600461215b565b61092f565b34801561038457600080fd5b506102817f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b857600080fd5b506103566103c7366004612107565b61097f565b3480156103d857600080fd5b506103566103e7366004612107565b6109c5565b3480156103f857600080fd5b506013546102dc90610100900460ff1681565b34801561041757600080fd5b50610356610426366004612107565b610a26565b34801561043757600080fd5b50610440610a71565b6040516102959190600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b3480156104ad57600080fd5b506103566104bc366004612107565b610b07565b3480156104cd57600080fd5b506102817f000000000000000000000000000000000000000000000000000000000000000081565b34801561050157600080fd5b506102b4610510366004612198565b600360209081526000928352604080842090915290825290205481565b34801561053957600080fd5b50610356610548366004612120565b610b44565b34801561055957600080fd5b50610356610568366004612120565b610bf7565b34801561057957600080fd5b506102b4600e5481565b34801561058f57600080fd5b5061035661059e3660046121d1565b610c85565b3480156105af57600080fd5b506102b461271081565b3480156105c557600080fd5b506103566105d4366004612120565b610d1c565b3480156105e557600080fd5b50610356610d4c565b3480156105fa57600080fd5b50600d54610281906001600160a01b031681565b34801561061a57600080fd5b506000546001600160a01b0316610281565b34801561063857600080fd5b5061035661064736600461215b565b610d60565b34801561065857600080fd5b50610356610667366004612217565b610db1565b34801561067857600080fd5b50610356610687366004612234565b610e03565b34801561069857600080fd5b506103566106a7366004612217565b610e5f565b3480156106b857600080fd5b506102b46106c7366004612217565b60046020526000908152604090205481565b3480156106e557600080fd5b506102816106f4366004612305565b610eb1565b34801561070557600080fd5b506001546102b4565b34801561071a57600080fd5b50601054610281906001600160a01b031681565b34801561073a57600080fd5b506102dc610749366004612217565b60026020526000908152604090205460ff1681565b34801561076a57600080fd5b50610356610779366004612120565b61104e565b34801561078a57600080fd5b50600554600654600754600854600954600a54600b54600c546107b1979695949392919088565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e082015261010001610295565b3480156107f857600080fd5b50610356610807366004612460565b6110fb565b61035661081a36600461252c565b61170e565b34801561082b57600080fd5b506102b46107d081565b34801561084157600080fd5b50610356610850366004612107565b6117b9565b34801561086157600080fd5b50610356610870366004612217565b611801565b34801561088157600080fd5b506102b460125481565b34801561089757600080fd5b506103566108a6366004612107565b61187c565b600181815481106108bb57600080fd5b6000918252602090912001546001600160a01b0316905081565b6108dd6118c2565b6108e78282610d1c565b600e829055600f81905560408051838152602081018390527f9b9cfb21b737a43af5e89fc41ea51449648ce863399879a0625210588b164e5a91015b60405180910390a15050565b6109376118c2565b6013805460ff19168215159081179091556040519081527f8dd94cb9d51a52430f03387ae2b623450f5bbb1201ce3d08f9dc3561f258cf41906020015b60405180910390a150565b6109876118c2565b610990816117b9565b60118190556040518181527fc14f60dbf7139b2e92ad845e95c05208c6070962e410202d3b8ae7a1378cde3590602001610974565b6109cd6118c2565b6202a3008110156109f15760405163514e00f160e01b815260040160405180910390fd5b600b8190556040518181527fc2f118f047950efbfb94865ef4fc99eedc6b5e992e4fb970552deba4fda0d8e490602001610974565b6202a300811015610a4a57604051630fe180cd60e01b815260040160405180910390fd5b62700f80811115610a6e5760405163599dfd5d60e11b815260040160405180910390fd5b50565b610ab960405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b506040805161010081018252600554815260065460208201526007549181019190915260085460608201526009546080820152600a5460a0820152600b5460c0820152600c5460e082015290565b610b0f6118c2565b600c8190556040518181527f13fa675fefcae94b0250d92c1fec53cd08f7031592b28bf9429f840b7d25509790602001610974565b610b4c6118c2565b6276a700821115610b705760405163766cee2b60e01b815260040160405180910390fd5b615460811015610b9357604051638750566960e01b815260040160405180910390fd5b6283d600811115610bb7576040516319979c0960e11b815260040160405180910390fd5b600a829055600981905560408051838152602081018390527f7b8aa35646b8fddc3ccaae8e1069d8c6c365e2ba2e11bb1f0018f8d01992f25b9101610923565b610bff6118c2565b610e10821015610c2257604051639a4e9a8d60e01b815260040160405180910390fd5b615460811115610c45576040516310c4878160e11b815260040160405180910390fd5b6007829055600881905560408051838152602081018390527f47c8a5b15f6172a5053bfac488642484dd38e9c0f3073c23c5d822c4cbab53099101610923565b6000610c91828461257f565b6001600160a01b038087166000908152600360209081526040808320938916835292905290812080549293508592909190610ccd90849061257f565b90915550506001600160a01b03851660009081526004602052604081208054849290610cfa90849061257f565b90915550610d1590506001600160a01b03861633308461191c565b5050505050565b6107d0610d29828461257f565b1115610d48576040516307af556960e21b815260040160405180910390fd5b5050565b610d546118c2565b610d5e600061198d565b565b610d686118c2565b601380548215156101000261ff00199091161790556040517fa18d588b4da0466ca9a3ade6753c1cf94f4ccc599b9134045aeb55aef53293c89061097490831515815260200190565b610db96118c2565b601080546001600160a01b0319166001600160a01b0383169081179091556040517f4664bc54da0879a6626395d3154ebb4adef21b4ced228635ce9583e86148a9a790600090a250565b610e0b6118c2565b6001600160a01b038216600081815260026020526040808220805460ff191685151590811790915590519092917f0f8de79a0a8e021d06491203f918550c01da39c26f2e03c5f5571c75edb7d93791a35050565b610e676118c2565b600d80546001600160a01b0319166001600160a01b0383169081179091556040517f9993507f53024702e2de1be66f6c48c8957ac708927b86b3bdf4e335f586947090600090a250565b6000610edc7f00000000000000000000000000000000000000000000000000000000000000006119dd565b9050806001600160a01b0316637278410d6040518061014001604052808b6001600160a01b031681526020018781526020018681526020018a81526020018981526020018e6001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b031681526020018515158152602001888152506040518263ffffffff1660e01b8152600401610f7591906125e8565b600060405180830381600087803b158015610f8f57600080fd5b505af1158015610fa3573d6000803e3d6000fd5b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03858116918217909255604051918f16935091507f6b9670698cdb09faa8051d300c46f33e8407a000d9fac8273c30335c5418f33690611038908d908d908d908d908d908d908d908d906126bd565b60405180910390a39a9950505050505050505050565b6110566118c2565b62ed4e0082106110795760405163181b6a8d60e01b815260040160405180910390fd5b8060000361109a5760405163497a0fc360e01b815260040160405180910390fd5b808210156110bb576040516301a127dd60e51b815260040160405180910390fd5b6005829055600681905560408051838152602081018390527fa3d5527033c65a7e5eda0ffec2fe75b8bfc358a419914452e5e29993f531136d9101610923565b6111036118c2565b6111356040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03881660009081526004602052604081205482525b868110156111d7576001600160a01b03891660009081526003602052604081209089898481811061118457611184612735565b90506020020160208101906111999190612217565b6001600160a01b03168152602081019190915260400160002054825183906111c290839061257f565b905250806111cf8161274b565b915050611151565b5080516000036111fa5760405163dbe66a0f60e01b815260040160405180910390fd5b80517f00000000000000000000000000000000000000000000000000000000000000009061122d908a9088888888611a7a565b602080850191825260408086019390935284516001600160a01b038d166000908152600490925292902054905184516112669190612764565b6112709190612777565b61127a9190612796565b608083015281516001600160a01b038a16600090815260046020908152604090912054908401516112ab9190612777565b6112b59190612796565b6001600160a01b038a166000908152600460205260408120919091555b878110156116605782516001600160a01b038b166000908152600360205260408120909190828c8c8681811061130a5761130a612735565b905060200201602081019061131f9190612217565b6001600160a01b03166001600160a01b0316815260200190815260200160002054856040015161134f9190612777565b6113599190612796565b84516001600160a01b038d16600090815260036020526040812092935091828d8d8781811061138a5761138a612735565b905060200201602081019061139f9190612217565b6001600160a01b03168152602080820192909252604001600020549087015187516113ca9190612764565b6113d49190612777565b6113de9190612796565b905081856060018181516113f2919061257f565b90525084516001600160a01b038d166000908152600360205260408120908d8d8781811061142257611422612735565b90506020020160208101906114379190612217565b6001600160a01b03166001600160a01b031681526020019081526020016000205486602001516114679190612777565b6114719190612796565b6001600160a01b038d166000908152600360205260408120908d8d8781811061149c5761149c612735565b90506020020160208101906114b19190612217565b6001600160a01b03168152602081019190915260400160009081209190915582156115ce577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e95cd0518660008f8f8981811061151a5761151a612735565b905060200201602081019061152f9190612217565b60055488904290611540908261257f565b6006546040516001600160e01b031960e08a901b168152611575979695949392919060009081906002906001906004016127b8565b6020604051808303816000875af1158015611594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b89190612848565b90506115ce6001600160a01b0386168285611d68565b806001600160a01b03168c8c868181106115ea576115ea612735565b90506020020160208101906115ff9190612217565b6001600160a01b03167f4f8abed31d725d1e727a30b06defad85513b99ee0d373925f63d71e099edaa308486604051611642929190918252602082015260400190565b60405180910390a350505080806116589061274b565b9150506112d2565b5061169b6116766000546001600160a01b031690565b8360600151846040015161168a9190612764565b6001600160a01b0384169190611d68565b600080546001600160a01b03166001600160a01b03167f4f8abed31d725d1e727a30b06defad85513b99ee0d373925f63d71e099edaa308460800151856060015186604001516116eb9190612764565b6040805192835260208301919091520160405180910390a3505050505050505050565b600c541561177557600c5434101561173957604051633244470d60e01b815260040160405180910390fd5b600080546040516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015611773573d6000803e3d6000fd5b505b336001600160a01b03167f9fcc410c642f895d8e83453cc710a30c7f00e42070fb7fd399c29b24781615e8826040516117ae9190612865565b60405180910390a250565b620151808110156117dd57604051633a50e6a160e01b815260040160405180910390fd5b62069780811115610a6e576040516317b7efeb60e11b815260040160405180910390fd5b6118096118c2565b6001600160a01b0381166118735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610a6e8161198d565b6118846118c2565b61188d81610a26565b60128190556040518181527fe6f3ddadc73ca32beb7d9755d5a7d82ab53101c097e743fd05412e6a1ce9deb990602001610974565b6000546001600160a01b03163314610d5e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161186a565b6040516001600160a01b03808516602483015283166044820152606481018290526119879085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d9d565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116611a755760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161186a565b919050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03808216908a1603611abe578760009250925050611d5d565b611ad26001600160a01b038a16878a611e6f565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3d9190612878565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038c16906370a0823190602401602060405180830381865afa158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab9190612878565b90506000886001600160a01b03168888604051611bc9929190612891565b6000604051808303816000865af19150503d8060008114611c06576040519150601f19603f3d011682016040523d82523d6000602084013e611c0b565b606091505b5050905080611c2d5760405163081ceff360e41b815260040160405180910390fd5b6040516370a0823160e01b815230600482015283906001600160a01b038616906370a0823190602401602060405180830381865afa158015611c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c979190612878565b611ca19190612764565b6040516370a0823160e01b81523060048201529096506001600160a01b038d16906370a0823190602401602060405180830381865afa158015611ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0c9190612878565b611d169083612764565b611d20908c612764565b945089861015611d4357604051638a866e2560e01b815260040160405180910390fd5b611d586001600160a01b038d168a6000611e6f565b505050505b965096945050505050565b6040516001600160a01b038316602482015260448101829052611d9890849063a9059cbb60e01b90606401611950565b505050565b6000611df2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f849092919063ffffffff16565b805190915015611d985780806020019051810190611e1091906128a1565b611d985760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161186a565b801580611ee95750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee79190612878565b155b611f545760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161186a565b6040516001600160a01b038316602482015260448101829052611d9890849063095ea7b360e01b90606401611950565b6060611f938484600085611f9d565b90505b9392505050565b606082471015611ffe5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161186a565b6001600160a01b0385163b6120555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161186a565b600080866001600160a01b0316858760405161207191906128be565b60006040518083038185875af1925050503d80600081146120ae576040519150601f19603f3d011682016040523d82523d6000602084013e6120b3565b606091505b50915091506120c38282866120ce565b979650505050505050565b606083156120dd575081611f96565b8251156120ed5782518084602001fd5b8160405162461bcd60e51b815260040161186a9190612865565b60006020828403121561211957600080fd5b5035919050565b6000806040838503121561213357600080fd5b50508035926020909101359150565b8015158114610a6e57600080fd5b8035611a7581612142565b60006020828403121561216d57600080fd5b8135611f9681612142565b6001600160a01b0381168114610a6e57600080fd5b8035611a7581612178565b600080604083850312156121ab57600080fd5b82356121b681612178565b915060208301356121c681612178565b809150509250929050565b600080600080608085870312156121e757600080fd5b84356121f281612178565b9350602085013561220281612178565b93969395505050506040820135916060013590565b60006020828403121561222957600080fd5b8135611f9681612178565b6000806040838503121561224757600080fd5b823561225281612178565b915060208301356121c681612142565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261228957600080fd5b813567ffffffffffffffff808211156122a4576122a4612262565b604051601f8301601f19908116603f011681019082821181831017156122cc576122cc612262565b816040528381528660208588010111156122e557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806000808a8c0361018081121561232657600080fd5b8b3561233181612178565b9a5060208c013561234181612178565b995060408c013561235181612178565b985060608c013561236181612178565b975060808c013596506060609f198201121561237c57600080fd5b506040516060810167ffffffffffffffff82821081831117156123a1576123a1612262565b8160405260a08e0135835260c08e0135602084015260e08e013560408401528297506101008e01359250808311156123d857600080fd5b50506123e68d828e01612278565b9450506101208b013592506101408b013591506124066101608c01612150565b90509295989b9194979a5092959850565b60008083601f84011261242957600080fd5b50813567ffffffffffffffff81111561244157600080fd5b60208301915083602082850101111561245957600080fd5b9250929050565b600080600080600080600060a0888a03121561247b57600080fd5b873561248681612178565b9650602088013567ffffffffffffffff808211156124a357600080fd5b818a0191508a601f8301126124b757600080fd5b8135818111156124c657600080fd5b8b60208260051b85010111156124db57600080fd5b602083019850965060408a013595506124f660608b0161218d565b945060808a013591508082111561250c57600080fd5b506125198a828b01612417565b989b979a50959850939692959293505050565b60006020828403121561253e57600080fd5b813567ffffffffffffffff81111561255557600080fd5b61256184828501612278565b949350505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561259257612592612569565b92915050565b60005b838110156125b357818101518382015260200161259b565b50506000910152565b600081518084526125d4816020860160208601612598565b601f01601f19169290920160200192915050565b602081526126026020820183516001600160a01b03169052565b6020820151604082015260408201516060820152606082015160808201526000608083015161264860a08401828051825260208082015190830152604090810151910152565b5060a0830151610100612665818501836001600160a01b03169052565b60c08501519150610120612683818601846001600160a01b03169052565b60e08601516001600160a01b03166101408601529085015115156101608501528401516101808085015290506125616101a08401826125bc565b6001600160a01b038981168252881660208201526040810187905260006101406126fe60608401898051825260208082015190830152604090810151910152565b8060c0840152612710818401886125bc565b60e0840196909652505061010081019290925215156101209091015295945050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161275d5761275d612569565b5060010190565b8181038181111561259257612592612569565b600081600019048311821515161561279157612791612569565b500290565b6000826127b357634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b038c811682528b811660208301528a166040820152606081018990526080810188905260a0810187905260c0810186905260e08101859052610100810184905261016081016003841061282257634e487b7160e01b600052602160045260246000fd5b8361012083015261283861014083018415159052565b9c9b505050505050505050505050565b60006020828403121561285a57600080fd5b8151611f9681612178565b602081526000611f9660208301846125bc565b60006020828403121561288a57600080fd5b5051919050565b8183823760009101908152919050565b6000602082840312156128b357600080fd5b8151611f9681612142565b600082516128d0818460208701612598565b919091019291505056fea26469706673582212208b07f71776f98e64dda93b1339d329e0b4c350c41c4551b074e9b9049bfaccb764736f6c63430008100033",
    "sourceMap": "1582:17074:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2163:26;;;;;;;;;;-1:-1:-1;2163:26:3;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;472:32:62;;;454:51;;442:2;427:18;2163:26:3;;;;;;;;3390:37;;;;;;;;;;;;;;;;;;;662:25:62;;;650:2;635:18;3390:37:3;516:177:62;3483:44:3;;;;;;;;;;-1:-1:-1;3483:44:3;;;;;;;;;;;959:14:62;;952:22;934:41;;922:2;907:18;3483:44:3;794:187:62;2589:51:3;;;;;;;;;;;;;;;3302:43;;;;;;;;;;;;;;;;6274:480;;;;;;;;;;-1:-1:-1;6274:480:3;;;;;:::i;:::-;;:::i;:::-;;7870:274;;;;;;;;;;-1:-1:-1;7870:274:3;;;;;:::i;:::-;;:::i;2110:47::-;;;;;;;;;;;;;;;7093:275;;;;;;;;;;-1:-1:-1;7093:275:3;;;;;:::i;:::-;;:::i;10519:216::-;;;;;;;;;;-1:-1:-1;10519:216:3;;;;;:::i;:::-;;:::i;3534:29::-;;;;;;;;;;-1:-1:-1;3534:29:3;;;;;;;;;;;16910:266;;;;;;;;;;-1:-1:-1;16910:266:3;;;;;:::i;:::-;;:::i;15919:122::-;;;;;;;;;;;;;:::i;:::-;;;;;;2137:4:62;2179:3;2168:9;2164:19;2156:27;;2216:6;2210:13;2199:9;2192:32;2280:4;2272:6;2268:17;2262:24;2255:4;2244:9;2240:20;2233:54;2343:4;2335:6;2331:17;2325:24;2318:4;2307:9;2303:20;2296:54;2406:4;2398:6;2394:17;2388:24;2381:4;2370:9;2366:20;2359:54;2469:4;2461:6;2457:17;2451:24;2444:4;2433:9;2429:20;2422:54;2532:4;2524:6;2520:17;2514:24;2507:4;2496:9;2492:20;2485:54;2595:4;2587:6;2583:17;2577:24;2570:4;2559:9;2555:20;2548:54;2658:4;2650:6;2646:17;2640:24;2633:4;2622:9;2618:20;2611:54;1975:696;;;;;9255:136:3;;;;;;;;;;-1:-1:-1;9255:136:3;;;;;:::i;:::-;;:::i;2792:27::-;;;;;;;;;;;;;;;2328:71;;;;;;;;;;-1:-1:-1;2328:71:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8426:766;;;;;;;;;;-1:-1:-1;8426:766:3;;;;;:::i;:::-;;:::i;9466:433::-;;;;;;;;;;-1:-1:-1;9466:433:3;;;;;:::i;:::-;;:::i;3139:41::-;;;;;;;;;;;;;;;;12474:446;;;;;;;;;;-1:-1:-1;12474:446:3;;;;;:::i;:::-;;:::i;1931:47::-;;;;;;;;;;;;1973:5;1931:47;;16278:252;;;;;;;;;;-1:-1:-1;16278:252:3;;;;;:::i;:::-;;:::i;1831:101:38:-;;;;;;;;;;;;;:::i;2687:24:3:-;;;;;;;;;;-1:-1:-1;2687:24:3;;;;-1:-1:-1;;;;;2687:24:3;;;1201:85:38;;;;;;;;;;-1:-1:-1;1247:7:38;1273:6;-1:-1:-1;;;;;1273:6:38;1201:85;;5578:180:3;;;;;;;;;;-1:-1:-1;5578:180:3;;;;;:::i;:::-;;:::i;6829:187::-;;;;;;;;;;-1:-1:-1;6829:187:3;;;;;:::i;:::-;;:::i;12228:179::-;;;;;;;;;;-1:-1:-1;12228:179:3;;;;;:::i;:::-;;:::i;8211:139::-;;;;;;;;;;-1:-1:-1;8211:139:3;;;;;:::i;:::-;;:::i;2428:54::-;;;;;;;;;;-1:-1:-1;2428:54:3;;;;;:::i;:::-;;;;;;;;;;;;;;10798:1360;;;;;;;;;;-1:-1:-1;10798:1360:3;;;;;:::i;:::-;;:::i;16110:100::-;;;;;;;;;;-1:-1:-1;16187:9:3;:16;16110:100;;3352:32;;;;;;;;;;-1:-1:-1;3352:32:3;;;;-1:-1:-1;;;;;3352:32:3;;;2235:46;;;;;;;;;;-1:-1:-1;2235:46:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;9970:480;;;;;;;;;;-1:-1:-1;9970:480:3;;;;;:::i;:::-;;:::i;2522:61::-;;;;;;;;;;-1:-1:-1;2522:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7703:25:62;;;7759:2;7744:18;;7737:34;;;;7787:18;;;7780:34;;;;7845:2;7830:18;;7823:34;;;;7888:3;7873:19;;7866:35;7932:3;7917:19;;7910:35;7976:3;7961:19;;7954:35;8020:3;8005:19;;7998:35;7690:3;7675:19;2522:61:3;7360:679:62;12983:2861:3;;;;;;;;;;-1:-1:-1;12983:2861:3;;;;;:::i;:::-;;:::i;5818:380::-;;;;;;:::i;:::-;;:::i;2059:44::-;;;;;;;;;;;;2099:4;2059:44;;16605:223;;;;;;;;;;-1:-1:-1;16605:223:3;;;;;:::i;:::-;;:::i;2081:198:38:-;;;;;;;;;;-1:-1:-1;2081:198:38;;;;;:::i;:::-;;:::i;3433:44:3:-;;;;;;;;;;;;;;;;7452:331;;;;;;;;;;-1:-1:-1;7452:331:3;;;;;:::i;:::-;;:::i;2163:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2163:26:3;;-1:-1:-1;2163:26:3;:::o;6274:480::-;1094:13:38;:11;:13::i;:::-;6435:76:3::1;6452:27;6481:29;6435:16;:76::i;:::-;6521:26;:56:::0;;;6587:28:::1;:60:::0;;;6662:84:::1;::::0;;10083:25:62;;;10139:2;10124:18;;10117:34;;;6662:84:3::1;::::0;10056:18:62;6662:84:3::1;;;;;;;;6274:480:::0;;:::o;7870:274::-;1094:13:38;:11;:13::i;:::-;7984:32:3::1;:68:::0;;-1:-1:-1;;7984:68:3::1;::::0;::::1;;::::0;;::::1;::::0;;;8067:70:::1;::::0;934:41:62;;;8067:70:3::1;::::0;922:2:62;907:18;8067:70:3::1;;;;;;;;7870:274:::0;:::o;7093:275::-;1094:13:38;:11;:13::i;:::-;7190:48:3::1;7214:23;7190;:48::i;:::-;7248:22;:48:::0;;;7311:50:::1;::::0;662:25:62;;;7311:50:3::1;::::0;650:2:62;635:18;7311:50:3::1;516:177:62::0;10519:216:3;1094:13:38;:11;:13::i;:::-;10604:6:3::1;10595;:15;10591:43;;;10619:15;;-1:-1:-1::0;;;10619:15:3::1;;;;;;;;;;;10591:43;10644:35:::0;:44;;;10703:25:::1;::::0;662::62;;;10703::3::1;::::0;650:2:62;635:18;10703:25:3::1;516:177:62::0;16910:266:3;17035:6;17009:23;:32;17005:77;;;17050:32;;-1:-1:-1;;;17050:32:3;;;;;;;;;;;17005:77;17122:7;17096:23;:33;17092:77;;;17138:31;;-1:-1:-1;;;17138:31:3;;;;;;;;;;;17092:77;16910:266;:::o;15919:122::-;15974:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15974:24:3;-1:-1:-1;16010:24:3;;;;;;;;16017:17;16010:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15919:122::o;9255:136::-;1094:13:38;:11;:13::i;:::-;9319:26:3;:33;;;9367:17:::1;::::0;662:25:62;;;9367:17:3::1;::::0;650:2:62;635:18;9367:17:3::1;516:177:62::0;8426:766:3;1094:13:38;:11;:13::i;:::-;8624:7:3::1;8592:29;:39;8588:101;;;8652:37;;-1:-1:-1::0;;;8652:37:3::1;;;;;;;;;;;8588:101;8734:7;8703:28;:38;8699:101;;;8762:38;;-1:-1:-1::0;;;8762:38:3::1;;;;;;;;;;;8699:101;8845:8;8814:28;:39;8810:101;;;8874:37;;-1:-1:-1::0;;;8874:37:3::1;;;;;;;;;;;8810:101;8921:46:::0;:78;;;9009:45;:76;;;9100:85:::1;::::0;;10083:25:62;;;10139:2;10124:18;;10117:34;;;9100:85:3::1;::::0;10056:18:62;9100:85:3::1;9909:248:62::0;9466:433:3;1094:13:38;:11;:13::i;:::-;9599:7:3::1;9581:15;:25;9577:62;;;9615:24;;-1:-1:-1::0;;;9615:24:3::1;;;;;;;;;;;9577:62;9669:7;9653:13;:23;9649:57;;;9685:21;;-1:-1:-1::0;;;9685:21:3::1;;;;;;;;;;;9649:57;9716:32:::0;:50;;;9776:30;:46;;;9837:55:::1;::::0;;10083:25:62;;;10139:2;10124:18;;10117:34;;;9837:55:3::1;::::0;10056:18:62;9837:55:3::1;9909:248:62::0;12474:446:3;12645:14;12662:40;12682:20;12662:17;:40;:::i;:::-;-1:-1:-1;;;;;12712:33:3;;;;;;;:16;:33;;;;;;;;:42;;;;;;;;;;;:63;;12645:57;;-1:-1:-1;12758:17:3;;12712:42;;:33;:63;;12758:17;;12712:63;:::i;:::-;;;;-1:-1:-1;;;;;;;12785:36:3;;;;;;:19;:36;;;;;:60;;12825:20;;12785:36;:60;;12825:20;;12785:60;:::i;:::-;;;;-1:-1:-1;12855:58:3;;-1:-1:-1;;;;;;12855:23:3;;12879:10;12899:4;12906:6;12855:23;:58::i;:::-;12635:285;12474:446;;;;:::o;16278:252::-;2099:4;16392:45;16415:22;16392:20;:45;:::i;:::-;:61;16388:135;;;16474:49;;-1:-1:-1;;;16474:49:3;;;;;;;;;;;16388:135;16278:252;;:::o;1831:101:38:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;5578:180:3:-;1094:13:38;:11;:13::i;:::-;5660:17:3::1;:38:::0;;;::::1;;;;-1:-1:-1::0;;5660:38:3;;::::1;;::::0;;5713::::1;::::0;::::1;::::0;::::1;::::0;5680:18;959:14:62;952:22;934:41;;922:2;907:18;;794:187;6829::3;1094:13:38;:11;:13::i;:::-;6916:17:3::1;:38:::0;;-1:-1:-1;;;;;;6916:38:3::1;-1:-1:-1::0;;;;;6916:38:3;::::1;::::0;;::::1;::::0;;;6969:40:::1;::::0;::::1;::::0;-1:-1:-1;;6969:40:3::1;6829:187:::0;:::o;12228:179::-;1094:13:38;:11;:13::i;:::-;-1:-1:-1;;;;;12316:22:3;::::1;;::::0;;;:14:::1;:22;::::0;;;;;:33;;-1:-1:-1;;12316:33:3::1;::::0;::::1;;::::0;;::::1;::::0;;;12364:36;;12316:33;;:22;12364:36:::1;::::0;::::1;12228:179:::0;;:::o;8211:139::-;1094:13:38;:11;:13::i;:::-;8282:9:3::1;:22:::0;;-1:-1:-1;;;;;;8282:22:3::1;-1:-1:-1::0;;;;;8282:22:3;::::1;::::0;;::::1;::::0;;;8319:24:::1;::::0;::::1;::::0;-1:-1:-1;;8319:24:3::1;8211:139:::0;:::o;10798:1360::-;11193:13;11230:36;11243:22;11230:12;:36::i;:::-;11222:44;;11286:5;-1:-1:-1;;;;;11277:26:3;;11317:477;;;;;;;;11379:17;-1:-1:-1;;;;;11317:477:3;;;;;11431:22;11317:477;;;;11487:21;11317:477;;;;11537:10;11317:477;;;;11578:12;11317:477;;;;11615:6;-1:-1:-1;;;;;11317:477:3;;;;;11646:6;-1:-1:-1;;;;;11317:477:3;;;;;11681:10;-1:-1:-1;;;;;11317:477:3;;;;;11719:9;11317:477;;;;;;11763:16;11317:477;;;11277:527;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11815:9:3;:21;;;;;;;-1:-1:-1;11815:21:3;;;;;;;;-1:-1:-1;;;;;;11815:21:3;-1:-1:-1;;;;;11815:21:3;;;;;;;;;11852:299;;;;;;-1:-1:-1;11815:21:3;-1:-1:-1;11852:299:3;;;;11926:10;;11950:17;;11981:10;;12005:12;;12031:16;;12061:22;;12097:21;;12132:9;;11852:299;:::i;:::-;;;;;;;;10798:1360;;;;;;;;;;;;:::o;9970:480::-;1094:13:38;:11;:13::i;:::-;10082:8:3::1;10069:9;:21;10065:61;;10099:27;;-1:-1:-1::0;;;10099:27:3::1;;;;;;;;;;;10065:61;10140:8;10152:1;10140:13:::0;10136:57:::1;;10162:31;;-1:-1:-1::0;;;10162:31:3::1;;;;;;;;;;;10136:57;10219:8;10207:9;:20;10203:71;;;10236:38;;-1:-1:-1::0;;;10236:38:3::1;;;;;;;;;;;10203:71;10284:17;:48:::0;;;10342:35;:46;;;10403:40:::1;::::0;;10083:25:62;;;10139:2;10124:18;;10117:34;;;10403:40:3::1;::::0;10056:18:62;10403:40:3::1;9909:248:62::0;12983:2861:3;1094:13:38;:11;:13::i;:::-;13267:24:3::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13267:24:3::1;-1:-1:-1::0;;;;;13319:27:3;::::1;;::::0;;;:19:::1;:27;::::0;;;;;13301:45;;13356:139:::1;13376:25:::0;;::::1;13356:139;;;-1:-1:-1::0;;;;;13441:24:3;::::1;;::::0;;;:16:::1;:24;::::0;;;;;13466:14;;13481:1;13466:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13441:43:3::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;13441:43:3;;13422:62;;:8;;:62:::1;::::0;13441:43;;13422:62:::1;:::i;:::-;::::0;;-1:-1:-1;13403:3:3;::::1;::::0;::::1;:::i;:::-;;;;13356:139;;;-1:-1:-1::0;13508:15:3;;::::1;:20:::0;13504:53:::1;;13537:20;;-1:-1:-1::0;;;13537:20:3::1;;;;;;;;;;;13504:53;13676:15:::0;;13581:3:::1;::::0;13643:103:::1;::::0;13667:6;;13693:17;13712:16;13730:15;;13643:16:::1;:103::i;:::-;13618:21;::::0;;::::1;13594:152:::0;;;13595:21:::1;::::0;;::::1;13594:152:::0;;;;13874:15;;-1:-1:-1;;;;;13844:27:3;::::1;-1:-1:-1::0;13844:27:3;;;:19:::1;:27:::0;;;;;;;13819:21;;13801:15;;:39:::1;::::0;13819:21;13801:39:::1;:::i;:::-;13800:71;;;;:::i;:::-;:89;;;;:::i;:::-;13765:32;::::0;::::1;:124:::0;13983:15;;-1:-1:-1;;;;;13953:27:3;::::1;13983:15;13953:27:::0;;;:19:::1;:27;::::0;;;;;;;;13929:21;;::::1;::::0;:51:::1;::::0;13953:27;13929:51:::1;:::i;:::-;:69;;;;:::i;:::-;-1:-1:-1::0;;;;;13899:27:3;::::1;;::::0;;;:19:::1;:27;::::0;;;;:99;;;;14009:1607:::1;14029:25:::0;;::::1;14009:1607;;;14168:15:::0;;-1:-1:-1;;;;;14122:24:3;::::1;14075:20;14122:24:::0;;;:16:::1;:24;::::0;;;;14075:20;;14168:15;14075:20;14147:14;;14162:1;14147:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14122:43:3::1;-1:-1:-1::0;;;;;14122:43:3::1;;;;;;;;;;;;;14098:8;:21;;;:67;;;;:::i;:::-;:85;;;;:::i;:::-;14317:15:::0;;-1:-1:-1;;;;;14271:24:3;::::1;14197:27;14271:24:::0;;;:16:::1;:24;::::0;;;;14075:108;;-1:-1:-1;14197:27:3;;14296:14;;14311:1;14296:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14271:43:3::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;14271:43:3;;14246:21;;::::1;::::0;14228:15;;:39:::1;::::0;14246:21;14228:39:::1;:::i;:::-;14227:87;;;;:::i;:::-;:105;;;;:::i;:::-;14197:135;;14376:12;14346:8;:26;;:42;;;;;;;:::i;:::-;::::0;;-1:-1:-1;14518:15:3;;-1:-1:-1;;;;;14472:24:3;::::1;14518:15;14472:24:::0;;;:16:::1;:24;::::0;;;;;14497:14;;14512:1;14497:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14472:43:3::1;-1:-1:-1::0;;;;;14472:43:3::1;;;;;;;;;;;;;14448:8;:21;;;:67;;;;:::i;:::-;:85;;;;:::i;:::-;-1:-1:-1::0;;;;;14402:24:3;::::1;;::::0;;;:16:::1;:24;::::0;;;;;14427:14;;14442:1;14427:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14402:43:3::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14402:43:3;;;:131;;;;14582:16;;14578:933:::1;;14693:16;-1:-1:-1::0;;;;;14693:32:3::1;;14755:4;14782:42;14893:14;;14908:1;14893:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;15161;:36:::0;14932:12;;15032:15:::1;::::0;15143:54:::1;::::0;15032:15;15143:54:::1;:::i;:::-;15225:35:::0;;14693:743:::1;::::0;-1:-1:-1;;;;;;14693:743:3::1;::::0;;;;;;::::1;::::0;;;;;;;15225:35;15282:1:::1;::::0;;;15360:32:::1;::::0;15225:35:::1;::::0;14693:743:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14681:755:::0;-1:-1:-1;15454:42:3::1;-1:-1:-1::0;;;;;15454:17:3;::::1;14681:755:::0;15483:12;15454:17:::1;:42::i;:::-;15595:9;-1:-1:-1::0;;;;;15529:76:3::1;15541:14;;15556:1;15541:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;15529:76:3::1;;15560:19;15581:12;15529:76;;;;;;10083:25:62::0;;;10139:2;10124:18;;10117:34;10071:2;10056:18;;9909:248;15529:76:3::1;;;;;;;;14061:1555;;;14056:3;;;;;:::i;:::-;;;;14009:1607;;;;15625:78;15643:7;1247::38::0;1273:6;-1:-1:-1;;;;;1273:6:38;;1201:85;15643:7:3::1;15676:8;:26;;;15652:8;:21;;;:50;;;;:::i;:::-;-1:-1:-1::0;;;;;15625:17:3;::::1;::::0;:78;:17:::1;:78::i;:::-;15833:1;1273:6:38::0;;-1:-1:-1;;;;;1273:6:38;-1:-1:-1;;;;;15718:118:3::1;;15739:8;:32;;;15797:8;:26;;;15773:8;:21;;;:50;;;;:::i;:::-;15718:118;::::0;;10083:25:62;;;10139:2;10124:18;;10117:34;;;;10056:18;15718:118:3::1;;;;;;;13205:2639;;12983:2861:::0;;;;;;;:::o;5818:380::-;5899:26;;:30;5895:244;;5961:26;;5949:9;:38;5945:85;;;6012:18;;-1:-1:-1;;;6012:18:3;;;;;;;;;;;5945:85;1247:7:38;1273:6;;6092:36:3;;-1:-1:-1;;;;;1273:6:38;;;;6118:9:3;6092:36;;;;;6118:9;;6092:36;1247:7:38;6092:36:3;6118:9;1273:6:38;6092:36:3;;;;;;;;;;;;;;;;;;;;;5895:244;6162:10;-1:-1:-1;;;;;6153:38:3;;6174:16;6153:38;;;;;;:::i;:::-;;;;;;;;5818:380;:::o;16605:223::-;16709:6;16690:16;:25;16686:63;;;16724:25;;-1:-1:-1;;;16724:25:3;;;;;;;;;;;16686:63;16782:6;16763:16;:25;16759:62;;;16797:24;;-1:-1:-1;;;16797:24:3;;;;;;;;;;;2081:198:38;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:38;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:38;;16000:2:62;2161:73:38::1;::::0;::::1;15982:21:62::0;16039:2;16019:18;;;16012:30;16078:34;16058:18;;;16051:62;-1:-1:-1;;;16129:18:62;;;16122:36;16175:19;;2161:73:38::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;7452:331:3:-:0;1094:13:38;:11;:13::i;:::-;7563:62:3::1;7594:30;7563;:62::i;:::-;7635:29;:62:::0;;;7712:64:::1;::::0;662:25:62;;;7712:64:3::1;::::0;650:2:62;635:18;7712:64:3::1;516:177:62::0;1359:130:38;1247:7;1273:6;-1:-1:-1;;;;;1273:6:38;719:10:53;1422:23:38;1414:68;;;;-1:-1:-1;;;1414:68:38;;16407:2:62;1414:68:38;;;16389:21:62;;;16426:18;;;16419:30;16485:34;16465:18;;;16458:62;16537:18;;1414:68:38;16205:356:62;974:241:50;1139:68;;-1:-1:-1;;;;;16824:15:62;;;1139:68:50;;;16806:34:62;16876:15;;16856:18;;;16849:43;16908:18;;;16901:34;;;1112:96:50;;1132:5;;-1:-1:-1;;;1162:27:50;16741:18:62;;1139:68:50;;;;-1:-1:-1;;1139:68:50;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:50;-1:-1:-1;;;;;;1139:68:50;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;2433:187:38:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:38;;;-1:-1:-1;;;;;;2541:17:38;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;973:558:41:-;1030:16;1141:4;1135:11;-1:-1:-1;;;1166:3:41;1159:79;1284:14;1278:4;1274:25;1267:4;1262:3;1258:14;1251:49;-1:-1:-1;;;1329:4:41;1324:3;1320:14;1313:90;1443:4;1438:3;1435:1;1428:20;1416:32;-1:-1:-1;;;;;;;1475:22:41;;1467:57;;;;-1:-1:-1;;;1467:57:41;;17148:2:62;1467:57:41;;;17130:21:62;17187:2;17167:18;;;17160:30;-1:-1:-1;;;17206:18:62;;;17199:52;17268:18;;1467:57:41;16946:346:62;1467:57:41;973:558;;;:::o;17588:1066:3:-;17798:20;;17870:3;-1:-1:-1;;;;;17887:14:3;;;;;;;17883:64;;17925:7;17934:1;17917:19;;;;;;;17883:64;17957:53;-1:-1:-1;;;;;17957:26:3;;17984:16;18002:7;17957:26;:53::i;:::-;18044:29;;-1:-1:-1;;;18044:29:3;;18067:4;18044:29;;;454:51:62;18020:21:3;;-1:-1:-1;;;;;18044:14:3;;;;;427:18:62;;18044:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18112:31;;-1:-1:-1;;;18112:31:3;;18137:4;18112:31;;;454:51:62;18020:53:3;;-1:-1:-1;18083:26:3;;-1:-1:-1;;;;;18112:16:3;;;;;427:18:62;;18112:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18083:60;;18214:12;18231:16;-1:-1:-1;;;;;18231:21:3;18253:15;;18231:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18213:56;;;18284:7;18279:33;;18300:12;;-1:-1:-1;;;18300:12:3;;;;;;;;;;;18279:33;18337:29;;-1:-1:-1;;;18337:29:3;;18360:4;18337:29;;;454:51:62;18369:13:3;;-1:-1:-1;;;;;18337:14:3;;;;;427:18:62;;18337:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;;:::i;:::-;18439:31;;-1:-1:-1;;;18439:31:3;;18464:4;18439:31;;;454:51:62;18322:60:3;;-1:-1:-1;;;;;;18439:16:3;;;;;427:18:62;;18439:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18418:52;;:18;:52;:::i;:::-;18407:64;;:7;:64;:::i;:::-;18392:79;;18500:17;18485:12;:32;18481:87;;;18538:30;;-1:-1:-1;;;18538:30:3;;;;;;;;;;;18481:87;18591:56;-1:-1:-1;;;;;18591:26:3;;18626:16;18645:1;18591:26;:56::i;:::-;17846:808;;;;17588:1066;;;;;;;;;;:::o;763:205:50:-;902:58;;-1:-1:-1;;;;;17954:32:62;;902:58:50;;;17936:51:62;18003:18;;;17996:34;;;875:86:50;;895:5;;-1:-1:-1;;;925:23:50;17909:18:62;;902:58:50;17762:274:62;875:86:50;763:205;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:50;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:50;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:50;;18493:2:62;4351:85:50;;;18475:21:62;18532:2;18512:18;;;18505:30;18571:34;18551:18;;;18544:62;-1:-1:-1;;;18622:18:62;;;18615:40;18672:19;;4351:85:50;18291:406:62;1475:603:50;1830:10;;;1829:62;;-1:-1:-1;1846:39:50;;-1:-1:-1;;;1846:39:50;;1870:4;1846:39;;;18914:34:62;-1:-1:-1;;;;;18984:15:62;;;18964:18;;;18957:43;1846:15:50;;;;;18849:18:62;;1846:39:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1829:62;1808:163;;;;-1:-1:-1;;;1808:163:50;;19213:2:62;1808:163:50;;;19195:21:62;19252:2;19232:18;;;19225:30;19291:34;19271:18;;;19264:62;-1:-1:-1;;;19342:18:62;;;19335:52;19404:19;;1808:163:50;19011:418:62;1808:163:50;2008:62;;-1:-1:-1;;;;;17954:32:62;;2008:62:50;;;17936:51:62;18003:18;;;17996:34;;;1981:90:50;;2001:5;;-1:-1:-1;;;2031:22:50;17909:18:62;;2008:62:50;17762:274:62;3861:223:52;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:52;;19636:2:62;5137:81:52;;;19618:21:62;19675:2;19655:18;;;19648:30;19714:34;19694:18;;;19687:62;-1:-1:-1;;;19765:18:62;;;19758:36;19811:19;;5137:81:52;19434:402:62;5137:81:52;-1:-1:-1;;;;;1465:19:52;;;5228:60;;;;-1:-1:-1;;;5228:60:52;;20043:2:62;5228:60:52;;;20025:21:62;20082:2;20062:18;;;20055:30;20121:31;20101:18;;;20094:59;20170:18;;5228:60:52;19841:353:62;5228:60:52;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:52;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:52:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:52;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:52;;;;;;;;:::i;14:180:62:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:62;;14:180;-1:-1:-1;14:180:62:o;1220:248::-;1288:6;1296;1349:2;1337:9;1328:7;1324:23;1320:32;1317:52;;;1365:1;1362;1355:12;1317:52;-1:-1:-1;;1388:23:62;;;1458:2;1443:18;;;1430:32;;-1:-1:-1;1220:248:62:o;1473:118::-;1559:5;1552:13;1545:21;1538:5;1535:32;1525:60;;1581:1;1578;1571:12;1596:128;1661:20;;1690:28;1661:20;1690:28;:::i;1729:241::-;1785:6;1838:2;1826:9;1817:7;1813:23;1809:32;1806:52;;;1854:1;1851;1844:12;1806:52;1893:9;1880:23;1912:28;1934:5;1912:28;:::i;2900:131::-;-1:-1:-1;;;;;2975:31:62;;2965:42;;2955:70;;3021:1;3018;3011:12;3036:134;3104:20;;3133:31;3104:20;3133:31;:::i;3175:388::-;3243:6;3251;3304:2;3292:9;3283:7;3279:23;3275:32;3272:52;;;3320:1;3317;3310:12;3272:52;3359:9;3346:23;3378:31;3403:5;3378:31;:::i;:::-;3428:5;-1:-1:-1;3485:2:62;3470:18;;3457:32;3498:33;3457:32;3498:33;:::i;:::-;3550:7;3540:17;;;3175:388;;;;;:::o;3568:541::-;3670:6;3678;3686;3694;3747:3;3735:9;3726:7;3722:23;3718:33;3715:53;;;3764:1;3761;3754:12;3715:53;3803:9;3790:23;3822:31;3847:5;3822:31;:::i;:::-;3872:5;-1:-1:-1;3929:2:62;3914:18;;3901:32;3942:33;3901:32;3942:33;:::i;:::-;3568:541;;3994:7;;-1:-1:-1;;;;4048:2:62;4033:18;;4020:32;;4099:2;4084:18;4071:32;;3568:541::o;4114:247::-;4173:6;4226:2;4214:9;4205:7;4201:23;4197:32;4194:52;;;4242:1;4239;4232:12;4194:52;4281:9;4268:23;4300:31;4325:5;4300:31;:::i;4366:382::-;4431:6;4439;4492:2;4480:9;4471:7;4467:23;4463:32;4460:52;;;4508:1;4505;4498:12;4460:52;4547:9;4534:23;4566:31;4591:5;4566:31;:::i;:::-;4616:5;-1:-1:-1;4673:2:62;4658:18;;4645:32;4686:30;4645:32;4686:30;:::i;4753:127::-;4814:10;4809:3;4805:20;4802:1;4795:31;4845:4;4842:1;4835:15;4869:4;4866:1;4859:15;4885:719;4928:5;4981:3;4974:4;4966:6;4962:17;4958:27;4948:55;;4999:1;4996;4989:12;4948:55;5035:6;5022:20;5061:18;5098:2;5094;5091:10;5088:36;;;5104:18;;:::i;:::-;5179:2;5173:9;5147:2;5233:13;;-1:-1:-1;;5229:22:62;;;5253:2;5225:31;5221:40;5209:53;;;5277:18;;;5297:22;;;5274:46;5271:72;;;5323:18;;:::i;:::-;5363:10;5359:2;5352:22;5398:2;5390:6;5383:18;5444:3;5437:4;5432:2;5424:6;5420:15;5416:26;5413:35;5410:55;;;5461:1;5458;5451:12;5410:55;5525:2;5518:4;5510:6;5506:17;5499:4;5491:6;5487:17;5474:54;5572:1;5565:4;5560:2;5552:6;5548:15;5544:26;5537:37;5592:6;5583:15;;;;;;4885:719;;;;:::o;5609:1746::-;5827:6;5835;5843;5851;5859;5867;5875;5883;5891;5899;5943:9;5934:7;5930:23;5973:3;5969:2;5965:12;5962:32;;;5990:1;5987;5980:12;5962:32;6029:9;6016:23;6048:31;6073:5;6048:31;:::i;:::-;6098:5;-1:-1:-1;6155:2:62;6140:18;;6127:32;6168:33;6127:32;6168:33;:::i;:::-;6220:7;-1:-1:-1;6279:2:62;6264:18;;6251:32;6292:33;6251:32;6292:33;:::i;:::-;6344:7;-1:-1:-1;6403:2:62;6388:18;;6375:32;6416:33;6375:32;6416:33;:::i;:::-;6468:7;-1:-1:-1;6522:3:62;6507:19;;6494:33;;-1:-1:-1;6562:2:62;-1:-1:-1;;6543:17:62;;6539:26;6536:46;;;6578:1;6575;6568:12;6536:46;;6611:2;6605:9;6653:2;6645:6;6641:15;6675:18;6743:6;6731:10;6728:22;6723:2;6711:10;6708:18;6705:46;6702:72;;;6754:18;;:::i;:::-;6794:10;6790:2;6783:22;6857:3;6846:9;6842:19;6829:33;6821:6;6814:49;6924:3;6913:9;6909:19;6896:33;6891:2;6883:6;6879:15;6872:58;6991:3;6980:9;6976:19;6963:33;6958:2;6950:6;6946:15;6939:58;7016:6;7006:16;;7073:3;7062:9;7058:19;7045:33;7031:47;;7101:2;7093:6;7090:14;7087:34;;;7117:1;7114;7107:12;7087:34;;;7140:50;7182:7;7173:6;7162:9;7158:22;7140:50;:::i;:::-;7130:60;;;7237:3;7226:9;7222:19;7209:33;7199:43;;7289:3;7278:9;7274:19;7261:33;7251:43;;7313:36;7344:3;7333:9;7329:19;7313:36;:::i;:::-;7303:46;;5609:1746;;;;;;;;;;;;;:::o;8044:347::-;8095:8;8105:6;8159:3;8152:4;8144:6;8140:17;8136:27;8126:55;;8177:1;8174;8167:12;8126:55;-1:-1:-1;8200:20:62;;8243:18;8232:30;;8229:50;;;8275:1;8272;8265:12;8229:50;8312:4;8304:6;8300:17;8288:29;;8364:3;8357:4;8348:6;8340;8336:19;8332:30;8329:39;8326:59;;;8381:1;8378;8371:12;8326:59;8044:347;;;;;:::o;8396:1181::-;8529:6;8537;8545;8553;8561;8569;8577;8630:3;8618:9;8609:7;8605:23;8601:33;8598:53;;;8647:1;8644;8637:12;8598:53;8686:9;8673:23;8705:31;8730:5;8705:31;:::i;:::-;8755:5;-1:-1:-1;8811:2:62;8796:18;;8783:32;8834:18;8864:14;;;8861:34;;;8891:1;8888;8881:12;8861:34;8929:6;8918:9;8914:22;8904:32;;8974:7;8967:4;8963:2;8959:13;8955:27;8945:55;;8996:1;8993;8986:12;8945:55;9036:2;9023:16;9062:2;9054:6;9051:14;9048:34;;;9078:1;9075;9068:12;9048:34;9131:7;9126:2;9116:6;9113:1;9109:14;9105:2;9101:23;9097:32;9094:45;9091:65;;;9152:1;9149;9142:12;9091:65;9183:2;9175:11;;;-1:-1:-1;9205:6:62;-1:-1:-1;9258:2:62;9243:18;;9230:32;;-1:-1:-1;9281:38:62;9315:2;9300:18;;9281:38;:::i;:::-;9271:48;;9372:3;9361:9;9357:19;9344:33;9328:49;;9402:2;9392:8;9389:16;9386:36;;;9418:1;9415;9408:12;9386:36;;9457:60;9509:7;9498:8;9487:9;9483:24;9457:60;:::i;:::-;8396:1181;;;;-1:-1:-1;8396:1181:62;;-1:-1:-1;8396:1181:62;;;;9431:86;;-1:-1:-1;;;8396:1181:62:o;9582:322::-;9651:6;9704:2;9692:9;9683:7;9679:23;9675:32;9672:52;;;9720:1;9717;9710:12;9672:52;9760:9;9747:23;9793:18;9785:6;9782:30;9779:50;;;9825:1;9822;9815:12;9779:50;9848;9890:7;9881:6;9870:9;9866:22;9848:50;:::i;:::-;9838:60;9582:322;-1:-1:-1;;;;9582:322:62:o;10162:127::-;10223:10;10218:3;10214:20;10211:1;10204:31;10254:4;10251:1;10244:15;10278:4;10275:1;10268:15;10294:125;10359:9;;;10380:10;;;10377:36;;;10393:18;;:::i;:::-;10294:125;;;;:::o;10637:250::-;10722:1;10732:113;10746:6;10743:1;10740:13;10732:113;;;10822:11;;;10816:18;10803:11;;;10796:39;10768:2;10761:10;10732:113;;;-1:-1:-1;;10879:1:62;10861:16;;10854:27;10637:250::o;10892:271::-;10934:3;10972:5;10966:12;10999:6;10994:3;10987:19;11015:76;11084:6;11077:4;11072:3;11068:14;11061:4;11054:5;11050:16;11015:76;:::i;:::-;11145:2;11124:15;-1:-1:-1;;11120:29:62;11111:39;;;;11152:4;11107:50;;10892:271;-1:-1:-1;;10892:271:62:o;11168:1269::-;11363:2;11352:9;11345:21;11375:53;11424:2;11413:9;11409:18;11400:6;11394:13;-1:-1:-1;;;;;265:31:62;253:44;;199:104;11375:53;11482:2;11474:6;11470:15;11464:22;11459:2;11448:9;11444:18;11437:50;11541:2;11533:6;11529:15;11523:22;11518:2;11507:9;11503:18;11496:50;11601:2;11593:6;11589:15;11583:22;11577:3;11566:9;11562:19;11555:51;11326:4;11653:3;11645:6;11641:16;11635:23;11667:64;11726:3;11715:9;11711:19;11697:12;10501;;10489:25;;10563:4;10552:16;;;10546:23;10530:14;;;10523:47;10619:4;10608:16;;;10602:23;10586:14;;10579:47;10424:208;11667:64;;11780:3;11772:6;11768:16;11762:23;11804:3;11816:54;11866:2;11855:9;11851:18;11835:14;-1:-1:-1;;;;;265:31:62;253:44;;199:104;11816:54;11919:4;11911:6;11907:17;11901:24;11879:46;;11944:3;11956:54;12006:2;11995:9;11991:18;11975:14;-1:-1:-1;;;;;265:31:62;253:44;;199:104;11956:54;12059:4;12047:17;;12041:24;-1:-1:-1;;;;;265:31:62;12124:3;12109:19;;253:44;12166:15;;;12160:22;768:13;761:21;12238:3;12223:19;;749:34;12280:15;;12274:22;12315:6;12337:18;;;12330:30;12274:22;-1:-1:-1;12377:54:62;12426:3;12411:19;;12274:22;12377:54;:::i;12442:916::-;-1:-1:-1;;;;;12925:15:62;;;12907:34;;12977:15;;12972:2;12957:18;;12950:43;13024:2;13009:18;;13002:34;;;12828:4;12857:3;13045:57;13098:2;13083:18;;13075:6;10501:12;;10489:25;;10563:4;10552:16;;;10546:23;10530:14;;;10523:47;10619:4;10608:16;;;10602:23;10586:14;;10579:47;10424:208;13045:57;13139:2;13133:3;13122:9;13118:19;13111:31;13159:45;13200:2;13189:9;13185:18;13177:6;13159:45;:::i;:::-;13235:3;13220:19;;13213:35;;;;-1:-1:-1;;13279:3:62;13264:19;;13257:35;;;;13336:14;13329:22;13323:3;13308:19;;;13301:51;13151:53;12442:916;-1:-1:-1;;;;;12442:916:62:o;13363:127::-;13424:10;13419:3;13415:20;13412:1;13405:31;13455:4;13452:1;13445:15;13479:4;13476:1;13469:15;13495:135;13534:3;13555:17;;;13552:43;;13575:18;;:::i;:::-;-1:-1:-1;13622:1:62;13611:13;;13495:135::o;13635:128::-;13702:9;;;13723:11;;;13720:37;;;13737:18;;:::i;13768:168::-;13808:7;13874:1;13870;13866:6;13862:14;13859:1;13856:21;13851:1;13844:9;13837:17;13833:45;13830:71;;;13881:18;;:::i;:::-;-1:-1:-1;13921:9:62;;13768:168::o;13941:217::-;13981:1;14007;13997:132;;14051:10;14046:3;14042:20;14039:1;14032:31;14086:4;14083:1;14076:15;14114:4;14111:1;14104:15;13997:132;-1:-1:-1;14143:9:62;;13941:217::o;14163:1149::-;-1:-1:-1;;;;;14672:15:62;;;14654:34;;14724:15;;;14719:2;14704:18;;14697:43;14776:15;;14771:2;14756:18;;14749:43;14823:2;14808:18;;14801:34;;;14866:3;14851:19;;14844:35;;;14634:3;14895:19;;14888:35;;;14954:3;14939:19;;14932:35;;;14998:3;14983:19;;14976:35;;;15042:3;15027:19;;15020:35;;;14603:3;14588:19;;15085:1;15074:13;;15064:144;;15130:10;15125:3;15121:20;15118:1;15111:31;15165:4;15162:1;15155:15;15193:4;15190:1;15183:15;15064:144;15245:6;15239:3;15228:9;15224:19;15217:35;15261:45;15301:3;15290:9;15286:19;15277:7;768:13;761:21;749:34;;698:91;15261:45;14163:1149;;;;;;;;;;;;;;:::o;15317:251::-;15387:6;15440:2;15428:9;15419:7;15415:23;15411:32;15408:52;;;15456:1;15453;15446:12;15408:52;15488:9;15482:16;15507:31;15532:5;15507:31;:::i;15573:220::-;15722:2;15711:9;15704:21;15685:4;15742:45;15783:2;15772:9;15768:18;15760:6;15742:45;:::i;17297:184::-;17367:6;17420:2;17408:9;17399:7;17395:23;17391:32;17388:52;;;17436:1;17433;17426:12;17388:52;-1:-1:-1;17459:16:62;;17297:184;-1:-1:-1;17297:184:62:o;17486:271::-;17669:6;17661;17656:3;17643:33;17625:3;17695:16;;17720:13;;;17695:16;17486:271;-1:-1:-1;17486:271:62:o;18041:245::-;18108:6;18161:2;18149:9;18140:7;18136:23;18132:32;18129:52;;;18177:1;18174;18167:12;18129:52;18209:9;18203:16;18228:28;18250:5;18228:28;:::i;20199:287::-;20328:3;20366:6;20360:13;20382:66;20441:6;20436:3;20429:4;20421:6;20417:17;20382:66;:::i;:::-;20464:16;;;;;20199:287;-1:-1:-1;;20199:287:62:o",
    "linkReferences": {},
    "immutableReferences": {
      "2669": [
        {
          "start": 906,
          "length": 32
        },
        {
          "start": 3768,
          "length": 32
        }
      ],
      "2692": [
        {
          "start": 766,
          "length": 32
        },
        {
          "start": 5336,
          "length": 32
        }
      ],
      "2697": [
        {
          "start": 1235,
          "length": 32
        },
        {
          "start": 4606,
          "length": 32
        },
        {
          "start": 6783,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "HAT()": "3449a865",
    "HUNDRED_PERCENT()": "6ed93dd0",
    "MAX_HAT_SPLIT()": "ea55f18e",
    "addTokensToSwap(address,address,uint256,uint256)": "5dd11415",
    "createVault(address,address,address,address,uint256,(uint256,uint256,uint256),string,uint256,uint256,bool)": "c99a02b0",
    "defaultArbitrator()": "db0f267b",
    "defaultArbitratorCanChangeBounty()": "116dbc93",
    "defaultBountyGovernanceHAT()": "54492078",
    "defaultBountyHackerHATVested()": "120c1a7e",
    "defaultChallengePeriod()": "11566d74",
    "defaultChallengeTimeOutPeriod()": "f51a90e4",
    "feeSetter()": "87cf3ef4",
    "generalParameters()": "df1b1ebe",
    "getGeneralParameters()": "2cc85f97",
    "getNumberOfVaults()": "d3e0bc56",
    "governanceHatReward(address)": "bcfdfc58",
    "hackersHatReward(address,address)": "354d75b9",
    "hatVaultImplementation()": "21c0437a",
    "hatVaults(uint256)": "06c6e3b8",
    "isEmergencyPaused()": "290d10c4",
    "isVaultVisible(address)": "db399053",
    "logClaim(string)": "e367497d",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setClaimFee(uint256)": "2e75ab50",
    "setDefaultArbitrator(address)": "a8acd946",
    "setDefaultArbitratorCanChangeBounty(bool)": "1b2cae6c",
    "setDefaultChallengePeriod(uint256)": "22f84ada",
    "setDefaultChallengeTimeOutPeriod(uint256)": "f836c449",
    "setDefaultHATBountySplit(uint256,uint256)": "132b1cc6",
    "setEmergencyPaused(bool)": "9d0ab89f",
    "setFeeSetter(address)": "b19805af",
    "setHatVestingParams(uint256,uint256)": "dd072f03",
    "setMaxBountyDelay(uint256)": "24cda22d",
    "setVaultVisibility(address,bool)": "aec1d108",
    "setWithdrawRequestParams(uint256,uint256)": "398488eb",
    "setWithdrawSafetyPeriod(uint256,uint256)": "520a924d",
    "swapAndSend(address,address[],uint256,address,bytes)": "e2b001bf",
    "tokenLockFactory()": "11c2aae3",
    "transferOwnership(address)": "f2fde38b",
    "validateChallengePeriod(uint256)": "ebf7830c",
    "validateChallengeTimeOutPeriod(uint256)": "2ac60b7d",
    "validateHATSplit(uint256,uint256)": "70cb13b5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hatVaultImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hatGovernance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_HAT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bountyGovernanceHAT\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bountyHackerHATVested\",\"type\":\"uint256\"},{\"internalType\":\"contract ITokenLockFactory\",\"name\":\"_tokenLockFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AmountSwappedLessThanMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountToSwapIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengePeriodTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengePeriodTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengeTimeOutPeriodTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChallengeTimeOutPeriodTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelayTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HatVestingDurationSmallerThanPeriods\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HatVestingDurationTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HatVestingPeriodsCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughFeePaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafetyPeriodTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalHatsSplitPercentageShouldBeUpToMaxHATSplit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawPeriodTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawRequestEnabledPeriodTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawRequestEnabledPeriodTooShort\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawRequestPendingPeriodTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_descriptionHash\",\"type\":\"string\"}],\"name\":\"LogClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"SetClaimFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_defaultArbitrator\",\"type\":\"address\"}],\"name\":\"SetDefaultArbitrator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_defaultArbitratorCanChangeBounty\",\"type\":\"bool\"}],\"name\":\"SetDefaultArbitratorCanChangeBounty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_defaultChallengePeriod\",\"type\":\"uint256\"}],\"name\":\"SetDefaultChallengePeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_defaultChallengeTimeOutPeriod\",\"type\":\"uint256\"}],\"name\":\"SetDefaultChallengeTimeOutPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_defaultBountyGovernanceHAT\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_defaultBountyHackerHATVested\",\"type\":\"uint256\"}],\"name\":\"SetDefaultHATBountySplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isEmergencyPaused\",\"type\":\"bool\"}],\"name\":\"SetEmergencyPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_feeSetter\",\"type\":\"address\"}],\"name\":\"SetFeeSetter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periods\",\"type\":\"uint256\"}],\"name\":\"SetHatVestingParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"SetMaxBountyDelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"_visible\",\"type\":\"bool\"}],\"name\":\"SetVaultVisibility\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawRequestPendingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawRequestEnablePeriod\",\"type\":\"uint256\"}],\"name\":\"SetWithdrawRequestParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_safetyPeriod\",\"type\":\"uint256\"}],\"name\":\"SetWithdrawSafetyPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSent\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenLock\",\"type\":\"address\"}],\"name\":\"SwapAndSend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IRewardController\",\"name\":\"_rewardController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxBounty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"hackerVested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hacker\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"committee\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IHATVault.BountySplit\",\"name\":\"_bountySplit\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_descriptionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bountyVestingDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bountyVestingPeriods\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isPaused\",\"type\":\"bool\"}],\"name\":\"VaultCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HAT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_HAT_SPLIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_hackersHatReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_governanceHatReward\",\"type\":\"uint256\"}],\"name\":\"addTokensToSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_committee\",\"type\":\"address\"},{\"internalType\":\"contract IRewardController\",\"name\":\"_rewardController\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxBounty\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"hackerVested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hacker\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"committee\",\"type\":\"uint256\"}],\"internalType\":\"struct IHATVault.BountySplit\",\"name\":\"_bountySplit\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"_descriptionHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_bountyVestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bountyVestingPeriods\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPaused\",\"type\":\"bool\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultArbitrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultArbitratorCanChangeBounty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBountyGovernanceHAT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBountyHackerHATVested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultChallengePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultChallengeTimeOutPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generalParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hatVestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hatVestingPeriods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawRequestEnablePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawRequestPendingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"setMaxBountyDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneralParameters\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"hatVestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hatVestingPeriods\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawRequestEnablePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawRequestPendingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"setMaxBountyDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IHATVaultsRegistry.GeneralParameters\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfVaults\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"governanceHatReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hackersHatReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hatVaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hatVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEmergencyPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVaultVisible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_descriptionHash\",\"type\":\"string\"}],\"name\":\"logClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setClaimFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultArbitrator\",\"type\":\"address\"}],\"name\":\"setDefaultArbitrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_defaultArbitratorCanChangeBounty\",\"type\":\"bool\"}],\"name\":\"setDefaultArbitratorCanChangeBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultChallengePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultChallengePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultChallengeTimeOutPeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultChallengeTimeOutPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultBountyGovernanceHAT\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_defaultBountyHackerHATVested\",\"type\":\"uint256\"}],\"name\":\"setDefaultHATBountySplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEmergencyPaused\",\"type\":\"bool\"}],\"name\":\"setEmergencyPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSetter\",\"type\":\"address\"}],\"name\":\"setFeeSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_periods\",\"type\":\"uint256\"}],\"name\":\"setHatVestingParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"setMaxBountyDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_visible\",\"type\":\"bool\"}],\"name\":\"setVaultVisibility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawRequestPendingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawRequestEnablePeriod\",\"type\":\"uint256\"}],\"name\":\"setWithdrawRequestParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_safetyPeriod\",\"type\":\"uint256\"}],\"name\":\"setWithdrawSafetyPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_beneficiaries\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_routingContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_routingPayload\",\"type\":\"bytes\"}],\"name\":\"swapAndSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLockFactory\",\"outputs\":[{\"internalType\":\"contract ITokenLockFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengePeriod\",\"type\":\"uint256\"}],\"name\":\"validateChallengePeriod\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_challengeTimeOutPeriod\",\"type\":\"uint256\"}],\"name\":\"validateChallengeTimeOutPeriod\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bountyGovernanceHAT\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bountyHackerHATVested\",\"type\":\"uint256\"}],\"name\":\"validateHATSplit\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hats.finance\",\"details\":\"New hats.finance vaults should be created through a call to {createVault} so that they are linked to the registry\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_HAT\":\"the HAT token address\",\"_bountyGovernanceHAT\":\"The default percentage of a claim's total bounty to be swapped for HAT and sent to the governance\",\"_bountyHackerHATVested\":\"The default percentage of a claim's total bounty to be swapped for HAT and sent to a vesting contract for the hacker   _bountyGovernanceHAT + _bountyHackerHATVested must be less    than `HUNDRED_PERCENT`.\",\"_hatGovernance\":\"The governance address.\",\"_hatVaultImplementation\":\"The hat vault implementation address.\",\"_tokenLockFactory\":\"Address of the token lock factory to be used to create a vesting contract for the approved claim reporter.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Registry to deploy Hats.finance vaults and manage shared parameters\",\"version\":1},\"userdoc\":{\"errors\":{\"AmountSwappedLessThanMinimum()\":[{\"notice\":\"Raised on {swapAndSend} if the amount that was recieved in the swap was less than the minimum amount specified\"}],\"AmountToSwapIsZero()\":[{\"notice\":\"Raised on {swapAndSend} if the amount to swap is zero\"}],\"ChallengePeriodTooLong()\":[{\"notice\":\"Raised on {setDefaultChallengePeriod} if the challenge period  to be set is longer than 5 days\"}],\"ChallengePeriodTooShort()\":[{\"notice\":\"Raised on {setDefaultChallengePeriod} if the challenge period  to be set is shorter than 1 day\"}],\"ChallengeTimeOutPeriodTooLong()\":[{\"notice\":\"Raised on {setDefaultChallengeTimeOutPeriod} if the challenge timeout period to be set is longer than 85 days\"}],\"ChallengeTimeOutPeriodTooShort()\":[{\"notice\":\"Raised on {setDefaultChallengeTimeOutPeriod} if the challenge timeout period to be set is shorter than 1 day\"}],\"DelayTooShort()\":[{\"notice\":\"Raised on {setMaxBountyDelay} if the max bounty to be set is shorter than 2 days\"}],\"HatVestingDurationSmallerThanPeriods()\":[{\"notice\":\"Raised on {setHatVestingParams} if the vesting duration is  smaller than the vesting periods\"}],\"HatVestingDurationTooLong()\":[{\"notice\":\"Raised on {setHatVestingParams} if the vesting duration to be set is longer than 180 days\"}],\"HatVestingPeriodsCannotBeZero()\":[{\"notice\":\"Raised on {setHatVestingParams} if the vesting periods to be set is 0\"}],\"NotEnoughFeePaid()\":[{\"notice\":\"Raised on {LogClaim} if the transaction was not sent with the amount of ETH specified as {generalParameters.claimFee}\"}],\"SafetyPeriodTooLong()\":[{\"notice\":\"Raised on {setWithdrawSafetyPeriod} if the safety period to be set is longer than 6 hours\"}],\"SwapFailed()\":[{\"notice\":\"Raised on {swapAndSend} if the swap was not successful\"}],\"TotalHatsSplitPercentageShouldBeUpToMaxHATSplit()\":[{\"notice\":\"Raised on {setDefaultHATBountySplit} if the split to be set is greater than 20% (defined as 2000)\"}],\"WithdrawPeriodTooShort()\":[{\"notice\":\"Raised on {setWithdrawSafetyPeriod} if the withdraw period to be set is shorter than 1 hour\"}],\"WithdrawRequestEnabledPeriodTooLong()\":[{\"notice\":\"Raised on {setWithdrawRequestParams} if the withdraw request enabled period to be set is longer than 100 days\"}],\"WithdrawRequestEnabledPeriodTooShort()\":[{\"notice\":\"Raised on {setWithdrawRequestParams} if the withdraw request enabled period to be set is shorter than 6 hours\"}],\"WithdrawRequestPendingPeriodTooLong()\":[{\"notice\":\"Raised on {setWithdrawRequestParams} if the withdraw request pending period to be set is shorter than 3 months\"}]},\"events\":{\"LogClaim(address,string)\":{\"notice\":\"Emitted when a claim is logged\"},\"SetClaimFee(uint256)\":{\"notice\":\"Emitted when a new fee for logging a claim for a bounty is set\"},\"SetDefaultArbitrator(address)\":{\"notice\":\"Emitted when a new default arbitrator is set\"},\"SetDefaultArbitratorCanChangeBounty(bool)\":{\"notice\":\"Emitted when the default arbitrator can change bounty is set\"},\"SetDefaultChallengePeriod(uint256)\":{\"notice\":\"Emitted when a new default challenge period is set\"},\"SetDefaultChallengeTimeOutPeriod(uint256)\":{\"notice\":\"Emitted when a new default challenge timeout period is set\"},\"SetDefaultHATBountySplit(uint256,uint256)\":{\"notice\":\"Emitted when a new default HAT bounty split is set\"},\"SetEmergencyPaused(bool)\":{\"notice\":\"Emitted when the system is put into emergency pause/unpause\"},\"SetFeeSetter(address)\":{\"notice\":\"Emitted when a new fee setter is set\"},\"SetHatVestingParams(uint256,uint256)\":{\"notice\":\"Emitted when new HAT vesting parameters are set\"},\"SetMaxBountyDelay(uint256)\":{\"notice\":\"Emitted when a new timelock delay for setting the max bounty is set\"},\"SetVaultVisibility(address,bool)\":{\"notice\":\"Emitted when the UI visibility of a vault is changed\"},\"SetWithdrawRequestParams(uint256,uint256)\":{\"notice\":\"Emitted when new withdraw request time limits are set\"},\"SetWithdrawSafetyPeriod(uint256,uint256)\":{\"notice\":\"Emitted when new durations are set for withdraw period and safety period\"},\"SwapAndSend(address,uint256,uint256,address)\":{\"notice\":\"Emitted when a swap of vault tokens to HAT tokens is done and the HATS tokens are sent to beneficiary through vesting contract\"}},\"kind\":\"user\",\"methods\":{\"addTokensToSwap(address,address,uint256,uint256)\":{\"notice\":\"See {IHATVaultsRegistry-addTokensToSwap}. \"},\"constructor\":{\"notice\":\"initialize -\"},\"createVault(address,address,address,address,uint256,(uint256,uint256,uint256),string,uint256,uint256,bool)\":{\"notice\":\"See {IHATVaultsRegistry-createVault}. \"},\"getGeneralParameters()\":{\"notice\":\"See {IHATVaultsRegistry-getGeneralParameters}. \"},\"getNumberOfVaults()\":{\"notice\":\"See {IHATVaultsRegistry-getNumberOfVaults}. \"},\"logClaim(string)\":{\"notice\":\"See {IHATVaultsRegistry-logClaim}. \"},\"setClaimFee(uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setClaimFee}. \"},\"setDefaultArbitrator(address)\":{\"notice\":\"See {IHATVaultsRegistry-setDefaultArbitrator}. \"},\"setDefaultArbitratorCanChangeBounty(bool)\":{\"notice\":\"See {IHATVaultsRegistry-setDefaultArbitratorCanChangeBounty}. \"},\"setDefaultChallengePeriod(uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setDefaultChallengePeriod}. \"},\"setDefaultChallengeTimeOutPeriod(uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setDefaultChallengeTimeOutPeriod}. \"},\"setDefaultHATBountySplit(uint256,uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setDefaultHATBountySplit}. \"},\"setEmergencyPaused(bool)\":{\"notice\":\"See {IHATVaultsRegistry-setEmergencyPaused}. \"},\"setFeeSetter(address)\":{\"notice\":\"See {IHATVaultsRegistry-setFeeSetter}. \"},\"setHatVestingParams(uint256,uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setHatVestingParams}. \"},\"setMaxBountyDelay(uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setMaxBountyDelay}. \"},\"setVaultVisibility(address,bool)\":{\"notice\":\"See {IHATVaultsRegistry-setVaultVisibility}. \"},\"setWithdrawRequestParams(uint256,uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setWithdrawRequestParams}. \"},\"setWithdrawSafetyPeriod(uint256,uint256)\":{\"notice\":\"See {IHATVaultsRegistry-setWithdrawSafetyPeriod}. \"},\"swapAndSend(address,address[],uint256,address,bytes)\":{\"notice\":\"See {IHATVaultsRegistry-swapAndSend}. \"},\"validateChallengePeriod(uint256)\":{\"notice\":\"See {IHATVaultsRegistry-validateChallengePeriod}. \"},\"validateChallengeTimeOutPeriod(uint256)\":{\"notice\":\"See {IHATVaultsRegistry-validateChallengeTimeOutPeriod}. \"},\"validateHATSplit(uint256,uint256)\":{\"notice\":\"See {IHATVaultsRegistry-validateHATSplit}. \"}},\"notice\":\"Hats.finance is a proactive bounty protocol for white hat hackers and security experts, where projects, community members, and stakeholders incentivize protocol security and responsible disclosure. Hats create scalable vaults using the project\\u2019s own token. The value of the bounty increases with the success of the token and project. The owner of the registry has the permission to set time limits and bounty parameters and change vaults' info, and to set the other registry roles - fee setter and arbitrator. The arbitrator can challenge submitted claims for bounty payouts made by vaults' committees, approve them with a different bounty percentage or dismiss them. The fee setter can set the fee on withdrawals on all vaults. This project is open-source and can be found at: https://github.com/hats-finance/hats-contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HATVaultsRegistry.sol\":\"HATVaultsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/HATVault.sol\":{\"keccak256\":\"0x965a893d17fedb26ca90520382d80f941aff497ce85d5d24b36e66ffc5a2cc28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e90ca7bbd31b0afe1e229630167a9414aaa85effc2aff3e19f5b73ae54d7e43\",\"dweb:/ipfs/QmYfgivPKXaFmiZt69GDfz8dyPtFF9u4r4P1dPwGmyhMG4\"]},\"contracts/HATVaultsRegistry.sol\":{\"keccak256\":\"0x5992394d94615c8fda3f27a9c305fd671868a3100e53f62c8e596aa95086bbbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a637c01a9a2c32152e33bf09f9d54a4b21f2f8bfb48c37ea306e6ec7172a5a8\",\"dweb:/ipfs/QmZYF6vb5Rx6fPNBkvTbnWn3BaENGkeYw9uyZ6GzozATNw\"]},\"contracts/interfaces/IHATVault.sol\":{\"keccak256\":\"0x39ef58e6b37e2ef32d8cf51f29b810f4925fcd261779ffbcc7b040ea2a42faae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bc7459e54a4fe3e79e14184098893f88c52ed4c47f52ebf04665bece9ebf237\",\"dweb:/ipfs/QmZNdrpZGpJgkBhbQmd1zkzZHnw15fBDeVDkK8tex5b6Vn\"]},\"contracts/interfaces/IHATVaultsRegistry.sol\":{\"keccak256\":\"0x9500d5ca066f89ebccaf468dad591dca8bf8c7f6673767aa38185840999ed8ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17b4fb74dbf539612fbbfd3f4f26e59f56970608a2b10a9a8d54f7beae51bb7c\",\"dweb:/ipfs/QmY3hkcfrbAirsWNpsBHn8347Yq5TBm56n1bjWi5JLrj2o\"]},\"contracts/interfaces/IRewardController.sol\":{\"keccak256\":\"0x8e7198df19e0036e6d09121b934fbd5f0df52a38a0bb0fd66cbcc3dfce03edf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3cdb4bce2ba60445c091431bb6b8dfd1193ff90ce0247375d479f47c447aec6\",\"dweb:/ipfs/QmZiMFn9WjQEDQkL9uh9hegPSgJvNqdDgad7SpdjPeYt9M\"]},\"contracts/tokenlock/CloneFactory.sol\":{\"keccak256\":\"0x3df361492a4dcb8c14c0d10401567eb864c3d83595d995c59d9dddc79d61ed82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8be60ac25f966d20337624f8bcecdd9b77cf61dfdcfb29ed007771ea48416c0\",\"dweb:/ipfs/QmdvfeoVVun4hQbo3WdaBPKRvzcbdTc9qxobMDGfGWUWpr\"]},\"contracts/tokenlock/ITokenLock.sol\":{\"keccak256\":\"0x833e50961ad062df461610618b78a490b19ace22cd894b8def8e8b53bbf4764a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e02f62eeb702638e37143c33f51489623bfdca9c9349f354f33306402059c7\",\"dweb:/ipfs/QmTaYkvzpx36TNrQ1iqKbaJybHG7oAMNKcDJf7ThvDBGgW\"]},\"contracts/tokenlock/ITokenLockFactory.sol\":{\"keccak256\":\"0x06f2fb4e97fa837dfc047a92e82ae590e4f2633ad1009983175b225c1dc135d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114f20dfa82d0a75ade3378b5a5b1acadc3f1e6f7e57b61aea6dbc74fa25e721\",\"dweb:/ipfs/QmRtRKf6oRzzihsoc6zdvyFSQRoX6YsCBw5qKzxcfJu3mT\"]},\"contracts/tokenlock/TokenLockFactory.sol\":{\"keccak256\":\"0xda03667800e40435ef41b8a7fe654e860e307e220c199ca7720d69c9a4418b40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fadd932078eeec84003784bcfc8e140a507ca1cbc561c8717a691fb5ea5bb86c\",\"dweb:/ipfs/QmS1BNyxsof8eHignxt7RTtTKtCjyiuwf5vtKpCUQyAe4k\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4626Upgradeable.sol\":{\"keccak256\":\"0x2e991b91bca58c198c3ecd905d281c5e9ae230f4f34f14835294d5fa2d478991\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cbb3c9fba2ef72dd7a9226296cddcb764bef17d4d5b522c94818a8ee9a390a6\",\"dweb:/ipfs/QmdFhEFbcmzFba6hMN1xFakCzUCsPuRwtEvU2GTKQTxkae\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol\":{\"keccak256\":\"0xb0d5a9762975eba409bdca6729be209003a782262b5ad0214abd029a9f2e25f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55013e029fa1da851017bfd9d3694463a44f2a40e66b68a6731625077f7b3f74\",\"dweb:/ipfs/QmbfHZ2eUBjjFWLW2TQhi6NT3XVhDnPuqm8X785uYKaQ7j\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c\",\"dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_hatVaultImplementation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_hatGovernance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_HAT",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bountyGovernanceHAT",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_bountyHackerHATVested",
              "type": "uint256"
            },
            {
              "internalType": "contract ITokenLockFactory",
              "name": "_tokenLockFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmountSwappedLessThanMinimum"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmountToSwapIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ChallengePeriodTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ChallengePeriodTooShort"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ChallengeTimeOutPeriodTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ChallengeTimeOutPeriodTooShort"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DelayTooShort"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HatVestingDurationSmallerThanPeriods"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HatVestingDurationTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HatVestingPeriodsCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughFeePaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafetyPeriodTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TotalHatsSplitPercentageShouldBeUpToMaxHATSplit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawPeriodTooShort"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawRequestEnabledPeriodTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawRequestEnabledPeriodTooShort"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawRequestPendingPeriodTooLong"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "_descriptionHash",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogClaim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetClaimFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultArbitrator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetDefaultArbitrator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_defaultArbitratorCanChangeBounty",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetDefaultArbitratorCanChangeBounty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultChallengePeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetDefaultChallengePeriod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultChallengeTimeOutPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetDefaultChallengeTimeOutPeriod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultBountyGovernanceHAT",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_defaultBountyHackerHATVested",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetDefaultHATBountySplit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_isEmergencyPaused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetEmergencyPaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeSetter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetFeeSetter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_periods",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetHatVestingParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_delay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMaxBountyDelay",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_visible",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetVaultVisibility",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_withdrawRequestPendingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_withdrawRequestEnablePeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetWithdrawRequestParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_withdrawPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_safetyPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetWithdrawSafetyPeriod",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_beneficiary",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountSwapped",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountSent",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_tokenLock",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SwapAndSend",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_committee",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IRewardController",
              "name": "_rewardController",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_maxBounty",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct IHATVault.BountySplit",
              "name": "_bountySplit",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "hackerVested",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "hacker",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "committee",
                  "type": "uint256"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "_descriptionHash",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_bountyVestingDuration",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_bountyVestingPeriods",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "_isPaused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VaultCreated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HAT",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HUNDRED_PERCENT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_HAT_SPLIT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_hacker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_hackersHatReward",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_governanceHatReward",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addTokensToSwap"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_committee",
              "type": "address"
            },
            {
              "internalType": "contract IRewardController",
              "name": "_rewardController",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxBounty",
              "type": "uint256"
            },
            {
              "internalType": "struct IHATVault.BountySplit",
              "name": "_bountySplit",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "hackerVested",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "hacker",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "committee",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "string",
              "name": "_descriptionHash",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_bountyVestingDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_bountyVestingPeriods",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_isPaused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultArbitrator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultArbitratorCanChangeBounty",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBountyGovernanceHAT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBountyHackerHATVested",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultChallengePeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultChallengeTimeOutPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeSetter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "generalParameters",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "hatVestingDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hatVestingPeriods",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "safetyPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawRequestEnablePeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawRequestPendingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "setMaxBountyDelay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "claimFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGeneralParameters",
          "outputs": [
            {
              "internalType": "struct IHATVaultsRegistry.GeneralParameters",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "hatVestingDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "hatVestingPeriods",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "safetyPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawRequestEnablePeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawRequestPendingPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "setMaxBountyDelay",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimFee",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumberOfVaults",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "governanceHatReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hackersHatReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hatVaultImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hatVaults",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isEmergencyPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultVisible",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_descriptionHash",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "logClaim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimFee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultArbitrator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultArbitrator"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_defaultArbitratorCanChangeBounty",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultArbitratorCanChangeBounty"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultChallengePeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultChallengePeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultChallengeTimeOutPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultChallengeTimeOutPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_defaultBountyGovernanceHAT",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_defaultBountyHackerHATVested",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultHATBountySplit"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_isEmergencyPaused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEmergencyPaused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeSetter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeSetter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_periods",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setHatVestingParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_delay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxBountyDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_visible",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVaultVisibility"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_withdrawRequestPendingPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawRequestEnablePeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWithdrawRequestParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_withdrawPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_safetyPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWithdrawSafetyPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_beneficiaries",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_amountOutMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_routingContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_routingPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swapAndSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenLockFactory",
          "outputs": [
            {
              "internalType": "contract ITokenLockFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_challengePeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validateChallengePeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_challengeTimeOutPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validateChallengeTimeOutPeriod"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_bountyGovernanceHAT",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_bountyHackerHATVested",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "validateHATSplit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_HAT": "the HAT token address",
              "_bountyGovernanceHAT": "The default percentage of a claim's total bounty to be swapped for HAT and sent to the governance",
              "_bountyHackerHATVested": "The default percentage of a claim's total bounty to be swapped for HAT and sent to a vesting contract for the hacker   _bountyGovernanceHAT + _bountyHackerHATVested must be less    than `HUNDRED_PERCENT`.",
              "_hatGovernance": "The governance address.",
              "_hatVaultImplementation": "The hat vault implementation address.",
              "_tokenLockFactory": "Address of the token lock factory to be used to create a vesting contract for the approved claim reporter."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addTokensToSwap(address,address,uint256,uint256)": {
            "notice": "See {IHATVaultsRegistry-addTokensToSwap}. "
          },
          "constructor": {
            "notice": "initialize -"
          },
          "createVault(address,address,address,address,uint256,(uint256,uint256,uint256),string,uint256,uint256,bool)": {
            "notice": "See {IHATVaultsRegistry-createVault}. "
          },
          "getGeneralParameters()": {
            "notice": "See {IHATVaultsRegistry-getGeneralParameters}. "
          },
          "getNumberOfVaults()": {
            "notice": "See {IHATVaultsRegistry-getNumberOfVaults}. "
          },
          "logClaim(string)": {
            "notice": "See {IHATVaultsRegistry-logClaim}. "
          },
          "setClaimFee(uint256)": {
            "notice": "See {IHATVaultsRegistry-setClaimFee}. "
          },
          "setDefaultArbitrator(address)": {
            "notice": "See {IHATVaultsRegistry-setDefaultArbitrator}. "
          },
          "setDefaultArbitratorCanChangeBounty(bool)": {
            "notice": "See {IHATVaultsRegistry-setDefaultArbitratorCanChangeBounty}. "
          },
          "setDefaultChallengePeriod(uint256)": {
            "notice": "See {IHATVaultsRegistry-setDefaultChallengePeriod}. "
          },
          "setDefaultChallengeTimeOutPeriod(uint256)": {
            "notice": "See {IHATVaultsRegistry-setDefaultChallengeTimeOutPeriod}. "
          },
          "setDefaultHATBountySplit(uint256,uint256)": {
            "notice": "See {IHATVaultsRegistry-setDefaultHATBountySplit}. "
          },
          "setEmergencyPaused(bool)": {
            "notice": "See {IHATVaultsRegistry-setEmergencyPaused}. "
          },
          "setFeeSetter(address)": {
            "notice": "See {IHATVaultsRegistry-setFeeSetter}. "
          },
          "setHatVestingParams(uint256,uint256)": {
            "notice": "See {IHATVaultsRegistry-setHatVestingParams}. "
          },
          "setMaxBountyDelay(uint256)": {
            "notice": "See {IHATVaultsRegistry-setMaxBountyDelay}. "
          },
          "setVaultVisibility(address,bool)": {
            "notice": "See {IHATVaultsRegistry-setVaultVisibility}. "
          },
          "setWithdrawRequestParams(uint256,uint256)": {
            "notice": "See {IHATVaultsRegistry-setWithdrawRequestParams}. "
          },
          "setWithdrawSafetyPeriod(uint256,uint256)": {
            "notice": "See {IHATVaultsRegistry-setWithdrawSafetyPeriod}. "
          },
          "swapAndSend(address,address[],uint256,address,bytes)": {
            "notice": "See {IHATVaultsRegistry-swapAndSend}. "
          },
          "validateChallengePeriod(uint256)": {
            "notice": "See {IHATVaultsRegistry-validateChallengePeriod}. "
          },
          "validateChallengeTimeOutPeriod(uint256)": {
            "notice": "See {IHATVaultsRegistry-validateChallengeTimeOutPeriod}. "
          },
          "validateHATSplit(uint256,uint256)": {
            "notice": "See {IHATVaultsRegistry-validateHATSplit}. "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/HATVaultsRegistry.sol": "HATVaultsRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/HATVault.sol": {
        "keccak256": "0x965a893d17fedb26ca90520382d80f941aff497ce85d5d24b36e66ffc5a2cc28",
        "urls": [
          "bzz-raw://6e90ca7bbd31b0afe1e229630167a9414aaa85effc2aff3e19f5b73ae54d7e43",
          "dweb:/ipfs/QmYfgivPKXaFmiZt69GDfz8dyPtFF9u4r4P1dPwGmyhMG4"
        ],
        "license": "MIT"
      },
      "contracts/HATVaultsRegistry.sol": {
        "keccak256": "0x5992394d94615c8fda3f27a9c305fd671868a3100e53f62c8e596aa95086bbbe",
        "urls": [
          "bzz-raw://2a637c01a9a2c32152e33bf09f9d54a4b21f2f8bfb48c37ea306e6ec7172a5a8",
          "dweb:/ipfs/QmZYF6vb5Rx6fPNBkvTbnWn3BaENGkeYw9uyZ6GzozATNw"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHATVault.sol": {
        "keccak256": "0x39ef58e6b37e2ef32d8cf51f29b810f4925fcd261779ffbcc7b040ea2a42faae",
        "urls": [
          "bzz-raw://7bc7459e54a4fe3e79e14184098893f88c52ed4c47f52ebf04665bece9ebf237",
          "dweb:/ipfs/QmZNdrpZGpJgkBhbQmd1zkzZHnw15fBDeVDkK8tex5b6Vn"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IHATVaultsRegistry.sol": {
        "keccak256": "0x9500d5ca066f89ebccaf468dad591dca8bf8c7f6673767aa38185840999ed8ce",
        "urls": [
          "bzz-raw://17b4fb74dbf539612fbbfd3f4f26e59f56970608a2b10a9a8d54f7beae51bb7c",
          "dweb:/ipfs/QmY3hkcfrbAirsWNpsBHn8347Yq5TBm56n1bjWi5JLrj2o"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IRewardController.sol": {
        "keccak256": "0x8e7198df19e0036e6d09121b934fbd5f0df52a38a0bb0fd66cbcc3dfce03edf5",
        "urls": [
          "bzz-raw://c3cdb4bce2ba60445c091431bb6b8dfd1193ff90ce0247375d479f47c447aec6",
          "dweb:/ipfs/QmZiMFn9WjQEDQkL9uh9hegPSgJvNqdDgad7SpdjPeYt9M"
        ],
        "license": "MIT"
      },
      "contracts/tokenlock/CloneFactory.sol": {
        "keccak256": "0x3df361492a4dcb8c14c0d10401567eb864c3d83595d995c59d9dddc79d61ed82",
        "urls": [
          "bzz-raw://f8be60ac25f966d20337624f8bcecdd9b77cf61dfdcfb29ed007771ea48416c0",
          "dweb:/ipfs/QmdvfeoVVun4hQbo3WdaBPKRvzcbdTc9qxobMDGfGWUWpr"
        ],
        "license": "MIT"
      },
      "contracts/tokenlock/ITokenLock.sol": {
        "keccak256": "0x833e50961ad062df461610618b78a490b19ace22cd894b8def8e8b53bbf4764a",
        "urls": [
          "bzz-raw://c9e02f62eeb702638e37143c33f51489623bfdca9c9349f354f33306402059c7",
          "dweb:/ipfs/QmTaYkvzpx36TNrQ1iqKbaJybHG7oAMNKcDJf7ThvDBGgW"
        ],
        "license": "MIT"
      },
      "contracts/tokenlock/ITokenLockFactory.sol": {
        "keccak256": "0x06f2fb4e97fa837dfc047a92e82ae590e4f2633ad1009983175b225c1dc135d1",
        "urls": [
          "bzz-raw://114f20dfa82d0a75ade3378b5a5b1acadc3f1e6f7e57b61aea6dbc74fa25e721",
          "dweb:/ipfs/QmRtRKf6oRzzihsoc6zdvyFSQRoX6YsCBw5qKzxcfJu3mT"
        ],
        "license": "MIT"
      },
      "contracts/tokenlock/TokenLockFactory.sol": {
        "keccak256": "0xda03667800e40435ef41b8a7fe654e860e307e220c199ca7720d69c9a4418b40",
        "urls": [
          "bzz-raw://fadd932078eeec84003784bcfc8e140a507ca1cbc561c8717a691fb5ea5bb86c",
          "dweb:/ipfs/QmS1BNyxsof8eHignxt7RTtTKtCjyiuwf5vtKpCUQyAe4k"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4626Upgradeable.sol": {
        "keccak256": "0x2e991b91bca58c198c3ecd905d281c5e9ae230f4f34f14835294d5fa2d478991",
        "urls": [
          "bzz-raw://2cbb3c9fba2ef72dd7a9226296cddcb764bef17d4d5b522c94818a8ee9a390a6",
          "dweb:/ipfs/QmdFhEFbcmzFba6hMN1xFakCzUCsPuRwtEvU2GTKQTxkae"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol": {
        "keccak256": "0xb0d5a9762975eba409bdca6729be209003a782262b5ad0214abd029a9f2e25f1",
        "urls": [
          "bzz-raw://55013e029fa1da851017bfd9d3694463a44f2a40e66b68a6731625077f7b3f74",
          "dweb:/ipfs/QmbfHZ2eUBjjFWLW2TQhi6NT3XVhDnPuqm8X785uYKaQ7j"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df",
        "urls": [
          "bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b",
          "dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a",
        "urls": [
          "bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70",
          "dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Clones.sol": {
        "keccak256": "0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3",
        "urls": [
          "bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c",
          "dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/HATVaultsRegistry.sol",
    "id": 3783,
    "exportedSymbols": {
      "Address": [
        14604
      ],
      "AddressUpgradeable": [
        10255
      ],
      "CloneFactory": [
        6520
      ],
      "Clones": [
        12370
      ],
      "Context": [
        14626
      ],
      "ContextUpgradeable": [
        10297
      ],
      "ERC20Upgradeable": [
        8995
      ],
      "ERC4626Upgradeable": [
        9670
      ],
      "HATVault": [
        2632
      ],
      "HATVaultsRegistry": [
        3782
      ],
      "IERC20": [
        13075
      ],
      "IERC20MetadataUpgradeable": [
        9695
      ],
      "IERC20Permit": [
        14010
      ],
      "IERC20PermitUpgradeable": [
        9731
      ],
      "IERC20Upgradeable": [
        9073
      ],
      "IERC4626Upgradeable": [
        8174
      ],
      "IHATVault": [
        5175
      ],
      "IHATVaultsRegistry": [
        5554
      ],
      "IRewardController": [
        5661
      ],
      "ITokenLock": [
        6695
      ],
      "ITokenLockFactory": [
        6732
      ],
      "Initializable": [
        8325
      ],
      "MathUpgradeable": [
        10801
      ],
      "Ownable": [
        11307
      ],
      "OwnableUpgradeable": [
        8006
      ],
      "ReentrancyGuardUpgradeable": [
        8384
      ],
      "SafeERC20": [
        14291
      ],
      "SafeERC20Upgradeable": [
        10012
      ],
      "TokenLockFactory": [
        7874
      ]
    },
    "nodeType": "SourceUnit",
    "src": "118:18539:3",
    "nodes": [
      {
        "id": 2634,
        "nodeType": "PragmaDirective",
        "src": "118:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 2635,
        "nodeType": "ImportDirective",
        "src": "143:52:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3783,
        "sourceUnit": 11308,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2636,
        "nodeType": "ImportDirective",
        "src": "196:56:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3783,
        "sourceUnit": 13076,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2637,
        "nodeType": "ImportDirective",
        "src": "253:50:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3783,
        "sourceUnit": 12371,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2638,
        "nodeType": "ImportDirective",
        "src": "304:42:3",
        "nodes": [],
        "absolutePath": "contracts/tokenlock/TokenLockFactory.sol",
        "file": "./tokenlock/TokenLockFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3783,
        "sourceUnit": 7875,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2639,
        "nodeType": "ImportDirective",
        "src": "347:44:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IRewardController.sol",
        "file": "./interfaces/IRewardController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3783,
        "sourceUnit": 5662,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2640,
        "nodeType": "ImportDirective",
        "src": "392:45:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHATVaultsRegistry.sol",
        "file": "./interfaces/IHATVaultsRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3783,
        "sourceUnit": 5555,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2641,
        "nodeType": "ImportDirective",
        "src": "438:24:3",
        "nodes": [],
        "absolutePath": "contracts/HATVault.sol",
        "file": "./HATVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3783,
        "sourceUnit": 2633,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3782,
        "nodeType": "ContractDefinition",
        "src": "1582:17074:3",
        "nodes": [
          {
            "id": 2650,
            "nodeType": "UsingForDirective",
            "src": "1646:27:3",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 2647,
              "name": "SafeERC20",
              "nameLocations": [
                "1652:9:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14291,
              "src": "1652:9:3"
            },
            "typeName": {
              "id": 2649,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2648,
                "name": "IERC20",
                "nameLocations": [
                  "1666:6:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13075,
                "src": "1666:6:3"
              },
              "referencedDeclaration": 13075,
              "src": "1666:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13075",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 2661,
            "nodeType": "StructDefinition",
            "src": "1742:183:3",
            "nodes": [],
            "canonicalName": "HATVaultsRegistry.SwapData",
            "members": [
              {
                "constant": false,
                "id": 2652,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1776:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 2661,
                "src": "1768:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2651,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1768:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2654,
                "mutability": "mutable",
                "name": "amountUnused",
                "nameLocation": "1800:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 2661,
                "src": "1792:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2653,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1792:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2656,
                "mutability": "mutable",
                "name": "hatsReceived",
                "nameLocation": "1830:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 2661,
                "src": "1822:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2655,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1822:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2658,
                "mutability": "mutable",
                "name": "totalHackerReward",
                "nameLocation": "1860:17:3",
                "nodeType": "VariableDeclaration",
                "scope": 2661,
                "src": "1852:25:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2657,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1852:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2660,
                "mutability": "mutable",
                "name": "governanceAmountSwapped",
                "nameLocation": "1895:23:3",
                "nodeType": "VariableDeclaration",
                "scope": 2661,
                "src": "1887:31:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2659,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1887:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapData",
            "nameLocation": "1749:8:3",
            "scope": 3782,
            "visibility": "public"
          },
          {
            "id": 2664,
            "nodeType": "VariableDeclaration",
            "src": "1931:47:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "6ed93dd0",
            "mutability": "constant",
            "name": "HUNDRED_PERCENT",
            "nameLocation": "1955:15:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2662,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1931:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 2663,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1973:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "id": 2667,
            "nodeType": "VariableDeclaration",
            "src": "2059:44:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "ea55f18e",
            "mutability": "constant",
            "name": "MAX_HAT_SPLIT",
            "nameLocation": "2083:13:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2665,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2059:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030",
              "id": 2666,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2099:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000_by_1",
                "typeString": "int_const 2000"
              },
              "value": "2000"
            },
            "visibility": "public"
          },
          {
            "id": 2669,
            "nodeType": "VariableDeclaration",
            "src": "2110:47:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "21c0437a",
            "mutability": "immutable",
            "name": "hatVaultImplementation",
            "nameLocation": "2135:22:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2668,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2110:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2672,
            "nodeType": "VariableDeclaration",
            "src": "2163:26:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "06c6e3b8",
            "mutability": "mutable",
            "name": "hatVaults",
            "nameLocation": "2180:9:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2670,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2163:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2671,
              "nodeType": "ArrayTypeName",
              "src": "2163:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2676,
            "nodeType": "VariableDeclaration",
            "src": "2235:46:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "db399053",
            "mutability": "mutable",
            "name": "isVaultVisible",
            "nameLocation": "2267:14:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2675,
              "keyType": {
                "id": 2673,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2243:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2235:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2674,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2254:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2682,
            "nodeType": "VariableDeclaration",
            "src": "2328:71:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "354d75b9",
            "mutability": "mutable",
            "name": "hackersHatReward",
            "nameLocation": "2383:16:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2681,
              "keyType": {
                "id": 2677,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2336:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2328:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 2680,
                "keyType": {
                  "id": 2678,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2355:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2347:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 2679,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2366:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2686,
            "nodeType": "VariableDeclaration",
            "src": "2428:54:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "bcfdfc58",
            "mutability": "mutable",
            "name": "governanceHatReward",
            "nameLocation": "2463:19:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2685,
              "keyType": {
                "id": 2683,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2436:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2428:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2684,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2447:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2689,
            "nodeType": "VariableDeclaration",
            "src": "2522:61:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "df1b1ebe",
            "mutability": "mutable",
            "name": "generalParameters",
            "nameLocation": "2566:17:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
              "typeString": "struct IHATVaultsRegistry.GeneralParameters"
            },
            "typeName": {
              "id": 2688,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2687,
                "name": "IHATVaultsRegistry.GeneralParameters",
                "nameLocations": [
                  "2522:18:3",
                  "2541:17:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5197,
                "src": "2522:36:3"
              },
              "referencedDeclaration": 5197,
              "src": "2522:36:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage_ptr",
                "typeString": "struct IHATVaultsRegistry.GeneralParameters"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2692,
            "nodeType": "VariableDeclaration",
            "src": "2589:51:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "11c2aae3",
            "mutability": "immutable",
            "name": "tokenLockFactory",
            "nameLocation": "2624:16:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
              "typeString": "contract ITokenLockFactory"
            },
            "typeName": {
              "id": 2691,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2690,
                "name": "ITokenLockFactory",
                "nameLocations": [
                  "2589:17:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6732,
                "src": "2589:17:3"
              },
              "referencedDeclaration": 6732,
              "src": "2589:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
                "typeString": "contract ITokenLockFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2694,
            "nodeType": "VariableDeclaration",
            "src": "2687:24:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "87cf3ef4",
            "mutability": "mutable",
            "name": "feeSetter",
            "nameLocation": "2702:9:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2693,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2687:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2697,
            "nodeType": "VariableDeclaration",
            "src": "2792:27:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "3449a865",
            "mutability": "immutable",
            "name": "HAT",
            "nameLocation": "2816:3:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$13075",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2696,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2695,
                "name": "IERC20",
                "nameLocations": [
                  "2792:6:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13075,
                "src": "2792:6:3"
              },
              "referencedDeclaration": 13075,
              "src": "2792:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13075",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2699,
            "nodeType": "VariableDeclaration",
            "src": "3139:41:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "54492078",
            "mutability": "mutable",
            "name": "defaultBountyGovernanceHAT",
            "nameLocation": "3154:26:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2698,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3139:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2701,
            "nodeType": "VariableDeclaration",
            "src": "3302:43:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "120c1a7e",
            "mutability": "mutable",
            "name": "defaultBountyHackerHATVested",
            "nameLocation": "3317:28:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2700,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3302:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2703,
            "nodeType": "VariableDeclaration",
            "src": "3352:32:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "db0f267b",
            "mutability": "mutable",
            "name": "defaultArbitrator",
            "nameLocation": "3367:17:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2702,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3352:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2705,
            "nodeType": "VariableDeclaration",
            "src": "3390:37:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "11566d74",
            "mutability": "mutable",
            "name": "defaultChallengePeriod",
            "nameLocation": "3405:22:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2704,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3390:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2707,
            "nodeType": "VariableDeclaration",
            "src": "3433:44:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "f51a90e4",
            "mutability": "mutable",
            "name": "defaultChallengeTimeOutPeriod",
            "nameLocation": "3448:29:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2706,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3433:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2709,
            "nodeType": "VariableDeclaration",
            "src": "3483:44:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "116dbc93",
            "mutability": "mutable",
            "name": "defaultArbitratorCanChangeBounty",
            "nameLocation": "3495:32:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2708,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3483:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2711,
            "nodeType": "VariableDeclaration",
            "src": "3534:29:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "290d10c4",
            "mutability": "mutable",
            "name": "isEmergencyPaused",
            "nameLocation": "3546:17:3",
            "scope": 3782,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2710,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3534:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2790,
            "nodeType": "FunctionDefinition",
            "src": "4320:1188:3",
            "nodes": [],
            "body": {
              "id": 2789,
              "nodeType": "Block",
              "src": "4556:952:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2729,
                        "name": "_hatGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2716,
                        "src": "4585:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2728,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11306,
                      "src": "4566:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2731,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:34:3"
                },
                {
                  "expression": {
                    "id": 2734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2732,
                      "name": "hatVaultImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2669,
                      "src": "4610:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2733,
                      "name": "_hatVaultImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2714,
                      "src": "4635:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4610:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2735,
                  "nodeType": "ExpressionStatement",
                  "src": "4610:48:3"
                },
                {
                  "expression": {
                    "id": 2740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2736,
                      "name": "HAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2697,
                      "src": "4668:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2738,
                          "name": "_HAT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2718,
                          "src": "4681:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2737,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13075,
                        "src": "4674:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$13075_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4674:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4668:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2741,
                  "nodeType": "ExpressionStatement",
                  "src": "4668:18:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2743,
                        "name": "_bountyGovernanceHAT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2720,
                        "src": "4714:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2744,
                        "name": "_bountyHackerHATVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2722,
                        "src": "4736:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2742,
                      "name": "validateHATSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3619,
                      "src": "4697:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4697:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2746,
                  "nodeType": "ExpressionStatement",
                  "src": "4697:62:3"
                },
                {
                  "expression": {
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2747,
                      "name": "tokenLockFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2692,
                      "src": "4769:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
                        "typeString": "contract ITokenLockFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2748,
                      "name": "_tokenLockFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2725,
                      "src": "4788:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
                        "typeString": "contract ITokenLockFactory"
                      }
                    },
                    "src": "4769:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
                      "typeString": "contract ITokenLockFactory"
                    }
                  },
                  "id": 2750,
                  "nodeType": "ExpressionStatement",
                  "src": "4769:36:3"
                },
                {
                  "expression": {
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2751,
                      "name": "generalParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2689,
                      "src": "4815:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                        "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3930",
                          "id": 2754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4906:7:3",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7776000_by_1",
                            "typeString": "int_const 7776000"
                          },
                          "value": "90"
                        },
                        {
                          "hexValue": "3930",
                          "id": 2755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4946:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_90_by_1",
                            "typeString": "int_const 90"
                          },
                          "value": "90"
                        },
                        {
                          "hexValue": "3131",
                          "id": 2756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4978:8:3",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_39600_by_1",
                            "typeString": "int_const 39600"
                          },
                          "value": "11"
                        },
                        {
                          "hexValue": "31",
                          "id": 2757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5014:7:3",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "32",
                          "id": 2758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5054:6:3",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_172800_by_1",
                            "typeString": "int_const 172800"
                          },
                          "value": "2"
                        },
                        {
                          "hexValue": "37",
                          "id": 2759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5103:6:3",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "37",
                          "id": 2760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5153:6:3",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 2761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5183:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_7776000_by_1",
                            "typeString": "int_const 7776000"
                          },
                          {
                            "typeIdentifier": "t_rational_90_by_1",
                            "typeString": "int_const 90"
                          },
                          {
                            "typeIdentifier": "t_rational_39600_by_1",
                            "typeString": "int_const 39600"
                          },
                          {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          {
                            "typeIdentifier": "t_rational_172800_by_1",
                            "typeString": "int_const 172800"
                          },
                          {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 2752,
                          "name": "IHATVaultsRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5554,
                          "src": "4835:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHATVaultsRegistry_$5554_$",
                            "typeString": "type(contract IHATVaultsRegistry)"
                          }
                        },
                        "id": 2753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4854:17:3",
                        "memberName": "GeneralParameters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5197,
                        "src": "4835:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GeneralParameters_$5197_storage_ptr_$",
                          "typeString": "type(struct IHATVaultsRegistry.GeneralParameters storage pointer)"
                        }
                      },
                      "id": 2762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4886:18:3",
                        "4927:17:3",
                        "4962:14:3",
                        "5000:12:3",
                        "5035:17:3",
                        "5074:27:3",
                        "5123:28:3",
                        "5173:8:3"
                      ],
                      "names": [
                        "hatVestingDuration",
                        "hatVestingPeriods",
                        "withdrawPeriod",
                        "safetyPeriod",
                        "setMaxBountyDelay",
                        "withdrawRequestEnablePeriod",
                        "withdrawRequestPendingPeriod",
                        "claimFee"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4835:360:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GeneralParameters_$5197_memory_ptr",
                        "typeString": "struct IHATVaultsRegistry.GeneralParameters memory"
                      }
                    },
                    "src": "4815:380:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                      "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "4815:380:3"
                },
                {
                  "expression": {
                    "id": 2767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2765,
                      "name": "defaultBountyGovernanceHAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2699,
                      "src": "5206:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2766,
                      "name": "_bountyGovernanceHAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2720,
                      "src": "5235:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5206:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2768,
                  "nodeType": "ExpressionStatement",
                  "src": "5206:49:3"
                },
                {
                  "expression": {
                    "id": 2771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2769,
                      "name": "defaultBountyHackerHATVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2701,
                      "src": "5265:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2770,
                      "name": "_bountyHackerHATVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2722,
                      "src": "5296:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5265:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2772,
                  "nodeType": "ExpressionStatement",
                  "src": "5265:53:3"
                },
                {
                  "expression": {
                    "id": 2775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2773,
                      "name": "defaultArbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2703,
                      "src": "5328:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2774,
                      "name": "_hatGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2716,
                      "src": "5348:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5328:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2776,
                  "nodeType": "ExpressionStatement",
                  "src": "5328:34:3"
                },
                {
                  "expression": {
                    "id": 2779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2777,
                      "name": "defaultChallengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2705,
                      "src": "5372:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 2778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5397:6:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_259200_by_1",
                        "typeString": "int_const 259200"
                      },
                      "value": "3"
                    },
                    "src": "5372:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2780,
                  "nodeType": "ExpressionStatement",
                  "src": "5372:31:3"
                },
                {
                  "expression": {
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2781,
                      "name": "defaultChallengeTimeOutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2707,
                      "src": "5413:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 2782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5445:7:3",
                      "subdenomination": "weeks",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3024000_by_1",
                        "typeString": "int_const 3024000"
                      },
                      "value": "5"
                    },
                    "src": "5413:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "5413:39:3"
                },
                {
                  "expression": {
                    "id": 2787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2785,
                      "name": "defaultArbitratorCanChangeBounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2709,
                      "src": "5462:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5497:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5462:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2788,
                  "nodeType": "ExpressionStatement",
                  "src": "5462:39:3"
                }
              ]
            },
            "documentation": {
              "id": 2712,
              "nodeType": "StructuredDocumentation",
              "src": "3570:745:3",
              "text": " @notice initialize -\n @param _hatVaultImplementation The hat vault implementation address.\n @param _hatGovernance The governance address.\n @param _HAT the HAT token address\n @param _bountyGovernanceHAT The default percentage of a claim's total\n bounty to be swapped for HAT and sent to the governance\n @param _bountyHackerHATVested The default percentage of a claim's total\n bounty to be swapped for HAT and sent to a vesting contract for the hacker\n   _bountyGovernanceHAT + _bountyHackerHATVested must be less\n    than `HUNDRED_PERCENT`.\n @param _tokenLockFactory Address of the token lock factory to be used\n to create a vesting contract for the approved claim reporter."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "_hatVaultImplementation",
                  "nameLocation": "4349:23:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2790,
                  "src": "4341:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4341:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2716,
                  "mutability": "mutable",
                  "name": "_hatGovernance",
                  "nameLocation": "4390:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2790,
                  "src": "4382:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4382:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "_HAT",
                  "nameLocation": "4422:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2790,
                  "src": "4414:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2720,
                  "mutability": "mutable",
                  "name": "_bountyGovernanceHAT",
                  "nameLocation": "4444:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2790,
                  "src": "4436:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4436:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2722,
                  "mutability": "mutable",
                  "name": "_bountyHackerHATVested",
                  "nameLocation": "4482:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2790,
                  "src": "4474:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2725,
                  "mutability": "mutable",
                  "name": "_tokenLockFactory",
                  "nameLocation": "4532:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2790,
                  "src": "4514:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
                    "typeString": "contract ITokenLockFactory"
                  },
                  "typeName": {
                    "id": 2724,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2723,
                      "name": "ITokenLockFactory",
                      "nameLocations": [
                        "4514:17:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6732,
                      "src": "4514:17:3"
                    },
                    "referencedDeclaration": 6732,
                    "src": "4514:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
                      "typeString": "contract ITokenLockFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4331:224:3"
            },
            "returnParameters": {
              "id": 2727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4556:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2807,
            "nodeType": "FunctionDefinition",
            "src": "5578:180:3",
            "nodes": [],
            "body": {
              "id": 2806,
              "nodeType": "Block",
              "src": "5650:108:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2798,
                      "name": "isEmergencyPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2711,
                      "src": "5660:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2799,
                      "name": "_isEmergencyPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2793,
                      "src": "5680:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5660:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2801,
                  "nodeType": "ExpressionStatement",
                  "src": "5660:38:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2803,
                        "name": "_isEmergencyPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2793,
                        "src": "5732:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2802,
                      "name": "SetEmergencyPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "5713:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5713:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2805,
                  "nodeType": "EmitStatement",
                  "src": "5708:43:3"
                }
              ]
            },
            "baseFunctions": [
              5375
            ],
            "documentation": {
              "id": 2791,
              "nodeType": "StructuredDocumentation",
              "src": "5514:59:3",
              "text": "@notice See {IHATVaultsRegistry-setEmergencyPaused}. "
            },
            "functionSelector": "9d0ab89f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2796,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2795,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5640:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "5640:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5640:9:3"
              }
            ],
            "name": "setEmergencyPaused",
            "nameLocation": "5587:18:3",
            "parameters": {
              "id": 2794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2793,
                  "mutability": "mutable",
                  "name": "_isEmergencyPaused",
                  "nameLocation": "5611:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "5606:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2792,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5606:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5605:25:3"
            },
            "returnParameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5650:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2845,
            "nodeType": "FunctionDefinition",
            "src": "5818:380:3",
            "nodes": [],
            "body": {
              "id": 2844,
              "nodeType": "Block",
              "src": "5885:313:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2813,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "5899:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 2814,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5917:8:3",
                      "memberName": "claimFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5196,
                      "src": "5899:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5928:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5899:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2837,
                  "nodeType": "IfStatement",
                  "src": "5895:244:3",
                  "trueBody": {
                    "id": 2836,
                    "nodeType": "Block",
                    "src": "5931:208:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2817,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5949:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5953:5:3",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5949:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2819,
                              "name": "generalParameters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2689,
                              "src": "5961:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                                "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                              }
                            },
                            "id": 2820,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5979:8:3",
                            "memberName": "claimFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5196,
                            "src": "5961:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5949:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2825,
                        "nodeType": "IfStatement",
                        "src": "5945:85:3",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2822,
                              "name": "NotEnoughFeePaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5251,
                              "src": "6012:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6012:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2824,
                          "nodeType": "RevertStatement",
                          "src": "6005:25:3"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2832,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6118:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6122:5:3",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6118:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2828,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11235,
                                    "src": "6100:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 2829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6100:7:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6092:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2826,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6092:8:3",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6092:16:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6109:8:3",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6092:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6092:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2835,
                        "nodeType": "ExpressionStatement",
                        "src": "6092:36:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2839,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6162:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6166:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6162:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2841,
                        "name": "_descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2810,
                        "src": "6174:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2838,
                      "name": "LogClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5258,
                      "src": "6153:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 2842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6153:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2843,
                  "nodeType": "EmitStatement",
                  "src": "6148:43:3"
                }
              ]
            },
            "baseFunctions": [
              5381
            ],
            "documentation": {
              "id": 2808,
              "nodeType": "StructuredDocumentation",
              "src": "5764:49:3",
              "text": "@notice See {IHATVaultsRegistry-logClaim}. "
            },
            "functionSelector": "e367497d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logClaim",
            "nameLocation": "5827:8:3",
            "parameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2810,
                  "mutability": "mutable",
                  "name": "_descriptionHash",
                  "nameLocation": "5850:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2845,
                  "src": "5836:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2809,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5836:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5835:32:3"
            },
            "returnParameters": {
              "id": 2812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5885:0:3"
            },
            "scope": 3782,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2874,
            "nodeType": "FunctionDefinition",
            "src": "6274:480:3",
            "nodes": [],
            "body": {
              "id": 2873,
              "nodeType": "Block",
              "src": "6425:329:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2856,
                        "name": "_defaultBountyGovernanceHAT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "6452:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2857,
                        "name": "_defaultBountyHackerHATVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2850,
                        "src": "6481:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2855,
                      "name": "validateHATSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3619,
                      "src": "6435:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 2858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6435:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2859,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:76:3"
                },
                {
                  "expression": {
                    "id": 2862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2860,
                      "name": "defaultBountyGovernanceHAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2699,
                      "src": "6521:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2861,
                      "name": "_defaultBountyGovernanceHAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2848,
                      "src": "6550:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6521:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2863,
                  "nodeType": "ExpressionStatement",
                  "src": "6521:56:3"
                },
                {
                  "expression": {
                    "id": 2866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2864,
                      "name": "defaultBountyHackerHATVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2701,
                      "src": "6587:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2865,
                      "name": "_defaultBountyHackerHATVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2850,
                      "src": "6618:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6587:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2867,
                  "nodeType": "ExpressionStatement",
                  "src": "6587:60:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2869,
                        "name": "_defaultBountyGovernanceHAT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "6687:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2870,
                        "name": "_defaultBountyHackerHATVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2850,
                        "src": "6716:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2868,
                      "name": "SetDefaultHATBountySplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5344,
                      "src": "6662:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6662:84:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2872,
                  "nodeType": "EmitStatement",
                  "src": "6657:89:3"
                }
              ]
            },
            "baseFunctions": [
              5389
            ],
            "documentation": {
              "id": 2846,
              "nodeType": "StructuredDocumentation",
              "src": "6204:65:3",
              "text": "@notice See {IHATVaultsRegistry-setDefaultHATBountySplit}. "
            },
            "functionSelector": "132b1cc6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2853,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2852,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6415:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "6415:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6415:9:3"
              }
            ],
            "name": "setDefaultHATBountySplit",
            "nameLocation": "6283:24:3",
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2848,
                  "mutability": "mutable",
                  "name": "_defaultBountyGovernanceHAT",
                  "nameLocation": "6325:27:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2874,
                  "src": "6317:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2850,
                  "mutability": "mutable",
                  "name": "_defaultBountyHackerHATVested",
                  "nameLocation": "6370:29:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2874,
                  "src": "6362:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6362:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6307:98:3"
            },
            "returnParameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6425:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2891,
            "nodeType": "FunctionDefinition",
            "src": "6829:187:3",
            "nodes": [],
            "body": {
              "id": 2890,
              "nodeType": "Block",
              "src": "6906:110:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2882,
                      "name": "defaultArbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2703,
                      "src": "6916:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2883,
                      "name": "_defaultArbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2877,
                      "src": "6936:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6916:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2885,
                  "nodeType": "ExpressionStatement",
                  "src": "6916:38:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2887,
                        "name": "_defaultArbitrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "6990:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2886,
                      "name": "SetDefaultArbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5349,
                      "src": "6969:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6969:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2889,
                  "nodeType": "EmitStatement",
                  "src": "6964:45:3"
                }
              ]
            },
            "baseFunctions": [
              5403
            ],
            "documentation": {
              "id": 2875,
              "nodeType": "StructuredDocumentation",
              "src": "6763:61:3",
              "text": "@notice See {IHATVaultsRegistry-setDefaultArbitrator}. "
            },
            "functionSelector": "a8acd946",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2879,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6896:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "6896:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6896:9:3"
              }
            ],
            "name": "setDefaultArbitrator",
            "nameLocation": "6838:20:3",
            "parameters": {
              "id": 2878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2877,
                  "mutability": "mutable",
                  "name": "_defaultArbitrator",
                  "nameLocation": "6867:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2891,
                  "src": "6859:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6859:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6858:28:3"
            },
            "returnParameters": {
              "id": 2881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6906:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2912,
            "nodeType": "FunctionDefinition",
            "src": "7093:275:3",
            "nodes": [],
            "body": {
              "id": 2911,
              "nodeType": "Block",
              "src": "7180:188:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2900,
                        "name": "_defaultChallengePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "7214:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2899,
                      "name": "validateChallengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3640,
                      "src": "7190:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) pure"
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7190:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2902,
                  "nodeType": "ExpressionStatement",
                  "src": "7190:48:3"
                },
                {
                  "expression": {
                    "id": 2905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2903,
                      "name": "defaultChallengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2705,
                      "src": "7248:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2904,
                      "name": "_defaultChallengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2894,
                      "src": "7273:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7248:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2906,
                  "nodeType": "ExpressionStatement",
                  "src": "7248:48:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2908,
                        "name": "_defaultChallengePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2894,
                        "src": "7337:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2907,
                      "name": "SetDefaultChallengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5354,
                      "src": "7311:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7311:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2910,
                  "nodeType": "EmitStatement",
                  "src": "7306:55:3"
                }
              ]
            },
            "baseFunctions": [
              5409
            ],
            "documentation": {
              "id": 2892,
              "nodeType": "StructuredDocumentation",
              "src": "7022:66:3",
              "text": "@notice See {IHATVaultsRegistry-setDefaultChallengePeriod}. "
            },
            "functionSelector": "22f84ada",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2897,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2896,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7170:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "7170:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7170:9:3"
              }
            ],
            "name": "setDefaultChallengePeriod",
            "nameLocation": "7102:25:3",
            "parameters": {
              "id": 2895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2894,
                  "mutability": "mutable",
                  "name": "_defaultChallengePeriod",
                  "nameLocation": "7136:23:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2912,
                  "src": "7128:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7128:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7127:33:3"
            },
            "returnParameters": {
              "id": 2898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7180:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2933,
            "nodeType": "FunctionDefinition",
            "src": "7452:331:3",
            "nodes": [],
            "body": {
              "id": 2932,
              "nodeType": "Block",
              "src": "7553:230:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2921,
                        "name": "_defaultChallengeTimeOutPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2915,
                        "src": "7594:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2920,
                      "name": "validateChallengeTimeOutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3661,
                      "src": "7563:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) pure"
                      }
                    },
                    "id": 2922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7563:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2923,
                  "nodeType": "ExpressionStatement",
                  "src": "7563:62:3"
                },
                {
                  "expression": {
                    "id": 2926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2924,
                      "name": "defaultChallengeTimeOutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2707,
                      "src": "7635:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2925,
                      "name": "_defaultChallengeTimeOutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "7667:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7635:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2927,
                  "nodeType": "ExpressionStatement",
                  "src": "7635:62:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2929,
                        "name": "_defaultChallengeTimeOutPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2915,
                        "src": "7745:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2928,
                      "name": "SetDefaultChallengeTimeOutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5359,
                      "src": "7712:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7712:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2931,
                  "nodeType": "EmitStatement",
                  "src": "7707:69:3"
                }
              ]
            },
            "baseFunctions": [
              5415
            ],
            "documentation": {
              "id": 2913,
              "nodeType": "StructuredDocumentation",
              "src": "7374:73:3",
              "text": "@notice See {IHATVaultsRegistry-setDefaultChallengeTimeOutPeriod}. "
            },
            "functionSelector": "f836c449",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2918,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2917,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7543:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "7543:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7543:9:3"
              }
            ],
            "name": "setDefaultChallengeTimeOutPeriod",
            "nameLocation": "7461:32:3",
            "parameters": {
              "id": 2916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2915,
                  "mutability": "mutable",
                  "name": "_defaultChallengeTimeOutPeriod",
                  "nameLocation": "7502:30:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2933,
                  "src": "7494:38:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7494:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7493:40:3"
            },
            "returnParameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7553:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2950,
            "nodeType": "FunctionDefinition",
            "src": "7870:274:3",
            "nodes": [],
            "body": {
              "id": 2949,
              "nodeType": "Block",
              "src": "7974:170:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2941,
                      "name": "defaultArbitratorCanChangeBounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2709,
                      "src": "7984:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2942,
                      "name": "_defaultArbitratorCanChangeBounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2936,
                      "src": "8019:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7984:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2944,
                  "nodeType": "ExpressionStatement",
                  "src": "7984:68:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2946,
                        "name": "_defaultArbitratorCanChangeBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2936,
                        "src": "8103:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2945,
                      "name": "SetDefaultArbitratorCanChangeBounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5364,
                      "src": "8067:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8067:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2948,
                  "nodeType": "EmitStatement",
                  "src": "8062:75:3"
                }
              ]
            },
            "baseFunctions": [
              5421
            ],
            "documentation": {
              "id": 2934,
              "nodeType": "StructuredDocumentation",
              "src": "7789:76:3",
              "text": "@notice See {IHATVaultsRegistry-setDefaultArbitratorCanChangeBounty}. "
            },
            "functionSelector": "1b2cae6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2939,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2938,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7964:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "7964:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7964:9:3"
              }
            ],
            "name": "setDefaultArbitratorCanChangeBounty",
            "nameLocation": "7879:35:3",
            "parameters": {
              "id": 2937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2936,
                  "mutability": "mutable",
                  "name": "_defaultArbitratorCanChangeBounty",
                  "nameLocation": "7920:33:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2950,
                  "src": "7915:38:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2935,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7915:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7914:40:3"
            },
            "returnParameters": {
              "id": 2940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7974:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2967,
            "nodeType": "FunctionDefinition",
            "src": "8211:139:3",
            "nodes": [],
            "body": {
              "id": 2966,
              "nodeType": "Block",
              "src": "8272:78:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2958,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2694,
                      "src": "8282:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2959,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2953,
                      "src": "8294:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8282:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2961,
                  "nodeType": "ExpressionStatement",
                  "src": "8282:22:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2963,
                        "name": "_feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2953,
                        "src": "8332:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2962,
                      "name": "SetFeeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5263,
                      "src": "8319:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8319:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2965,
                  "nodeType": "EmitStatement",
                  "src": "8314:29:3"
                }
              ]
            },
            "baseFunctions": [
              5439
            ],
            "documentation": {
              "id": 2951,
              "nodeType": "StructuredDocumentation",
              "src": "8153:53:3",
              "text": "@notice See {IHATVaultsRegistry-setFeeSetter}. "
            },
            "functionSelector": "b19805af",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2956,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2955,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8262:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "8262:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8262:9:3"
              }
            ],
            "name": "setFeeSetter",
            "nameLocation": "8220:12:3",
            "parameters": {
              "id": 2954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2953,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "8241:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "8233:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8233:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8232:20:3"
            },
            "returnParameters": {
              "id": 2957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8272:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3016,
            "nodeType": "FunctionDefinition",
            "src": "8426:766:3",
            "nodes": [],
            "body": {
              "id": 3015,
              "nodeType": "Block",
              "src": "8578:614:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2977,
                      "name": "_withdrawRequestPendingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2970,
                      "src": "8592:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3930",
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8624:7:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7776000_by_1",
                        "typeString": "int_const 7776000"
                      },
                      "value": "90"
                    },
                    "src": "8592:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2983,
                  "nodeType": "IfStatement",
                  "src": "8588:101:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2980,
                        "name": "WithdrawRequestPendingPeriodTooLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5206,
                        "src": "8652:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8652:37:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2982,
                    "nodeType": "RevertStatement",
                    "src": "8645:44:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2984,
                      "name": "_withdrawRequestEnablePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "8703:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "36",
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8734:7:3",
                      "subdenomination": "hours",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_21600_by_1",
                        "typeString": "int_const 21600"
                      },
                      "value": "6"
                    },
                    "src": "8703:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2990,
                  "nodeType": "IfStatement",
                  "src": "8699:101:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2987,
                        "name": "WithdrawRequestEnabledPeriodTooShort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5209,
                        "src": "8762:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8762:38:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2989,
                    "nodeType": "RevertStatement",
                    "src": "8755:45:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2991,
                      "name": "_withdrawRequestEnablePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "8814:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8845:8:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8640000_by_1",
                        "typeString": "int_const 8640000"
                      },
                      "value": "100"
                    },
                    "src": "8814:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2997,
                  "nodeType": "IfStatement",
                  "src": "8810:101:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2994,
                        "name": "WithdrawRequestEnabledPeriodTooLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5212,
                        "src": "8874:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8874:37:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2996,
                    "nodeType": "RevertStatement",
                    "src": "8867:44:3"
                  }
                },
                {
                  "expression": {
                    "id": 3002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2998,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "8921:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3000,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8939:28:3",
                      "memberName": "withdrawRequestPendingPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5192,
                      "src": "8921:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3001,
                      "name": "_withdrawRequestPendingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2970,
                      "src": "8970:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8921:78:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3003,
                  "nodeType": "ExpressionStatement",
                  "src": "8921:78:3"
                },
                {
                  "expression": {
                    "id": 3008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3004,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "9009:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3006,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9027:27:3",
                      "memberName": "withdrawRequestEnablePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5190,
                      "src": "9009:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3007,
                      "name": "_withdrawRequestEnablePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "9057:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9009:76:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3009,
                  "nodeType": "ExpressionStatement",
                  "src": "9009:76:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3011,
                        "name": "_withdrawRequestPendingPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "9125:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3012,
                        "name": "_withdrawRequestEnablePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2972,
                        "src": "9156:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3010,
                      "name": "SetWithdrawRequestParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5270,
                      "src": "9100:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9100:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3014,
                  "nodeType": "EmitStatement",
                  "src": "9095:90:3"
                }
              ]
            },
            "baseFunctions": [
              5447
            ],
            "documentation": {
              "id": 2968,
              "nodeType": "StructuredDocumentation",
              "src": "8356:65:3",
              "text": "@notice See {IHATVaultsRegistry-setWithdrawRequestParams}. "
            },
            "functionSelector": "398488eb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2975,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2974,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8564:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "8564:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "8564:9:3"
              }
            ],
            "name": "setWithdrawRequestParams",
            "nameLocation": "8435:24:3",
            "parameters": {
              "id": 2973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2970,
                  "mutability": "mutable",
                  "name": "_withdrawRequestPendingPeriod",
                  "nameLocation": "8468:29:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "8460:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8460:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2972,
                  "mutability": "mutable",
                  "name": "_withdrawRequestEnablePeriod",
                  "nameLocation": "8508:28:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "8499:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8499:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8459:78:3"
            },
            "returnParameters": {
              "id": 2976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8578:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3035,
            "nodeType": "FunctionDefinition",
            "src": "9255:136:3",
            "nodes": [],
            "body": {
              "id": 3034,
              "nodeType": "Block",
              "src": "9309:82:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3024,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "9319:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3026,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9337:8:3",
                      "memberName": "claimFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5196,
                      "src": "9319:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3027,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3019,
                      "src": "9348:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9319:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3029,
                  "nodeType": "ExpressionStatement",
                  "src": "9319:33:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3031,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "9379:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3030,
                      "name": "SetClaimFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5275,
                      "src": "9367:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9367:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3033,
                  "nodeType": "EmitStatement",
                  "src": "9362:22:3"
                }
              ]
            },
            "baseFunctions": [
              5453
            ],
            "documentation": {
              "id": 3017,
              "nodeType": "StructuredDocumentation",
              "src": "9198:52:3",
              "text": "@notice See {IHATVaultsRegistry-setClaimFee}. "
            },
            "functionSelector": "2e75ab50",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3022,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3021,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9299:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "9299:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "9299:9:3"
              }
            ],
            "name": "setClaimFee",
            "nameLocation": "9264:11:3",
            "parameters": {
              "id": 3020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3019,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "9284:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "9276:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9276:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9275:14:3"
            },
            "returnParameters": {
              "id": 3023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9309:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3077,
            "nodeType": "FunctionDefinition",
            "src": "9466:433:3",
            "nodes": [],
            "body": {
              "id": 3076,
              "nodeType": "Block",
              "src": "9566:333:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3045,
                      "name": "_withdrawPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "9581:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9599:7:3",
                      "subdenomination": "hours",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "value": "1"
                    },
                    "src": "9581:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3051,
                  "nodeType": "IfStatement",
                  "src": "9577:62:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3048,
                        "name": "WithdrawPeriodTooShort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5200,
                        "src": "9615:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9615:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3050,
                    "nodeType": "RevertStatement",
                    "src": "9608:31:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3052,
                      "name": "_safetyPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3040,
                      "src": "9653:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "36",
                      "id": 3053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9669:7:3",
                      "subdenomination": "hours",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_21600_by_1",
                        "typeString": "int_const 21600"
                      },
                      "value": "6"
                    },
                    "src": "9653:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3058,
                  "nodeType": "IfStatement",
                  "src": "9649:57:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3055,
                        "name": "SafetyPeriodTooLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5203,
                        "src": "9685:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9685:21:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3057,
                    "nodeType": "RevertStatement",
                    "src": "9678:28:3"
                  }
                },
                {
                  "expression": {
                    "id": 3063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3059,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "9716:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3061,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9734:14:3",
                      "memberName": "withdrawPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5186,
                      "src": "9716:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3062,
                      "name": "_withdrawPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3038,
                      "src": "9751:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9716:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3064,
                  "nodeType": "ExpressionStatement",
                  "src": "9716:50:3"
                },
                {
                  "expression": {
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3065,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "9776:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3067,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9794:12:3",
                      "memberName": "safetyPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5188,
                      "src": "9776:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3068,
                      "name": "_safetyPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3040,
                      "src": "9809:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9776:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3070,
                  "nodeType": "ExpressionStatement",
                  "src": "9776:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3072,
                        "name": "_withdrawPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "9861:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3073,
                        "name": "_safetyPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3040,
                        "src": "9878:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3071,
                      "name": "SetWithdrawSafetyPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5282,
                      "src": "9837:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3075,
                  "nodeType": "EmitStatement",
                  "src": "9832:60:3"
                }
              ]
            },
            "baseFunctions": [
              5461
            ],
            "documentation": {
              "id": 3036,
              "nodeType": "StructuredDocumentation",
              "src": "9397:64:3",
              "text": "@notice See {IHATVaultsRegistry-setWithdrawSafetyPeriod}. "
            },
            "functionSelector": "520a924d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3042,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9556:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "9556:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "9556:9:3"
              }
            ],
            "name": "setWithdrawSafetyPeriod",
            "nameLocation": "9475:23:3",
            "parameters": {
              "id": 3041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3038,
                  "mutability": "mutable",
                  "name": "_withdrawPeriod",
                  "nameLocation": "9507:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "9499:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9499:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3040,
                  "mutability": "mutable",
                  "name": "_safetyPeriod",
                  "nameLocation": "9532:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "9524:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9524:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9498:48:3"
            },
            "returnParameters": {
              "id": 3044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9566:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3126,
            "nodeType": "FunctionDefinition",
            "src": "9970:480:3",
            "nodes": [],
            "body": {
              "id": 3125,
              "nodeType": "Block",
              "src": "10055:395:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3087,
                      "name": "_duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3080,
                      "src": "10069:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "313830",
                      "id": 3088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10082:8:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15552000_by_1",
                        "typeString": "int_const 15552000"
                      },
                      "value": "180"
                    },
                    "src": "10069:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3093,
                  "nodeType": "IfStatement",
                  "src": "10065:61:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3090,
                        "name": "HatVestingDurationTooLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5215,
                        "src": "10099:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10099:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3092,
                    "nodeType": "RevertStatement",
                    "src": "10092:34:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3094,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3082,
                      "src": "10140:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10152:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10140:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3100,
                  "nodeType": "IfStatement",
                  "src": "10136:57:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3097,
                        "name": "HatVestingPeriodsCannotBeZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5218,
                        "src": "10162:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10162:31:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3099,
                    "nodeType": "RevertStatement",
                    "src": "10155:38:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3101,
                      "name": "_duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3080,
                      "src": "10207:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3102,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3082,
                      "src": "10219:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10207:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3107,
                  "nodeType": "IfStatement",
                  "src": "10203:71:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3104,
                        "name": "HatVestingDurationSmallerThanPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5221,
                        "src": "10236:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10236:38:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3106,
                    "nodeType": "RevertStatement",
                    "src": "10229:45:3"
                  }
                },
                {
                  "expression": {
                    "id": 3112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3108,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "10284:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10302:18:3",
                      "memberName": "hatVestingDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5182,
                      "src": "10284:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3111,
                      "name": "_duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3080,
                      "src": "10323:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10284:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3113,
                  "nodeType": "ExpressionStatement",
                  "src": "10284:48:3"
                },
                {
                  "expression": {
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3114,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "10342:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10360:17:3",
                      "memberName": "hatVestingPeriods",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5184,
                      "src": "10342:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3117,
                      "name": "_periods",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3082,
                      "src": "10380:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10342:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3119,
                  "nodeType": "ExpressionStatement",
                  "src": "10342:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3121,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "10423:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3122,
                        "name": "_periods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3082,
                        "src": "10434:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3120,
                      "name": "SetHatVestingParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5289,
                      "src": "10403:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10403:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3124,
                  "nodeType": "EmitStatement",
                  "src": "10398:45:3"
                }
              ]
            },
            "baseFunctions": [
              5469
            ],
            "documentation": {
              "id": 3078,
              "nodeType": "StructuredDocumentation",
              "src": "9905:60:3",
              "text": "@notice See {IHATVaultsRegistry-setHatVestingParams}. "
            },
            "functionSelector": "dd072f03",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3085,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3084,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10045:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "10045:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "10045:9:3"
              }
            ],
            "name": "setHatVestingParams",
            "nameLocation": "9979:19:3",
            "parameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3080,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "10007:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3126,
                  "src": "9999:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9999:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3082,
                  "mutability": "mutable",
                  "name": "_periods",
                  "nameLocation": "10026:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3126,
                  "src": "10018:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10018:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9998:37:3"
            },
            "returnParameters": {
              "id": 3086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10055:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3152,
            "nodeType": "FunctionDefinition",
            "src": "10519:216:3",
            "nodes": [],
            "body": {
              "id": 3151,
              "nodeType": "Block",
              "src": "10581:154:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3134,
                      "name": "_delay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3129,
                      "src": "10595:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 3135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10604:6:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_172800_by_1",
                        "typeString": "int_const 172800"
                      },
                      "value": "2"
                    },
                    "src": "10595:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3140,
                  "nodeType": "IfStatement",
                  "src": "10591:43:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3137,
                        "name": "DelayTooShort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5224,
                        "src": "10619:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10619:15:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3139,
                    "nodeType": "RevertStatement",
                    "src": "10612:22:3"
                  }
                },
                {
                  "expression": {
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3141,
                        "name": "generalParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "10644:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                        }
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10662:17:3",
                      "memberName": "setMaxBountyDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5194,
                      "src": "10644:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3144,
                      "name": "_delay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3129,
                      "src": "10682:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10644:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3146,
                  "nodeType": "ExpressionStatement",
                  "src": "10644:44:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3148,
                        "name": "_delay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3129,
                        "src": "10721:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3147,
                      "name": "SetMaxBountyDelay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5294,
                      "src": "10703:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10703:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "EmitStatement",
                  "src": "10698:30:3"
                }
              ]
            },
            "baseFunctions": [
              5475
            ],
            "documentation": {
              "id": 3127,
              "nodeType": "StructuredDocumentation",
              "src": "10456:58:3",
              "text": "@notice See {IHATVaultsRegistry-setMaxBountyDelay}. "
            },
            "functionSelector": "24cda22d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3131,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10571:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "10571:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "10571:9:3"
              }
            ],
            "name": "setMaxBountyDelay",
            "nameLocation": "10528:17:3",
            "parameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3129,
                  "mutability": "mutable",
                  "name": "_delay",
                  "nameLocation": "10554:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3152,
                  "src": "10546:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10546:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10545:16:3"
            },
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10581:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3230,
            "nodeType": "FunctionDefinition",
            "src": "10798:1360:3",
            "nodes": [],
            "body": {
              "id": 3229,
              "nodeType": "Block",
              "src": "11212:946:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3181,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3179,
                      "src": "11222:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3184,
                          "name": "hatVaultImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2669,
                          "src": "11243:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 3182,
                          "name": "Clones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12370,
                          "src": "11230:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Clones_$12370_$",
                            "typeString": "type(library Clones)"
                          }
                        },
                        "id": 3183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11237:5:3",
                        "memberName": "clone",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12313,
                        "src": "11230:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) returns (address)"
                        }
                      },
                      "id": 3185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11230:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11222:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "11222:44:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3194,
                            "name": "_rewardController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3163,
                            "src": "11379:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewardController_$5661",
                              "typeString": "contract IRewardController"
                            }
                          },
                          {
                            "id": 3195,
                            "name": "_bountyVestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3172,
                            "src": "11431:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3196,
                            "name": "_bountyVestingPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3174,
                            "src": "11487:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3197,
                            "name": "_maxBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3165,
                            "src": "11537:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3198,
                            "name": "_bountySplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3168,
                            "src": "11578:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BountySplit_$4695_memory_ptr",
                              "typeString": "struct IHATVault.BountySplit memory"
                            }
                          },
                          {
                            "id": 3199,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3156,
                            "src": "11615:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 3200,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3158,
                            "src": "11646:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3201,
                            "name": "_committee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3160,
                            "src": "11681:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3202,
                            "name": "_isPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3176,
                            "src": "11719:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 3203,
                            "name": "_descriptionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3170,
                            "src": "11763:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRewardController_$5661",
                              "typeString": "contract IRewardController"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_struct$_BountySplit_$4695_memory_ptr",
                              "typeString": "struct IHATVault.BountySplit memory"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3192,
                            "name": "IHATVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5175,
                            "src": "11317:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IHATVault_$5175_$",
                              "typeString": "type(contract IHATVault)"
                            }
                          },
                          "id": 3193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11327:15:3",
                          "memberName": "VaultInitParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4730,
                          "src": "11317:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_VaultInitParams_$4730_storage_ptr_$",
                            "typeString": "type(struct IHATVault.VaultInitParams storage pointer)"
                          }
                        },
                        "id": 3204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "11361:16:3",
                          "11414:15:3",
                          "11471:14:3",
                          "11526:9:3",
                          "11565:11:3",
                          "11608:5:3",
                          "11639:5:3",
                          "11670:9:3",
                          "11709:8:3",
                          "11746:15:3"
                        ],
                        "names": [
                          "rewardController",
                          "vestingDuration",
                          "vestingPeriods",
                          "maxBounty",
                          "bountySplit",
                          "asset",
                          "owner",
                          "committee",
                          "isPaused",
                          "descriptionHash"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "11317:477:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInitParams_$4730_memory_ptr",
                          "typeString": "struct IHATVault.VaultInitParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VaultInitParams_$4730_memory_ptr",
                          "typeString": "struct IHATVault.VaultInitParams memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3189,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3179,
                            "src": "11286:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3188,
                          "name": "HATVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2632,
                          "src": "11277:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_HATVault_$2632_$",
                            "typeString": "type(contract HATVault)"
                          }
                        },
                        "id": 3190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11277:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HATVault_$2632",
                          "typeString": "contract HATVault"
                        }
                      },
                      "id": 3191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11293:10:3",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "11277:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_VaultInitParams_$4730_memory_ptr_$returns$__$",
                        "typeString": "function (struct IHATVault.VaultInitParams memory) external"
                      }
                    },
                    "id": 3205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11277:527:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3206,
                  "nodeType": "ExpressionStatement",
                  "src": "11277:527:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3210,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "11830:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3207,
                        "name": "hatVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2672,
                        "src": "11815:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11825:4:3",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "11815:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11815:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3212,
                  "nodeType": "ExpressionStatement",
                  "src": "11815:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3214,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "11878:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3217,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3156,
                            "src": "11905:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11897:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11897:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11897:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3219,
                        "name": "_committee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3160,
                        "src": "11926:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3220,
                        "name": "_rewardController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3163,
                        "src": "11950:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardController_$5661",
                          "typeString": "contract IRewardController"
                        }
                      },
                      {
                        "id": 3221,
                        "name": "_maxBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3165,
                        "src": "11981:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3222,
                        "name": "_bountySplit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3168,
                        "src": "12005:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BountySplit_$4695_memory_ptr",
                          "typeString": "struct IHATVault.BountySplit memory"
                        }
                      },
                      {
                        "id": 3223,
                        "name": "_descriptionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3170,
                        "src": "12031:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3224,
                        "name": "_bountyVestingDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3172,
                        "src": "12061:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3225,
                        "name": "_bountyVestingPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3174,
                        "src": "12097:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3226,
                        "name": "_isPaused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3176,
                        "src": "12132:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IRewardController_$5661",
                          "typeString": "contract IRewardController"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_BountySplit_$4695_memory_ptr",
                          "typeString": "struct IHATVault.BountySplit memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3213,
                      "name": "VaultCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5326,
                      "src": "11852:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_contract$_IRewardController_$5661_$_t_uint256_$_t_struct$_BountySplit_$4695_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,contract IRewardController,uint256,struct IHATVault.BountySplit memory,string memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 3227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11852:299:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3228,
                  "nodeType": "EmitStatement",
                  "src": "11847:304:3"
                }
              ]
            },
            "baseFunctions": [
              5504
            ],
            "documentation": {
              "id": 3153,
              "nodeType": "StructuredDocumentation",
              "src": "10741:52:3",
              "text": "@notice See {IHATVaultsRegistry-createVault}. "
            },
            "functionSelector": "c99a02b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "10807:11:3",
            "parameters": {
              "id": 3177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3156,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "10835:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "10828:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3155,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3154,
                      "name": "IERC20",
                      "nameLocations": [
                        "10828:6:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13075,
                      "src": "10828:6:3"
                    },
                    "referencedDeclaration": 13075,
                    "src": "10828:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3158,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "10859:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "10851:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10851:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3160,
                  "mutability": "mutable",
                  "name": "_committee",
                  "nameLocation": "10883:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "10875:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10875:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "_rewardController",
                  "nameLocation": "10921:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "10903:35:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRewardController_$5661",
                    "typeString": "contract IRewardController"
                  },
                  "typeName": {
                    "id": 3162,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3161,
                      "name": "IRewardController",
                      "nameLocations": [
                        "10903:17:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5661,
                      "src": "10903:17:3"
                    },
                    "referencedDeclaration": 5661,
                    "src": "10903:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardController_$5661",
                      "typeString": "contract IRewardController"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3165,
                  "mutability": "mutable",
                  "name": "_maxBounty",
                  "nameLocation": "10956:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "10948:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10948:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3168,
                  "mutability": "mutable",
                  "name": "_bountySplit",
                  "nameLocation": "11004:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "10976:40:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BountySplit_$4695_memory_ptr",
                    "typeString": "struct IHATVault.BountySplit"
                  },
                  "typeName": {
                    "id": 3167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3166,
                      "name": "HATVault.BountySplit",
                      "nameLocations": [
                        "10976:8:3",
                        "10985:11:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4695,
                      "src": "10976:20:3"
                    },
                    "referencedDeclaration": 4695,
                    "src": "10976:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BountySplit_$4695_storage_ptr",
                      "typeString": "struct IHATVault.BountySplit"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "_descriptionHash",
                  "nameLocation": "11040:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "11026:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11026:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3172,
                  "mutability": "mutable",
                  "name": "_bountyVestingDuration",
                  "nameLocation": "11074:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "11066:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11066:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3174,
                  "mutability": "mutable",
                  "name": "_bountyVestingPeriods",
                  "nameLocation": "11114:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "11106:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11106:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3176,
                  "mutability": "mutable",
                  "name": "_isPaused",
                  "nameLocation": "11150:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "11145:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11145:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10818:347:3"
            },
            "returnParameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3179,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "11201:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3230,
                  "src": "11193:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11193:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11192:15:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3252,
            "nodeType": "FunctionDefinition",
            "src": "12228:179:3",
            "nodes": [],
            "body": {
              "id": 3251,
              "nodeType": "Block",
              "src": "12306:101:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3240,
                        "name": "isVaultVisible",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2676,
                        "src": "12316:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3242,
                      "indexExpression": {
                        "id": 3241,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3233,
                        "src": "12331:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12316:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3243,
                      "name": "_visible",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3235,
                      "src": "12341:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12316:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3245,
                  "nodeType": "ExpressionStatement",
                  "src": "12316:33:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3247,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3233,
                        "src": "12383:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3248,
                        "name": "_visible",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "12391:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3246,
                      "name": "SetVaultVisibility",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5301,
                      "src": "12364:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 3249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12364:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3250,
                  "nodeType": "EmitStatement",
                  "src": "12359:41:3"
                }
              ]
            },
            "baseFunctions": [
              5512
            ],
            "documentation": {
              "id": 3231,
              "nodeType": "StructuredDocumentation",
              "src": "12164:59:3",
              "text": "@notice See {IHATVaultsRegistry-setVaultVisibility}. "
            },
            "functionSelector": "aec1d108",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3237,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "12296:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "12296:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "12296:9:3"
              }
            ],
            "name": "setVaultVisibility",
            "nameLocation": "12237:18:3",
            "parameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3233,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "12264:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3252,
                  "src": "12256:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12256:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3235,
                  "mutability": "mutable",
                  "name": "_visible",
                  "nameLocation": "12277:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3252,
                  "src": "12272:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3234,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12272:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12255:31:3"
            },
            "returnParameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12306:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3304,
            "nodeType": "FunctionDefinition",
            "src": "12474:446:3",
            "nodes": [],
            "body": {
              "id": 3303,
              "nodeType": "Block",
              "src": "12635:285:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3266,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "12653:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3303,
                      "src": "12645:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12645:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3270,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3267,
                      "name": "_hackersHatReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3260,
                      "src": "12662:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 3268,
                      "name": "_governanceHatReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3262,
                      "src": "12682:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12662:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12645:57:3"
                },
                {
                  "expression": {
                    "id": 3280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3271,
                          "name": "hackersHatReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2682,
                          "src": "12712:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3277,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 3274,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3256,
                              "src": "12737:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$13075",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$13075",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 3273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12729:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3272,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12729:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12729:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12712:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3278,
                      "indexExpression": {
                        "id": 3276,
                        "name": "_hacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3258,
                        "src": "12746:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12712:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3279,
                      "name": "_hackersHatReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3260,
                      "src": "12758:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12712:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3281,
                  "nodeType": "ExpressionStatement",
                  "src": "12712:63:3"
                },
                {
                  "expression": {
                    "id": 3289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3282,
                        "name": "governanceHatReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2686,
                        "src": "12785:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3287,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 3285,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3256,
                            "src": "12813:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12805:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12805:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12805:15:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12785:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3288,
                      "name": "_governanceHatReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3262,
                      "src": "12825:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12785:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3290,
                  "nodeType": "ExpressionStatement",
                  "src": "12785:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3294,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12879:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12883:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12879:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3298,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12899:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                              "typeString": "contract HATVaultsRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                              "typeString": "contract HATVaultsRegistry"
                            }
                          ],
                          "id": 3297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12891:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3296,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12891:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12891:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3300,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3266,
                        "src": "12906:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3291,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3256,
                        "src": "12855:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12862:16:3",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14068,
                      "src": "12855:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13075_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13075_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12855:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "12855:58:3"
                }
              ]
            },
            "baseFunctions": [
              5525
            ],
            "documentation": {
              "id": 3253,
              "nodeType": "StructuredDocumentation",
              "src": "12413:56:3",
              "text": "@notice See {IHATVaultsRegistry-addTokensToSwap}. "
            },
            "functionSelector": "5dd11415",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokensToSwap",
            "nameLocation": "12483:15:3",
            "parameters": {
              "id": 3263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3256,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "12515:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "12508:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3255,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3254,
                      "name": "IERC20",
                      "nameLocations": [
                        "12508:6:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13075,
                      "src": "12508:6:3"
                    },
                    "referencedDeclaration": 13075,
                    "src": "12508:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3258,
                  "mutability": "mutable",
                  "name": "_hacker",
                  "nameLocation": "12539:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "12531:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12531:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "_hackersHatReward",
                  "nameLocation": "12564:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "12556:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12556:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3262,
                  "mutability": "mutable",
                  "name": "_governanceHatReward",
                  "nameLocation": "12599:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "12591:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12591:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12498:127:3"
            },
            "returnParameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12635:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3581,
            "nodeType": "FunctionDefinition",
            "src": "12983:2861:3",
            "nodes": [],
            "body": {
              "id": 3580,
              "nodeType": "Block",
              "src": "13205:2639:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3323,
                      "mutability": "mutable",
                      "name": "swapData",
                      "nameLocation": "13283:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3580,
                      "src": "13267:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                        "typeString": "struct HATVaultsRegistry.SwapData"
                      },
                      "typeName": {
                        "id": 3322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3321,
                          "name": "SwapData",
                          "nameLocations": [
                            "13267:8:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2661,
                          "src": "13267:8:3"
                        },
                        "referencedDeclaration": 2661,
                        "src": "13267:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapData_$2661_storage_ptr",
                          "typeString": "struct HATVaultsRegistry.SwapData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3324,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13267:24:3"
                },
                {
                  "expression": {
                    "id": 3331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3325,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "13301:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                          "typeString": "struct HATVaultsRegistry.SwapData memory"
                        }
                      },
                      "id": 3327,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13310:6:3",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2652,
                      "src": "13301:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 3328,
                        "name": "governanceHatReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2686,
                        "src": "13319:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3330,
                      "indexExpression": {
                        "id": 3329,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3307,
                        "src": "13339:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13319:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13301:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3332,
                  "nodeType": "ExpressionStatement",
                  "src": "13301:45:3"
                },
                {
                  "body": {
                    "id": 3356,
                    "nodeType": "Block",
                    "src": "13408:87:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 3354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3344,
                              "name": "swapData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3323,
                              "src": "13422:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                "typeString": "struct HATVaultsRegistry.SwapData memory"
                              }
                            },
                            "id": 3346,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13431:6:3",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2652,
                            "src": "13422:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3347,
                                "name": "hackersHatReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2682,
                                "src": "13441:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3349,
                              "indexExpression": {
                                "id": 3348,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3307,
                                "src": "13458:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13441:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3353,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3350,
                                "name": "_beneficiaries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3310,
                                "src": "13466:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 3352,
                              "indexExpression": {
                                "id": 3351,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3334,
                                "src": "13481:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13466:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13441:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13422:62:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3355,
                        "nodeType": "ExpressionStatement",
                        "src": "13422:62:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3337,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3334,
                      "src": "13376:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3338,
                        "name": "_beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "13380:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 3339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13395:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13380:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13376:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3357,
                  "initializationExpression": {
                    "assignments": [
                      3334
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3334,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13369:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3357,
                        "src": "13361:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3333,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13361:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3336,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13373:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13361:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13403:3:3",
                      "subExpression": {
                        "id": 3341,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3334,
                        "src": "13403:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3343,
                    "nodeType": "ExpressionStatement",
                    "src": "13403:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "13356:139:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3358,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "13508:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                          "typeString": "struct HATVaultsRegistry.SwapData memory"
                        }
                      },
                      "id": 3359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13517:6:3",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2652,
                      "src": "13508:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13527:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13508:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3365,
                  "nodeType": "IfStatement",
                  "src": "13504:53:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3362,
                        "name": "AmountToSwapIsZero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5227,
                        "src": "13537:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13537:20:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3364,
                    "nodeType": "RevertStatement",
                    "src": "13530:27:3"
                  }
                },
                {
                  "assignments": [
                    3368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3368,
                      "mutability": "mutable",
                      "name": "_HAT",
                      "nameLocation": "13574:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3580,
                      "src": "13567:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13075",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3367,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3366,
                          "name": "IERC20",
                          "nameLocations": [
                            "13567:6:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13075,
                          "src": "13567:6:3"
                        },
                        "referencedDeclaration": 13075,
                        "src": "13567:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3370,
                  "initialValue": {
                    "id": 3369,
                    "name": "HAT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2697,
                    "src": "13581:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13567:17:3"
                },
                {
                  "expression": {
                    "id": 3387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 3371,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "13595:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "13604:12:3",
                          "memberName": "hatsReceived",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2656,
                          "src": "13595:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 3374,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "13618:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3375,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "13627:12:3",
                          "memberName": "amountUnused",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2654,
                          "src": "13618:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3376,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13594:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3379,
                              "name": "_asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3307,
                              "src": "13667:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3378,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13075,
                            "src": "13660:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$13075_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13660:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$13075",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "expression": {
                            "id": 3381,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "13676:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3382,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13685:6:3",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2652,
                          "src": "13676:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3383,
                          "name": "_amountOutMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3312,
                          "src": "13693:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3384,
                          "name": "_routingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3314,
                          "src": "13712:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3385,
                          "name": "_routingPayload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3316,
                          "src": "13730:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$13075",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "id": 3377,
                        "name": "_swapTokenForHAT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3781,
                        "src": "13643:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13075_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_calldata_ptr_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (contract IERC20,uint256,uint256,address,bytes calldata) returns (uint256,uint256)"
                        }
                      },
                      "id": 3386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13643:103:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "13594:152:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3388,
                  "nodeType": "ExpressionStatement",
                  "src": "13594:152:3"
                },
                {
                  "expression": {
                    "id": 3405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3389,
                        "name": "swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "13765:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                          "typeString": "struct HATVaultsRegistry.SwapData memory"
                        }
                      },
                      "id": 3391,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13774:23:3",
                      "memberName": "governanceAmountSwapped",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2660,
                      "src": "13765:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3392,
                                  "name": "swapData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3323,
                                  "src": "13801:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                    "typeString": "struct HATVaultsRegistry.SwapData memory"
                                  }
                                },
                                "id": 3393,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13810:6:3",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2652,
                                "src": "13801:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 3394,
                                  "name": "swapData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3323,
                                  "src": "13819:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                    "typeString": "struct HATVaultsRegistry.SwapData memory"
                                  }
                                },
                                "id": 3395,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13828:12:3",
                                "memberName": "amountUnused",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2654,
                                "src": "13819:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13801:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3397,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13800:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 3398,
                            "name": "governanceHatReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2686,
                            "src": "13844:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3400,
                          "indexExpression": {
                            "id": 3399,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3307,
                            "src": "13864:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13844:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13800:71:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 3402,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3323,
                          "src": "13874:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                            "typeString": "struct HATVaultsRegistry.SwapData memory"
                          }
                        },
                        "id": 3403,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13883:6:3",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2652,
                        "src": "13874:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13800:89:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13765:124:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3406,
                  "nodeType": "ExpressionStatement",
                  "src": "13765:124:3"
                },
                {
                  "expression": {
                    "id": 3419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3407,
                        "name": "governanceHatReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2686,
                        "src": "13899:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3409,
                      "indexExpression": {
                        "id": 3408,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3307,
                        "src": "13919:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13899:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3410,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "13929:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3411,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13938:12:3",
                          "memberName": "amountUnused",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2654,
                          "src": "13929:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 3412,
                            "name": "governanceHatReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2686,
                            "src": "13953:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3414,
                          "indexExpression": {
                            "id": 3413,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3307,
                            "src": "13973:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13953:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13929:51:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 3416,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3323,
                          "src": "13983:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                            "typeString": "struct HATVaultsRegistry.SwapData memory"
                          }
                        },
                        "id": 3417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13992:6:3",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2652,
                        "src": "13983:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13929:69:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13899:99:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3420,
                  "nodeType": "ExpressionStatement",
                  "src": "13899:99:3"
                },
                {
                  "body": {
                    "id": 3550,
                    "nodeType": "Block",
                    "src": "14061:1555:3",
                    "statements": [
                      {
                        "assignments": [
                          3433
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3433,
                            "mutability": "mutable",
                            "name": "hackerReward",
                            "nameLocation": "14083:12:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3550,
                            "src": "14075:20:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3432,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14075:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3447,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3434,
                                "name": "swapData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3323,
                                "src": "14098:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                  "typeString": "struct HATVaultsRegistry.SwapData memory"
                                }
                              },
                              "id": 3435,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14107:12:3",
                              "memberName": "hatsReceived",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2656,
                              "src": "14098:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 3436,
                                  "name": "hackersHatReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2682,
                                  "src": "14122:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 3438,
                                "indexExpression": {
                                  "id": 3437,
                                  "name": "_asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3307,
                                  "src": "14139:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14122:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3442,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 3439,
                                  "name": "_beneficiaries",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3310,
                                  "src": "14147:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 3441,
                                "indexExpression": {
                                  "id": 3440,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3422,
                                  "src": "14162:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14147:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14122:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14098:67:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 3444,
                              "name": "swapData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3323,
                              "src": "14168:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                "typeString": "struct HATVaultsRegistry.SwapData memory"
                              }
                            },
                            "id": 3445,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14177:6:3",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2652,
                            "src": "14168:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14098:85:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14075:108:3"
                      },
                      {
                        "assignments": [
                          3449
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3449,
                            "mutability": "mutable",
                            "name": "hackerAmountSwapped",
                            "nameLocation": "14205:19:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3550,
                            "src": "14197:27:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3448,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14197:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3467,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3450,
                                      "name": "swapData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3323,
                                      "src": "14228:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                        "typeString": "struct HATVaultsRegistry.SwapData memory"
                                      }
                                    },
                                    "id": 3451,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14237:6:3",
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2652,
                                    "src": "14228:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3452,
                                      "name": "swapData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3323,
                                      "src": "14246:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                        "typeString": "struct HATVaultsRegistry.SwapData memory"
                                      }
                                    },
                                    "id": 3453,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14255:12:3",
                                    "memberName": "amountUnused",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2654,
                                    "src": "14246:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14228:39:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 3455,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14227:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 3456,
                                  "name": "hackersHatReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2682,
                                  "src": "14271:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 3458,
                                "indexExpression": {
                                  "id": 3457,
                                  "name": "_asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3307,
                                  "src": "14288:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14271:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3462,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 3459,
                                  "name": "_beneficiaries",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3310,
                                  "src": "14296:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 3461,
                                "indexExpression": {
                                  "id": 3460,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3422,
                                  "src": "14311:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14296:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14271:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14227:87:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 3464,
                              "name": "swapData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3323,
                              "src": "14317:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                "typeString": "struct HATVaultsRegistry.SwapData memory"
                              }
                            },
                            "id": 3465,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14326:6:3",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2652,
                            "src": "14317:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14227:105:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14197:135:3"
                      },
                      {
                        "expression": {
                          "id": 3472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3468,
                              "name": "swapData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3323,
                              "src": "14346:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                "typeString": "struct HATVaultsRegistry.SwapData memory"
                              }
                            },
                            "id": 3470,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14355:17:3",
                            "memberName": "totalHackerReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2658,
                            "src": "14346:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3471,
                            "name": "hackerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3433,
                            "src": "14376:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14346:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3473,
                        "nodeType": "ExpressionStatement",
                        "src": "14346:42:3"
                      },
                      {
                        "expression": {
                          "id": 3494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3474,
                                "name": "hackersHatReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2682,
                                "src": "14402:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3479,
                              "indexExpression": {
                                "id": 3475,
                                "name": "_asset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3307,
                                "src": "14419:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14402:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3480,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3476,
                                "name": "_beneficiaries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3310,
                                "src": "14427:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 3478,
                              "indexExpression": {
                                "id": 3477,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3422,
                                "src": "14442:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14427:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14402:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3481,
                                  "name": "swapData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3323,
                                  "src": "14448:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                    "typeString": "struct HATVaultsRegistry.SwapData memory"
                                  }
                                },
                                "id": 3482,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14457:12:3",
                                "memberName": "amountUnused",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2654,
                                "src": "14448:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 3483,
                                    "name": "hackersHatReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2682,
                                    "src": "14472:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 3485,
                                  "indexExpression": {
                                    "id": 3484,
                                    "name": "_asset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3307,
                                    "src": "14489:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14472:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 3489,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 3486,
                                    "name": "_beneficiaries",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3310,
                                    "src": "14497:14:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 3488,
                                  "indexExpression": {
                                    "id": 3487,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3422,
                                    "src": "14512:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14497:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14472:43:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14448:67:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 3491,
                                "name": "swapData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3323,
                                "src": "14518:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                                  "typeString": "struct HATVaultsRegistry.SwapData memory"
                                }
                              },
                              "id": 3492,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14527:6:3",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2652,
                              "src": "14518:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14448:85:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14402:131:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3495,
                        "nodeType": "ExpressionStatement",
                        "src": "14402:131:3"
                      },
                      {
                        "assignments": [
                          3497
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3497,
                            "mutability": "mutable",
                            "name": "tokenLock",
                            "nameLocation": "14555:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 3550,
                            "src": "14547:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3496,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14547:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3498,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14547:17:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3499,
                            "name": "hackerReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3433,
                            "src": "14582:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14597:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14582:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3540,
                        "nodeType": "IfStatement",
                        "src": "14578:933:3",
                        "trueBody": {
                          "id": 3539,
                          "nodeType": "Block",
                          "src": "14600:911:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 3530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3502,
                                  "name": "tokenLock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3497,
                                  "src": "14681:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 3507,
                                          "name": "_HAT",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3368,
                                          "src": "14755:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$13075",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$13075",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 3506,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "14747:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3505,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "14747:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3508,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14747:13:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                      "id": 3509,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14782:42:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "value": "0x0000000000000000000000000000000000000000"
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 3510,
                                        "name": "_beneficiaries",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3310,
                                        "src": "14893:14:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                          "typeString": "address[] calldata"
                                        }
                                      },
                                      "id": 3512,
                                      "indexExpression": {
                                        "id": 3511,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3422,
                                        "src": "14908:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14893:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 3513,
                                      "name": "hackerReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3433,
                                      "src": "14932:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 3514,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "15032:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 3515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "15038:9:3",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "15032:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3516,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15143:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 3517,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "15149:9:3",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15143:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 3518,
                                          "name": "generalParameters",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2689,
                                          "src": "15161:17:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                                            "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                                          }
                                        },
                                        "id": 3519,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "15179:18:3",
                                        "memberName": "hatVestingDuration",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5182,
                                        "src": "15161:36:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15143:54:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 3521,
                                        "name": "generalParameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2689,
                                        "src": "15225:17:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                                          "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                                        }
                                      },
                                      "id": 3522,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "15243:17:3",
                                      "memberName": "hatVestingPeriods",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5184,
                                      "src": "15225:35:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "30",
                                      "id": 3523,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15282:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    {
                                      "hexValue": "30",
                                      "id": 3524,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15325:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 3525,
                                          "name": "ITokenLock",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6695,
                                          "src": "15360:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ITokenLock_$6695_$",
                                            "typeString": "type(contract ITokenLock)"
                                          }
                                        },
                                        "id": 3526,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "15371:12:3",
                                        "memberName": "Revocability",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6618,
                                        "src": "15360:23:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Revocability_$6618_$",
                                          "typeString": "type(enum ITokenLock.Revocability)"
                                        }
                                      },
                                      "id": 3527,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "15384:8:3",
                                      "memberName": "Disabled",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6617,
                                      "src": "15360:32:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Revocability_$6618",
                                        "typeString": "enum ITokenLock.Revocability"
                                      }
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 3528,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15414:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      {
                                        "typeIdentifier": "t_enum$_Revocability_$6618",
                                        "typeString": "enum ITokenLock.Revocability"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3503,
                                      "name": "tokenLockFactory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2692,
                                      "src": "14693:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ITokenLockFactory_$6732",
                                        "typeString": "contract ITokenLockFactory"
                                      }
                                    },
                                    "id": 3504,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14710:15:3",
                                    "memberName": "createTokenLock",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6731,
                                    "src": "14693:32:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Revocability_$6618_$_t_bool_$returns$_t_address_$",
                                      "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,enum ITokenLock.Revocability,bool) external returns (address)"
                                    }
                                  },
                                  "id": 3529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14693:743:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14681:755:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3531,
                              "nodeType": "ExpressionStatement",
                              "src": "14681:755:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3535,
                                    "name": "tokenLock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3497,
                                    "src": "15472:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3536,
                                    "name": "hackerReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3433,
                                    "src": "15483:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3532,
                                    "name": "_HAT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3368,
                                    "src": "15454:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$13075",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15459:12:3",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14042,
                                  "src": "15454:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13075_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 3537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15454:42:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3538,
                              "nodeType": "ExpressionStatement",
                              "src": "15454:42:3"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3542,
                                "name": "_beneficiaries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3310,
                                "src": "15541:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 3544,
                              "indexExpression": {
                                "id": 3543,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3422,
                                "src": "15556:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15541:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3545,
                              "name": "hackerAmountSwapped",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3449,
                              "src": "15560:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3546,
                              "name": "hackerReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3433,
                              "src": "15581:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3547,
                              "name": "tokenLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3497,
                              "src": "15595:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3541,
                            "name": "SwapAndSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5337,
                            "src": "15529:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,address)"
                            }
                          },
                          "id": 3548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15529:76:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3549,
                        "nodeType": "EmitStatement",
                        "src": "15524:81:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3425,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3422,
                      "src": "14029:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3426,
                        "name": "_beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "14033:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 3427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14048:6:3",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14033:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14029:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3551,
                  "initializationExpression": {
                    "assignments": [
                      3422
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3422,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14022:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 3551,
                        "src": "14014:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3421,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14014:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3424,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14026:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14014:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14056:3:3",
                      "subExpression": {
                        "id": 3429,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3422,
                        "src": "14056:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3431,
                    "nodeType": "ExpressionStatement",
                    "src": "14056:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "14009:1607:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3555,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11235,
                          "src": "15643:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15643:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3557,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "15652:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3558,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15661:12:3",
                          "memberName": "hatsReceived",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2656,
                          "src": "15652:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 3559,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "15676:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3560,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15685:17:3",
                          "memberName": "totalHackerReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2658,
                          "src": "15676:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15652:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3552,
                        "name": "_HAT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3368,
                        "src": "15625:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15630:12:3",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14042,
                      "src": "15625:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13075_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15625:78:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3563,
                  "nodeType": "ExpressionStatement",
                  "src": "15625:78:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3565,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11235,
                          "src": "15730:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15730:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3567,
                          "name": "swapData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3323,
                          "src": "15739:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                            "typeString": "struct HATVaultsRegistry.SwapData memory"
                          }
                        },
                        "id": 3568,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15748:23:3",
                        "memberName": "governanceAmountSwapped",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2660,
                        "src": "15739:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3569,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "15773:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15782:12:3",
                          "memberName": "hatsReceived",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2656,
                          "src": "15773:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 3571,
                            "name": "swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3323,
                            "src": "15797:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapData_$2661_memory_ptr",
                              "typeString": "struct HATVaultsRegistry.SwapData memory"
                            }
                          },
                          "id": 3572,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15806:17:3",
                          "memberName": "totalHackerReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2658,
                          "src": "15797:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15773:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15833:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15825:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3574,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15825:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15825:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3564,
                      "name": "SwapAndSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5337,
                      "src": "15718:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address)"
                      }
                    },
                    "id": 3578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15718:118:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3579,
                  "nodeType": "EmitStatement",
                  "src": "15713:123:3"
                }
              ]
            },
            "baseFunctions": [
              5540
            ],
            "documentation": {
              "id": 3305,
              "nodeType": "StructuredDocumentation",
              "src": "12926:52:3",
              "text": "@notice See {IHATVaultsRegistry-swapAndSend}. "
            },
            "functionSelector": "e2b001bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3319,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3318,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13195:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11226,
                  "src": "13195:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "13195:9:3"
              }
            ],
            "name": "swapAndSend",
            "nameLocation": "12992:11:3",
            "parameters": {
              "id": 3317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3307,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "13021:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3581,
                  "src": "13013:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13013:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3310,
                  "mutability": "mutable",
                  "name": "_beneficiaries",
                  "nameLocation": "13056:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3581,
                  "src": "13037:33:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13037:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3309,
                    "nodeType": "ArrayTypeName",
                    "src": "13037:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3312,
                  "mutability": "mutable",
                  "name": "_amountOutMinimum",
                  "nameLocation": "13088:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3581,
                  "src": "13080:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13080:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3314,
                  "mutability": "mutable",
                  "name": "_routingContract",
                  "nameLocation": "13123:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3581,
                  "src": "13115:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13115:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3316,
                  "mutability": "mutable",
                  "name": "_routingPayload",
                  "nameLocation": "13164:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3581,
                  "src": "13149:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3315,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13149:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13003:182:3"
            },
            "returnParameters": {
              "id": 3320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13205:0:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3591,
            "nodeType": "FunctionDefinition",
            "src": "15919:122:3",
            "nodes": [],
            "body": {
              "id": 3590,
              "nodeType": "Block",
              "src": "16000:41:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3588,
                    "name": "generalParameters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2689,
                    "src": "16017:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage",
                      "typeString": "struct IHATVaultsRegistry.GeneralParameters storage ref"
                    }
                  },
                  "functionReturnParameters": 3587,
                  "id": 3589,
                  "nodeType": "Return",
                  "src": "16010:24:3"
                }
              ]
            },
            "baseFunctions": [
              5547
            ],
            "documentation": {
              "id": 3582,
              "nodeType": "StructuredDocumentation",
              "src": "15850:61:3",
              "text": "@notice See {IHATVaultsRegistry-getGeneralParameters}. "
            },
            "functionSelector": "2cc85f97",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGeneralParameters",
            "nameLocation": "15928:20:3",
            "parameters": {
              "id": 3583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15948:2:3"
            },
            "returnParameters": {
              "id": 3587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3591,
                  "src": "15974:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GeneralParameters_$5197_memory_ptr",
                    "typeString": "struct IHATVaultsRegistry.GeneralParameters"
                  },
                  "typeName": {
                    "id": 3585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3584,
                      "name": "GeneralParameters",
                      "nameLocations": [
                        "15974:17:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5197,
                      "src": "15974:17:3"
                    },
                    "referencedDeclaration": 5197,
                    "src": "15974:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GeneralParameters_$5197_storage_ptr",
                      "typeString": "struct IHATVaultsRegistry.GeneralParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15973:26:3"
            },
            "scope": 3782,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3601,
            "nodeType": "FunctionDefinition",
            "src": "16110:100:3",
            "nodes": [],
            "body": {
              "id": 3600,
              "nodeType": "Block",
              "src": "16170:40:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3597,
                      "name": "hatVaults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2672,
                      "src": "16187:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "16197:6:3",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "16187:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3596,
                  "id": 3599,
                  "nodeType": "Return",
                  "src": "16180:23:3"
                }
              ]
            },
            "baseFunctions": [
              5553
            ],
            "documentation": {
              "id": 3592,
              "nodeType": "StructuredDocumentation",
              "src": "16047:58:3",
              "text": "@notice See {IHATVaultsRegistry-getNumberOfVaults}. "
            },
            "functionSelector": "d3e0bc56",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumberOfVaults",
            "nameLocation": "16119:17:3",
            "parameters": {
              "id": 3593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16136:2:3"
            },
            "returnParameters": {
              "id": 3596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3601,
                  "src": "16161:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16161:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16160:9:3"
            },
            "scope": 3782,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3619,
            "nodeType": "FunctionDefinition",
            "src": "16278:252:3",
            "nodes": [],
            "body": {
              "id": 3618,
              "nodeType": "Block",
              "src": "16378:152:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3609,
                        "name": "_bountyGovernanceHAT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3604,
                        "src": "16392:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 3610,
                        "name": "_bountyHackerHATVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3606,
                        "src": "16415:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16392:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 3612,
                      "name": "MAX_HAT_SPLIT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "16440:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16392:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3617,
                  "nodeType": "IfStatement",
                  "src": "16388:135:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3614,
                        "name": "TotalHatsSplitPercentageShouldBeUpToMaxHATSplit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5236,
                        "src": "16474:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16474:49:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3616,
                    "nodeType": "RevertStatement",
                    "src": "16467:56:3"
                  }
                }
              ]
            },
            "baseFunctions": [
              5397
            ],
            "documentation": {
              "id": 3602,
              "nodeType": "StructuredDocumentation",
              "src": "16216:57:3",
              "text": "@notice See {IHATVaultsRegistry-validateHATSplit}. "
            },
            "functionSelector": "70cb13b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateHATSplit",
            "nameLocation": "16287:16:3",
            "parameters": {
              "id": 3607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3604,
                  "mutability": "mutable",
                  "name": "_bountyGovernanceHAT",
                  "nameLocation": "16312:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3619,
                  "src": "16304:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16304:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3606,
                  "mutability": "mutable",
                  "name": "_bountyHackerHATVested",
                  "nameLocation": "16342:22:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3619,
                  "src": "16334:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16334:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16303:62:3"
            },
            "returnParameters": {
              "id": 3608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16378:0:3"
            },
            "scope": 3782,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3640,
            "nodeType": "FunctionDefinition",
            "src": "16605:223:3",
            "nodes": [],
            "body": {
              "id": 3639,
              "nodeType": "Block",
              "src": "16676:152:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3625,
                      "name": "_challengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3622,
                      "src": "16690:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16709:6:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "16690:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3631,
                  "nodeType": "IfStatement",
                  "src": "16686:63:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3628,
                        "name": "ChallengePeriodTooShort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5239,
                        "src": "16724:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16724:25:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3630,
                    "nodeType": "RevertStatement",
                    "src": "16717:32:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3632,
                      "name": "_challengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3622,
                      "src": "16763:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 3633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16782:6:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_432000_by_1",
                        "typeString": "int_const 432000"
                      },
                      "value": "5"
                    },
                    "src": "16763:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3638,
                  "nodeType": "IfStatement",
                  "src": "16759:62:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3635,
                        "name": "ChallengePeriodTooLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5242,
                        "src": "16797:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16797:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3637,
                    "nodeType": "RevertStatement",
                    "src": "16790:31:3"
                  }
                }
              ]
            },
            "baseFunctions": [
              5427
            ],
            "documentation": {
              "id": 3620,
              "nodeType": "StructuredDocumentation",
              "src": "16536:64:3",
              "text": "@notice See {IHATVaultsRegistry-validateChallengePeriod}. "
            },
            "functionSelector": "ebf7830c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateChallengePeriod",
            "nameLocation": "16614:23:3",
            "parameters": {
              "id": 3623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3622,
                  "mutability": "mutable",
                  "name": "_challengePeriod",
                  "nameLocation": "16646:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3640,
                  "src": "16638:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16638:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16637:26:3"
            },
            "returnParameters": {
              "id": 3624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16676:0:3"
            },
            "scope": 3782,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3661,
            "nodeType": "FunctionDefinition",
            "src": "16910:266:3",
            "nodes": [],
            "body": {
              "id": 3660,
              "nodeType": "Block",
              "src": "16995:181:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3646,
                      "name": "_challengeTimeOutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3643,
                      "src": "17009:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 3647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17035:6:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_172800_by_1",
                        "typeString": "int_const 172800"
                      },
                      "value": "2"
                    },
                    "src": "17009:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3652,
                  "nodeType": "IfStatement",
                  "src": "17005:77:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3649,
                        "name": "ChallengeTimeOutPeriodTooShort",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5245,
                        "src": "17050:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17050:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3651,
                    "nodeType": "RevertStatement",
                    "src": "17043:39:3"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3653,
                      "name": "_challengeTimeOutPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3643,
                      "src": "17096:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3835",
                      "id": 3654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17122:7:3",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7344000_by_1",
                        "typeString": "int_const 7344000"
                      },
                      "value": "85"
                    },
                    "src": "17096:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3659,
                  "nodeType": "IfStatement",
                  "src": "17092:77:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3656,
                        "name": "ChallengeTimeOutPeriodTooLong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5248,
                        "src": "17138:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17138:31:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3658,
                    "nodeType": "RevertStatement",
                    "src": "17131:38:3"
                  }
                }
              ]
            },
            "baseFunctions": [
              5433
            ],
            "documentation": {
              "id": 3641,
              "nodeType": "StructuredDocumentation",
              "src": "16834:71:3",
              "text": "@notice See {IHATVaultsRegistry-validateChallengeTimeOutPeriod}. "
            },
            "functionSelector": "2ac60b7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateChallengeTimeOutPeriod",
            "nameLocation": "16919:30:3",
            "parameters": {
              "id": 3644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3643,
                  "mutability": "mutable",
                  "name": "_challengeTimeOutPeriod",
                  "nameLocation": "16958:23:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3661,
                  "src": "16950:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16950:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16949:33:3"
            },
            "returnParameters": {
              "id": 3645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16995:0:3"
            },
            "scope": 3782,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3781,
            "nodeType": "FunctionDefinition",
            "src": "17588:1066:3",
            "nodes": [],
            "body": {
              "id": 3780,
              "nodeType": "Block",
              "src": "17846:808:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3682,
                      "mutability": "mutable",
                      "name": "_HAT",
                      "nameLocation": "17863:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3780,
                      "src": "17856:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13075",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3681,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3680,
                          "name": "IERC20",
                          "nameLocations": [
                            "17856:6:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13075,
                          "src": "17856:6:3"
                        },
                        "referencedDeclaration": 13075,
                        "src": "17856:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3684,
                  "initialValue": {
                    "id": 3683,
                    "name": "HAT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2697,
                    "src": "17870:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17856:17:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$13075",
                      "typeString": "contract IERC20"
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3685,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3665,
                      "src": "17887:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3686,
                      "name": "_HAT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3682,
                      "src": "17897:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "17887:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3693,
                  "nodeType": "IfStatement",
                  "src": "17883:64:3",
                  "trueBody": {
                    "id": 3692,
                    "nodeType": "Block",
                    "src": "17903:44:3",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 3688,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3667,
                              "src": "17925:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 3689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17934:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 3690,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17924:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_rational_0_by_1_$",
                            "typeString": "tuple(uint256,int_const 0)"
                          }
                        },
                        "functionReturnParameters": 3679,
                        "id": 3691,
                        "nodeType": "Return",
                        "src": "17917:19:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3698,
                        "name": "_routingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3671,
                        "src": "17984:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3699,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3667,
                        "src": "18002:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3695,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3665,
                            "src": "17964:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3694,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "17957:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$13075_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17957:14:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17972:11:3",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14112,
                      "src": "17957:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13075_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17957:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3701,
                  "nodeType": "ExpressionStatement",
                  "src": "17957:53:3"
                },
                {
                  "assignments": [
                    3703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3703,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "18028:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3780,
                      "src": "18020:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3702,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18020:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3711,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3708,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18067:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                              "typeString": "contract HATVaultsRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                              "typeString": "contract HATVaultsRegistry"
                            }
                          ],
                          "id": 3707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18059:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18059:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18059:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3704,
                        "name": "_HAT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3682,
                        "src": "18044:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18049:9:3",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13032,
                      "src": "18044:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18044:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18020:53:3"
                },
                {
                  "assignments": [
                    3713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3713,
                      "mutability": "mutable",
                      "name": "assetBalanceBefore",
                      "nameLocation": "18091:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3780,
                      "src": "18083:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3712,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18083:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3721,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3718,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18137:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                              "typeString": "contract HATVaultsRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                              "typeString": "contract HATVaultsRegistry"
                            }
                          ],
                          "id": 3717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18129:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18129:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18129:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3714,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3665,
                        "src": "18112:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18119:9:3",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13032,
                      "src": "18112:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18112:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18083:60:3"
                },
                {
                  "assignments": [
                    3723,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3723,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "18219:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 3780,
                      "src": "18214:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3722,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "18214:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3728,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3726,
                        "name": "_routingPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3673,
                        "src": "18253:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 3724,
                        "name": "_routingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3671,
                        "src": "18231:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18248:4:3",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "18231:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18231:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18213:56:3"
                },
                {
                  "condition": {
                    "id": 3730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "18283:8:3",
                    "subExpression": {
                      "id": 3729,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3723,
                      "src": "18284:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3734,
                  "nodeType": "IfStatement",
                  "src": "18279:33:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3731,
                        "name": "SwapFailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5230,
                        "src": "18300:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18300:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3733,
                    "nodeType": "RevertStatement",
                    "src": "18293:19:3"
                  }
                },
                {
                  "expression": {
                    "id": 3745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3735,
                      "name": "hatsReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3676,
                      "src": "18322:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3740,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "18360:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                                  "typeString": "contract HATVaultsRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                                  "typeString": "contract HATVaultsRegistry"
                                }
                              ],
                              "id": 3739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18352:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3738,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18352:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18352:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3736,
                            "name": "_HAT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3682,
                            "src": "18337:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 3737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18342:9:3",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13032,
                          "src": "18337:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 3742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18337:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3743,
                        "name": "balanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3703,
                        "src": "18369:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18337:45:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18322:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3746,
                  "nodeType": "ExpressionStatement",
                  "src": "18322:60:3"
                },
                {
                  "expression": {
                    "id": 3760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3747,
                      "name": "amountUnused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3678,
                      "src": "18392:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3748,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3667,
                        "src": "18407:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3749,
                              "name": "assetBalanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3713,
                              "src": "18418:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3754,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "18464:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                                        "typeString": "contract HATVaultsRegistry"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_HATVaultsRegistry_$3782",
                                        "typeString": "contract HATVaultsRegistry"
                                      }
                                    ],
                                    "id": 3753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "18456:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3752,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18456:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18456:13:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 3750,
                                  "name": "_asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3665,
                                  "src": "18439:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$13075",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 3751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18446:9:3",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13032,
                                "src": "18439:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 3756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18439:31:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18418:52:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3758,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18417:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18407:64:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18392:79:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3761,
                  "nodeType": "ExpressionStatement",
                  "src": "18392:79:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3762,
                      "name": "hatsReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3676,
                      "src": "18485:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3763,
                      "name": "_amountOutMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3669,
                      "src": "18500:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18485:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3768,
                  "nodeType": "IfStatement",
                  "src": "18481:87:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3765,
                        "name": "AmountSwappedLessThanMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5233,
                        "src": "18538:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18538:30:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3767,
                    "nodeType": "RevertStatement",
                    "src": "18531:37:3"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3775,
                            "name": "_routingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3671,
                            "src": "18626:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18618:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3773,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18618:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18618:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18645:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3770,
                            "name": "_asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3665,
                            "src": "18598:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$13075",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 3769,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13075,
                          "src": "18591:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$13075_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18591:14:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13075",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18606:11:3",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14112,
                      "src": "18591:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13075_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13075_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18591:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3779,
                  "nodeType": "ExpressionStatement",
                  "src": "18591:56:3"
                }
              ]
            },
            "documentation": {
              "id": 3662,
              "nodeType": "StructuredDocumentation",
              "src": "17186:397:3",
              "text": " @dev Use the given routing contract to swap the given token to HAT token\n @param _asset The token to swap\n @param _amount Amount of token to swap\n @param _amountOutMinimum Minimum amount of HAT tokens at swap\n @param _routingContract Routing contract to call for the swap\n @param _routingPayload Payload to send to the _routingContract for the \n swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapTokenForHAT",
            "nameLocation": "17597:16:3",
            "parameters": {
              "id": 3674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3665,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nameLocation": "17630:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "17623:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13075",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3664,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3663,
                      "name": "IERC20",
                      "nameLocations": [
                        "17623:6:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13075,
                      "src": "17623:6:3"
                    },
                    "referencedDeclaration": 13075,
                    "src": "17623:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3667,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "17654:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "17646:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17646:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3669,
                  "mutability": "mutable",
                  "name": "_amountOutMinimum",
                  "nameLocation": "17679:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "17671:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17671:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3671,
                  "mutability": "mutable",
                  "name": "_routingContract",
                  "nameLocation": "17714:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "17706:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17706:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3673,
                  "mutability": "mutable",
                  "name": "_routingPayload",
                  "nameLocation": "17755:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "17740:30:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3672,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17740:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17613:158:3"
            },
            "returnParameters": {
              "id": 3679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3676,
                  "mutability": "mutable",
                  "name": "hatsReceived",
                  "nameLocation": "17806:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "17798:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17798:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3678,
                  "mutability": "mutable",
                  "name": "amountUnused",
                  "nameLocation": "17828:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "17820:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17820:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17797:44:3"
            },
            "scope": 3782,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2643,
              "name": "IHATVaultsRegistry",
              "nameLocations": [
                "1612:18:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5554,
              "src": "1612:18:3"
            },
            "id": 2644,
            "nodeType": "InheritanceSpecifier",
            "src": "1612:18:3"
          },
          {
            "baseName": {
              "id": 2645,
              "name": "Ownable",
              "nameLocations": [
                "1632:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11307,
              "src": "1632:7:3"
            },
            "id": 2646,
            "nodeType": "InheritanceSpecifier",
            "src": "1632:7:3"
          }
        ],
        "canonicalName": "HATVaultsRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2642,
          "nodeType": "StructuredDocumentation",
          "src": "464:1117:3",
          "text": "@title Registry to deploy Hats.finance vaults and manage shared parameters\n @author Hats.finance\n @notice Hats.finance is a proactive bounty protocol for white hat hackers and\n security experts, where projects, community members, and stakeholders\n incentivize protocol security and responsible disclosure.\n Hats create scalable vaults using the project’s own token. The value of the\n bounty increases with the success of the token and project.\n The owner of the registry has the permission to set time limits and bounty\n parameters and change vaults' info, and to set the other registry roles -\n fee setter and arbitrator.\n The arbitrator can challenge submitted claims for bounty payouts made by\n vaults' committees, approve them with a different bounty percentage or\n dismiss them.\n The fee setter can set the fee on withdrawals on all vaults.\n This project is open-source and can be found at:\n https://github.com/hats-finance/hats-contracts\n @dev New hats.finance vaults should be created through a call to {createVault}\n so that they are linked to the registry"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3782,
          11307,
          14626,
          5554
        ],
        "name": "HATVaultsRegistry",
        "nameLocation": "1591:17:3",
        "scope": 3783,
        "usedErrors": [
          5200,
          5203,
          5206,
          5209,
          5212,
          5215,
          5218,
          5221,
          5224,
          5227,
          5230,
          5233,
          5236,
          5239,
          5242,
          5245,
          5248,
          5251
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 3
}